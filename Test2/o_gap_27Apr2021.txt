Script started on Tue 27 Apr 2021 05:01:37 PM CDT
Intel Suite:
Copyright (C) 2009-2019 Intel Corporation. All rights reserved.
Intel(R) VTune(TM) Amplifier 2019 (build 591499)
[1;34m==>[0m 63 installed packages
-- [0;35mlinux-ubuntu16.04-broadwell[0m / [0;32mgcc@5.4.0[0m ----------------------
autoconf[0;36m@2.69[0m                gcc[0;36m@9.3.0[0m        libffi[0;36m@3.3[0m           mpfr[0;36m@4.0.2[0m            python[0;36m@3.7.7[0m
autoconf[0;36m@2.69[0m                gcc[0;36m@10.1.0[0m       libiconv[0;36m@1.16[0m        ncurses[0;36m@6.2[0m           python[0;36m@3.8.0[0m
autoconf-archive[0;36m@2019.01.06[0m  gdbm[0;36m@1.18.1[0m      libidn2[0;36m@2.1.1a[0m       numactl[0;36m@2.0.14[0m        readline[0;36m@8.0[0m
automake[0;36m@1.16.2[0m              gettext[0;36m@0.20.2[0m   libpciaccess[0;36m@0.16[0m    openmpi[0;36m@4.0.5[0m         sqlite[0;36m@3.31.1[0m
automake[0;36m@1.16.3[0m              git[0;36m@2.26.0[0m       libsigsegv[0;36m@2.12[0m      openssl[0;36m@1.1.1g[0m        tar[0;36m@1.32[0m
berkeley-db[0;36m@18.1.40[0m          gmp[0;36m@6.1.2[0m        libtool[0;36m@2.4.6[0m        openssl[0;36m@1.1.1j[0m        util-macros[0;36m@1.19.1[0m
boost[0;36m@1.75.0[0m                 gmp[0;36m@6.2.1[0m        libunistring[0;36m@0.9.10[0m  pcre2[0;36m@10.31[0m           valgrind[0;36m@3.16.1[0m
bzip2[0;36m@1.0.8[0m                  hwloc[0;36m@2.4.0[0m      libxml2[0;36m@2.9.10[0m       perl[0;36m@5.30.2[0m           xz[0;36m@5.2.5[0m
cmake[0;36m@3.19.5[0m                 isl[0;36m@0.18[0m         libxml2[0;36m@2.9.10[0m       perl[0;36m@5.32.1[0m           xz[0;36m@5.2.5[0m
curl[0;36m@7.68.0[0m                  isl[0;36m@0.20[0m         m4[0;36m@1.4.18[0m            pkgconf[0;36m@1.6.3[0m         zlib[0;36m@1.2.11[0m
diffutils[0;36m@3.7[0m                isl[0;36m@0.21[0m         mpc[0;36m@1.1.0[0m            pkgconf[0;36m@1.7.3[0m         zstd[0;36m@1.4.4[0m
expat[0;36m@2.2.9[0m                  libbsd[0;36m@0.10.0[0m    mpc[0;36m@1.1.0[0m            py-pip[0;36m@19.3[0m
gcc[0;36m@6.3.0[0m                    libevent[0;36m@2.1.12[0m  mpfr[0;36m@3.1.6[0m           py-setuptools[0;36m@46.1.3[0m
[0;36mhypersparse $[0m do_gap
do_gap: command not found
[0;36mhypersparse $[0m dir
total 1844
  4 [0m[01;32mBetweennessCentrality[0m/    4 [01;32mInclude[0m/               0 o_gap_27Apr2021.txt   196 o_gap_7Feb2021.txt
  4 [01;32mBreadthFirstSearch[0m/       4 Makefile               8 o_gap_28Jan2021.txt     4 [01;32mPageRank[0m/
  4 [01;32mConnectedComponents[0m/    132 o_gap_11Mar2021.txt   32 o_gap_29Jan2021b.txt    4 [01;32mSingleSourceShortestPath[0m/
  4 [01;31mdo_gap_all[0m*             948 o_gap_24Mar2021.txt    8 o_gap_29Jan2021.txt     4 [01;32mTriangleCount[0m/
  8 GAP_2021.txt            196 o_gap_26Jan2021.txt  196 o_gap_6Feb2021.txt     84 typescript
[0;36mhypersparse $[0m ./do_gap
bash: ./do_gap: No such file or directory
[0;36mhypersparse $[0m ./do_gap_all
SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
sources: /home/faculty/davis/GAP/GAP-kron/GAP-kron_sources.mtx
    GraphBLAS type: type double size: 8
read time: 31.0366
Graph: kind: undirected, nodes: 134217726 entries: 4223264644 type: bool
    pattern symmetry: symmetric

------------------------------- threads: 40
parent only  pushonly trial:  0 threads: 40 src:   2338012     3.9002 sec
level only   pushonly trial:  0 threads: 40 src:   2338012     3.6614 sec
parent+level pushonly trial:  0 threads: 40 src:   2338012     3.9251 sec
parent only  pushpull trial:  0 threads: 40 src:   2338012     0.4374 sec
level only   pushpull trial:  0 threads: 40 src:   2338012     0.3870 sec
parent+level pushpull trial:  0 threads: 40 src:   2338012     0.5173 sec
parent only  pushonly trial:  1 threads: 40 src:  31997659     3.8292 sec
level only   pushonly trial:  1 threads: 40 src:  31997659     3.7124 sec
parent+level pushonly trial:  1 threads: 40 src:  31997659     3.9106 sec
parent only  pushpull trial:  1 threads: 40 src:  31997659     0.4614 sec
level only   pushpull trial:  1 threads: 40 src:  31997659     0.4354 sec
parent+level pushpull trial:  1 threads: 40 src:  31997659     0.5418 sec
parent only  pushonly trial:  2 threads: 40 src:  23590940     3.8656 sec
level only   pushonly trial:  2 threads: 40 src:  23590940     3.6178 sec
parent+level pushonly trial:  2 threads: 40 src:  23590940     3.8585 sec
parent only  pushpull trial:  2 threads: 40 src:  23590940     0.4784 sec
level only   pushpull trial:  2 threads: 40 src:  23590940     0.4549 sec
parent+level pushpull trial:  2 threads: 40 src:  23590940     0.5508 sec
parent only  pushonly trial:  3 threads: 40 src:  43400604     3.8150 sec
level only   pushonly trial:  3 threads: 40 src:  43400604     3.6478 sec
parent+level pushonly trial:  3 threads: 40 src:  43400604     3.8380 sec
parent only  pushpull trial:  3 threads: 40 src:  43400604     0.4999 sec
level only   pushpull trial:  3 threads: 40 src:  43400604     0.4755 sec
parent+level pushpull trial:  3 threads: 40 src:  43400604     0.5717 sec
parent only  pushonly trial:  4 threads: 40 src:  75337937     3.6041 sec
level only   pushonly trial:  4 threads: 40 src:  75337937     3.4560 sec
parent+level pushonly trial:  4 threads: 40 src:  75337937     3.6642 sec
parent only  pushpull trial:  4 threads: 40 src:  75337937     0.4965 sec
level only   pushpull trial:  4 threads: 40 src:  75337937     0.4819 sec
parent+level pushpull trial:  4 threads: 40 src:  75337937     0.5754 sec
parent only  pushonly trial:  5 threads: 40 src:    169867     3.8737 sec
level only   pushonly trial:  5 threads: 40 src:    169867     3.7347 sec
parent+level pushonly trial:  5 threads: 40 src:    169867     3.9465 sec
parent only  pushpull trial:  5 threads: 40 src:    169867     0.4410 sec
level only   pushpull trial:  5 threads: 40 src:    169867     0.3948 sec
parent+level pushpull trial:  5 threads: 40 src:    169867     0.5285 sec
parent only  pushonly trial:  6 threads: 40 src: 104041220     3.7712 sec
level only   pushonly trial:  6 threads: 40 src: 104041220     3.6859 sec
parent+level pushonly trial:  6 threads: 40 src: 104041220     3.8711 sec
parent only  pushpull trial:  6 threads: 40 src: 104041220     0.5093 sec
level only   pushpull trial:  6 threads: 40 src: 104041220     0.4467 sec
parent+level pushpull trial:  6 threads: 40 src: 104041220     0.5847 sec
parent only  pushonly trial:  7 threads: 40 src:  94177942     3.8281 sec
level only   pushonly trial:  7 threads: 40 src:  94177942     3.7037 sec
parent+level pushonly trial:  7 threads: 40 src:  94177942     3.8610 sec
parent only  pushpull trial:  7 threads: 40 src:  94177942     0.4685 sec
level only   pushpull trial:  7 threads: 40 src:  94177942     0.4393 sec
parent+level pushpull trial:  7 threads: 40 src:  94177942     0.5395 sec
parent only  pushonly trial:  8 threads: 40 src:  32871357     3.9007 sec
level only   pushonly trial:  8 threads: 40 src:  32871357     3.6284 sec
parent+level pushonly trial:  8 threads: 40 src:  32871357     3.9358 sec
parent only  pushpull trial:  8 threads: 40 src:  32871357     0.5087 sec
level only   pushpull trial:  8 threads: 40 src:  32871357     0.4491 sec
parent+level pushpull trial:  8 threads: 40 src:  32871357     0.5935 sec
parent only  pushonly trial:  9 threads: 40 src:  56230002     3.5770 sec
level only   pushonly trial:  9 threads: 40 src:  56230002     3.3772 sec
parent+level pushonly trial:  9 threads: 40 src:  56230002     3.6154 sec
parent only  pushpull trial:  9 threads: 40 src:  56230002     0.6423 sec
level only   pushpull trial:  9 threads: 40 src:  56230002     0.5707 sec
parent+level pushpull trial:  9 threads: 40 src:  56230002     0.7276 sec
parent only  pushonly trial: 10 threads: 40 src:  69883037     3.9045 sec
level only   pushonly trial: 10 threads: 40 src:  69883037     3.7303 sec
parent+level pushonly trial: 10 threads: 40 src:  69883037     4.0019 sec
parent only  pushpull trial: 10 threads: 40 src:  69883037     0.5102 sec
level only   pushpull trial: 10 threads: 40 src:  69883037     0.5008 sec
parent+level pushpull trial: 10 threads: 40 src:  69883037     0.6262 sec
parent only  pushonly trial: 11 threads: 40 src:   9346345     4.0341 sec
level only   pushonly trial: 11 threads: 40 src:   9346345     3.7149 sec
parent+level pushonly trial: 11 threads: 40 src:   9346345     4.1278 sec
parent only  pushpull trial: 11 threads: 40 src:   9346345     0.5773 sec
level only   pushpull trial: 11 threads: 40 src:   9346345     0.4804 sec
parent+level pushpull trial: 11 threads: 40 src:   9346345     0.6878 sec
parent only  pushonly trial: 12 threads: 40 src:  48915358     3.9750 sec
level only   pushonly trial: 12 threads: 40 src:  48915358     3.8618 sec
parent+level pushonly trial: 12 threads: 40 src:  48915358     3.9909 sec
parent only  pushpull trial: 12 threads: 40 src:  48915358     0.6040 sec
level only   pushpull trial: 12 threads: 40 src:  48915358     0.5565 sec
parent+level pushpull trial: 12 threads: 40 src:  48915358     0.7381 sec
parent only  pushonly trial: 13 threads: 40 src: 122571173     3.8700 sec
level only   pushonly trial: 13 threads: 40 src: 122571173     3.7446 sec
parent+level pushonly trial: 13 threads: 40 src: 122571173     4.0308 sec
parent only  pushpull trial: 13 threads: 40 src: 122571173     0.5039 sec
level only   pushpull trial: 13 threads: 40 src: 122571173     0.4823 sec
parent+level pushpull trial: 13 threads: 40 src: 122571173     0.6286 sec
parent only  pushonly trial: 14 threads: 40 src:   6183279     4.0342 sec
level only   pushonly trial: 14 threads: 40 src:   6183279     3.8341 sec
parent+level pushonly trial: 14 threads: 40 src:   6183279     4.0792 sec
parent only  pushpull trial: 14 threads: 40 src:   6183279     0.8551 sec
level only   pushpull trial: 14 threads: 40 src:   6183279     0.7812 sec
parent+level pushpull trial: 14 threads: 40 src:   6183279     0.9611 sec
parent only  pushonly trial: 15 threads: 40 src:  86323663     4.0413 sec
level only   pushonly trial: 15 threads: 40 src:  86323663     3.9324 sec
parent+level pushonly trial: 15 threads: 40 src:  86323663     4.1133 sec
parent only  pushpull trial: 15 threads: 40 src:  86323663     0.5617 sec
level only   pushpull trial: 15 threads: 40 src:  86323663     0.5505 sec
parent+level pushpull trial: 15 threads: 40 src:  86323663     0.6880 sec
parent only  pushonly trial: 16 threads: 40 src: 106725780     3.9429 sec
level only   pushonly trial: 16 threads: 40 src: 106725780     3.7705 sec
parent+level pushonly trial: 16 threads: 40 src: 106725780     4.0338 sec
parent only  pushpull trial: 16 threads: 40 src: 106725780     0.4874 sec
level only   pushpull trial: 16 threads: 40 src: 106725780     0.4919 sec
parent+level pushpull trial: 16 threads: 40 src: 106725780     0.6257 sec
parent only  pushonly trial: 17 threads: 40 src:  92389938     3.8410 sec
level only   pushonly trial: 17 threads: 40 src:  92389938     3.7151 sec
parent+level pushonly trial: 17 threads: 40 src:  92389938     3.9487 sec
parent only  pushpull trial: 17 threads: 40 src:  92389938     0.4927 sec
level only   pushpull trial: 17 threads: 40 src:  92389938     0.4754 sec
parent+level pushpull trial: 17 threads: 40 src:  92389938     0.5976 sec
parent only  pushonly trial: 18 threads: 40 src:  16210738     4.0154 sec
level only   pushonly trial: 18 threads: 40 src:  16210738     3.8988 sec
parent+level pushonly trial: 18 threads: 40 src:  16210738     4.0799 sec
parent only  pushpull trial: 18 threads: 40 src:  16210738     0.5036 sec
level only   pushpull trial: 18 threads: 40 src:  16210738     0.4655 sec
parent+level pushpull trial: 18 threads: 40 src:  16210738     0.5993 sec
parent only  pushonly trial: 19 threads: 40 src:  59816700     3.9451 sec
level only   pushonly trial: 19 threads: 40 src:  59816700     3.6990 sec
parent+level pushonly trial: 19 threads: 40 src:  59816700     3.9133 sec
parent only  pushpull trial: 19 threads: 40 src:  59816700     0.6796 sec
level only   pushpull trial: 19 threads: 40 src:  59816700     0.5961 sec
parent+level pushpull trial: 19 threads: 40 src:  59816700     0.7740 sec
parent only  pushonly trial: 20 threads: 40 src: 111669929     3.8283 sec
level only   pushonly trial: 20 threads: 40 src: 111669929     3.6901 sec
parent+level pushonly trial: 20 threads: 40 src: 111669929     3.9365 sec
parent only  pushpull trial: 20 threads: 40 src: 111669929     0.4443 sec
level only   pushpull trial: 20 threads: 40 src: 111669929     0.3988 sec
parent+level pushpull trial: 20 threads: 40 src: 111669929     0.5292 sec
parent only  pushonly trial: 21 threads: 40 src: 102831411     3.6394 sec
level only   pushonly trial: 21 threads: 40 src: 102831411     3.4390 sec
parent+level pushonly trial: 21 threads: 40 src: 102831411     3.7179 sec
parent only  pushpull trial: 21 threads: 40 src: 102831411     0.4305 sec
level only   pushpull trial: 21 threads: 40 src: 102831411     0.3857 sec
parent+level pushpull trial: 21 threads: 40 src: 102831411     0.5143 sec
parent only  pushonly trial: 22 threads: 40 src: 113384800     3.8158 sec
level only   pushonly trial: 22 threads: 40 src: 113384800     3.6824 sec
parent+level pushonly trial: 22 threads: 40 src: 113384800     3.8544 sec
parent only  pushpull trial: 22 threads: 40 src: 113384800     0.5762 sec
level only   pushpull trial: 22 threads: 40 src: 113384800     0.5138 sec
parent+level pushpull trial: 22 threads: 40 src: 113384800     0.6599 sec
parent only  pushonly trial: 23 threads: 40 src:  43872564     3.8100 sec
level only   pushonly trial: 23 threads: 40 src:  43872564     3.5701 sec
parent+level pushonly trial: 23 threads: 40 src:  43872564     3.8734 sec
parent only  pushpull trial: 23 threads: 40 src:  43872564     0.4373 sec
level only   pushpull trial: 23 threads: 40 src:  43872564     0.3919 sec
parent+level pushpull trial: 23 threads: 40 src:  43872564     0.5155 sec
parent only  pushonly trial: 24 threads: 40 src:  80508827     3.9519 sec
level only   pushonly trial: 24 threads: 40 src:  80508827     3.6044 sec
parent+level pushonly trial: 24 threads: 40 src:  80508827     3.9585 sec
parent only  pushpull trial: 24 threads: 40 src:  80508827     0.4494 sec
level only   pushpull trial: 24 threads: 40 src:  80508827     0.3842 sec
parent+level pushpull trial: 24 threads: 40 src:  80508827     0.5264 sec
parent only  pushonly trial: 25 threads: 40 src:  26105648     3.8119 sec
level only   pushonly trial: 25 threads: 40 src:  26105648     3.6848 sec
parent+level pushonly trial: 25 threads: 40 src:  26105648     3.8526 sec
parent only  pushpull trial: 25 threads: 40 src:  26105648     0.7398 sec
level only   pushpull trial: 25 threads: 40 src:  26105648     0.6499 sec
parent+level pushpull trial: 25 threads: 40 src:  26105648     0.8363 sec
parent only  pushonly trial: 26 threads: 40 src:   8807516     3.8268 sec
level only   pushonly trial: 26 threads: 40 src:   8807516     3.7007 sec
parent+level pushonly trial: 26 threads: 40 src:   8807516     3.8585 sec
parent only  pushpull trial: 26 threads: 40 src:   8807516     0.4705 sec
level only   pushpull trial: 26 threads: 40 src:   8807516     0.4459 sec
parent+level pushpull trial: 26 threads: 40 src:   8807516     0.5426 sec
parent only  pushonly trial: 27 threads: 40 src: 118452455     3.8571 sec
level only   pushonly trial: 27 threads: 40 src: 118452455     3.6614 sec
parent+level pushonly trial: 27 threads: 40 src: 118452455     3.9642 sec
parent only  pushpull trial: 27 threads: 40 src: 118452455     0.4480 sec
level only   pushpull trial: 27 threads: 40 src: 118452455     0.4187 sec
parent+level pushpull trial: 27 threads: 40 src: 118452455     0.5255 sec
parent only  pushonly trial: 28 threads: 40 src: 121818859     3.8660 sec
level only   pushonly trial: 28 threads: 40 src: 121818859     3.6374 sec
parent+level pushonly trial: 28 threads: 40 src: 121818859     3.8701 sec
parent only  pushpull trial: 28 threads: 40 src: 121818859     0.4410 sec
level only   pushpull trial: 28 threads: 40 src: 121818859     0.3925 sec
parent+level pushpull trial: 28 threads: 40 src: 121818859     0.5296 sec
parent only  pushonly trial: 29 threads: 40 src:  42361928     3.9220 sec
level only   pushonly trial: 29 threads: 40 src:  42361928     3.6579 sec
parent+level pushonly trial: 29 threads: 40 src:  42361928     3.9738 sec
parent only  pushpull trial: 29 threads: 40 src:  42361928     0.4409 sec
level only   pushpull trial: 29 threads: 40 src:  42361928     0.3898 sec
parent+level pushpull trial: 29 threads: 40 src:  42361928     0.5239 sec
parent only  pushonly trial: 30 threads: 40 src:  29493053     3.5707 sec
level only   pushonly trial: 30 threads: 40 src:  29493053     3.4050 sec
parent+level pushonly trial: 30 threads: 40 src:  29493053     3.6237 sec
parent only  pushpull trial: 30 threads: 40 src:  29493053     0.5065 sec
level only   pushpull trial: 30 threads: 40 src:  29493053     0.4448 sec
parent+level pushpull trial: 30 threads: 40 src:  29493053     0.5869 sec
parent only  pushonly trial: 31 threads: 40 src:  98461503     3.8172 sec
level only   pushonly trial: 31 threads: 40 src:  98461503     3.6632 sec
parent+level pushonly trial: 31 threads: 40 src:  98461503     3.8680 sec
parent only  pushpull trial: 31 threads: 40 src:  98461503     0.5045 sec
level only   pushpull trial: 31 threads: 40 src:  98461503     0.4520 sec
parent+level pushpull trial: 31 threads: 40 src:  98461503     0.5876 sec
parent only  pushonly trial: 32 threads: 40 src:  71931337     3.8092 sec
level only   pushonly trial: 32 threads: 40 src:  71931337     3.6077 sec
parent+level pushonly trial: 32 threads: 40 src:  71931337     3.8437 sec
parent only  pushpull trial: 32 threads: 40 src:  71931337     0.7443 sec
level only   pushpull trial: 32 threads: 40 src:  71931337     0.6597 sec
parent+level pushpull trial: 32 threads: 40 src:  71931337     0.8374 sec
parent only  pushonly trial: 33 threads: 40 src: 103808468     3.8793 sec
level only   pushonly trial: 33 threads: 40 src: 103808468     3.6691 sec
parent+level pushonly trial: 33 threads: 40 src: 103808468     3.9028 sec
parent only  pushpull trial: 33 threads: 40 src: 103808468     0.5085 sec
level only   pushpull trial: 33 threads: 40 src: 103808468     0.4577 sec
parent+level pushpull trial: 33 threads: 40 src: 103808468     0.5990 sec
parent only  pushonly trial: 34 threads: 40 src:   4092345     3.9278 sec
level only   pushonly trial: 34 threads: 40 src:   4092345     3.6226 sec
parent+level pushonly trial: 34 threads: 40 src:   4092345     3.9485 sec
parent only  pushpull trial: 34 threads: 40 src:   4092345     0.4885 sec
level only   pushpull trial: 34 threads: 40 src:   4092345     0.3811 sec
parent+level pushpull trial: 34 threads: 40 src:   4092345     0.5705 sec
parent only  pushonly trial: 35 threads: 40 src: 115276241     3.5675 sec
level only   pushonly trial: 35 threads: 40 src: 115276241     3.4654 sec
parent+level pushonly trial: 35 threads: 40 src: 115276241     3.6542 sec
parent only  pushpull trial: 35 threads: 40 src: 115276241     0.6314 sec
level only   pushpull trial: 35 threads: 40 src: 115276241     0.5509 sec
parent+level pushpull trial: 35 threads: 40 src: 115276241     0.7057 sec
parent only  pushonly trial: 36 threads: 40 src:   4649343     3.9113 sec
level only   pushonly trial: 36 threads: 40 src:   4649343     3.6678 sec
parent+level pushonly trial: 36 threads: 40 src:   4649343     3.9666 sec
parent only  pushpull trial: 36 threads: 40 src:   4649343     0.4523 sec
level only   pushpull trial: 36 threads: 40 src:   4649343     0.4058 sec
parent+level pushpull trial: 36 threads: 40 src:   4649343     0.5303 sec
parent only  pushonly trial: 37 threads: 40 src:  76656189     3.8115 sec
level only   pushonly trial: 37 threads: 40 src:  76656189     3.6274 sec
parent+level pushonly trial: 37 threads: 40 src:  76656189     3.8818 sec
parent only  pushpull trial: 37 threads: 40 src:  76656189     0.5037 sec
level only   pushpull trial: 37 threads: 40 src:  76656189     0.4795 sec
parent+level pushpull trial: 37 threads: 40 src:  76656189     0.5759 sec
parent only  pushonly trial: 38 threads: 40 src:  31312001     3.8844 sec
level only   pushonly trial: 38 threads: 40 src:  31312001     3.6546 sec
parent+level pushonly trial: 38 threads: 40 src:  31312001     3.8889 sec
parent only  pushpull trial: 38 threads: 40 src:  31312001     0.4458 sec
level only   pushpull trial: 38 threads: 40 src:  31312001     0.3916 sec
parent+level pushpull trial: 38 threads: 40 src:  31312001     0.5250 sec
parent only  pushonly trial: 39 threads: 40 src: 111334127     3.8319 sec
level only   pushonly trial: 39 threads: 40 src: 111334127     3.5880 sec
parent+level pushonly trial: 39 threads: 40 src: 111334127     3.8880 sec
parent only  pushpull trial: 39 threads: 40 src: 111334127     0.4419 sec
level only   pushpull trial: 39 threads: 40 src: 111334127     0.3982 sec
parent+level pushpull trial: 39 threads: 40 src: 111334127     0.5169 sec
parent only  pushonly trial: 40 threads: 40 src: 100962918     3.8048 sec
level only   pushonly trial: 40 threads: 40 src: 100962918     3.5999 sec
parent+level pushonly trial: 40 threads: 40 src: 100962918     3.8613 sec
parent only  pushpull trial: 40 threads: 40 src: 100962918     0.5805 sec
level only   pushpull trial: 40 threads: 40 src: 100962918     0.5172 sec
parent+level pushpull trial: 40 threads: 40 src: 100962918     0.6596 sec
parent only  pushonly trial: 41 threads: 40 src:  41823215     3.8100 sec
level only   pushonly trial: 41 threads: 40 src:  41823215     3.6110 sec
parent+level pushonly trial: 41 threads: 40 src:  41823215     3.8581 sec
parent only  pushpull trial: 41 threads: 40 src:  41823215     0.4775 sec
level only   pushpull trial: 41 threads: 40 src:  41823215     0.4582 sec
parent+level pushpull trial: 41 threads: 40 src:  41823215     0.5538 sec
parent only  pushonly trial: 42 threads: 40 src:  22631240     3.8247 sec
level only   pushonly trial: 42 threads: 40 src:  22631240     3.6738 sec
parent+level pushonly trial: 42 threads: 40 src:  22631240     3.9415 sec
parent only  pushpull trial: 42 threads: 40 src:  22631240     0.4503 sec
level only   pushpull trial: 42 threads: 40 src:  22631240     0.4031 sec
parent+level pushpull trial: 42 threads: 40 src:  22631240     0.5350 sec
parent only  pushonly trial: 43 threads: 40 src:  42848461     3.5875 sec
level only   pushonly trial: 43 threads: 40 src:  42848461     3.4156 sec
parent+level pushonly trial: 43 threads: 40 src:  42848461     3.6524 sec
parent only  pushpull trial: 43 threads: 40 src:  42848461     0.6525 sec
level only   pushpull trial: 43 threads: 40 src:  42848461     0.5696 sec
parent+level pushpull trial: 43 threads: 40 src:  42848461     0.7283 sec
parent only  pushonly trial: 44 threads: 40 src:  79485148     3.8478 sec
level only   pushonly trial: 44 threads: 40 src:  79485148     3.6529 sec
parent+level pushonly trial: 44 threads: 40 src:  79485148     3.9555 sec
parent only  pushpull trial: 44 threads: 40 src:  79485148     0.5007 sec
level only   pushpull trial: 44 threads: 40 src:  79485148     0.4837 sec
parent+level pushpull trial: 44 threads: 40 src:  79485148     0.5753 sec
parent only  pushonly trial: 45 threads: 40 src: 106818742     3.8209 sec
level only   pushonly trial: 45 threads: 40 src: 106818742     3.6555 sec
parent+level pushonly trial: 45 threads: 40 src: 106818742     3.9350 sec
parent only  pushpull trial: 45 threads: 40 src: 106818742     0.5385 sec
level only   pushpull trial: 45 threads: 40 src: 106818742     0.4829 sec
parent+level pushpull trial: 45 threads: 40 src: 106818742     0.6248 sec
parent only  pushonly trial: 46 threads: 40 src:  73347974     3.8257 sec
level only   pushonly trial: 46 threads: 40 src:  73347974     3.6468 sec
parent+level pushonly trial: 46 threads: 40 src:  73347974     3.8502 sec
parent only  pushpull trial: 46 threads: 40 src:  73347974     0.6549 sec
level only   pushpull trial: 46 threads: 40 src:  73347974     0.5683 sec
parent+level pushpull trial: 46 threads: 40 src:  73347974     0.7313 sec
parent only  pushonly trial: 47 threads: 40 src:  78848445     3.7919 sec
level only   pushonly trial: 47 threads: 40 src:  78848445     3.6633 sec
parent+level pushonly trial: 47 threads: 40 src:  78848445     3.9380 sec
parent only  pushpull trial: 47 threads: 40 src:  78848445     0.5041 sec
level only   pushpull trial: 47 threads: 40 src:  78848445     0.4450 sec
parent+level pushpull trial: 47 threads: 40 src:  78848445     0.5879 sec
parent only  pushonly trial: 48 threads: 40 src: 109920510     3.8535 sec
level only   pushonly trial: 48 threads: 40 src: 109920510     3.6523 sec
parent+level pushonly trial: 48 threads: 40 src: 109920510     3.9447 sec
parent only  pushpull trial: 48 threads: 40 src: 109920510     0.4428 sec
level only   pushpull trial: 48 threads: 40 src: 109920510     0.3814 sec
parent+level pushpull trial: 48 threads: 40 src: 109920510     0.5287 sec
parent only  pushonly trial: 49 threads: 40 src: 121492133     3.5675 sec
level only   pushonly trial: 49 threads: 40 src: 121492133     3.3599 sec
parent+level pushonly trial: 49 threads: 40 src: 121492133     3.5792 sec
parent only  pushpull trial: 49 threads: 40 src: 121492133     0.7009 sec
level only   pushpull trial: 49 threads: 40 src: 121492133     0.6174 sec
parent+level pushpull trial: 49 threads: 40 src: 121492133     0.7902 sec
parent only  pushonly trial: 50 threads: 40 src: 101037296     3.8849 sec
level only   pushonly trial: 50 threads: 40 src: 101037296     3.6723 sec
parent+level pushonly trial: 50 threads: 40 src: 101037296     3.8803 sec
parent only  pushpull trial: 50 threads: 40 src: 101037296     0.5305 sec
level only   pushpull trial: 50 threads: 40 src: 101037296     0.4695 sec
parent+level pushpull trial: 50 threads: 40 src: 101037296     0.6110 sec
parent only  pushonly trial: 51 threads: 40 src:  15438600     3.9066 sec
level only   pushonly trial: 51 threads: 40 src:  15438600     3.7082 sec
parent+level pushonly trial: 51 threads: 40 src:  15438600     3.9879 sec
parent only  pushpull trial: 51 threads: 40 src:  15438600     0.4499 sec
level only   pushpull trial: 51 threads: 40 src:  15438600     0.3922 sec
parent+level pushpull trial: 51 threads: 40 src:  15438600     0.5282 sec
parent only  pushonly trial: 52 threads: 40 src:   4584784     4.0041 sec
level only   pushonly trial: 52 threads: 40 src:   4584784     3.7041 sec
parent+level pushonly trial: 52 threads: 40 src:   4584784     4.0748 sec
parent only  pushpull trial: 52 threads: 40 src:   4584784     0.5370 sec
level only   pushpull trial: 52 threads: 40 src:   4584784     0.4178 sec
parent+level pushpull trial: 52 threads: 40 src:   4584784     0.6212 sec
parent only  pushonly trial: 53 threads: 40 src: 124503845     3.8058 sec
level only   pushonly trial: 53 threads: 40 src: 124503845     3.7006 sec
parent+level pushonly trial: 53 threads: 40 src: 124503845     3.9553 sec
parent only  pushpull trial: 53 threads: 40 src: 124503845     0.5103 sec
level only   pushpull trial: 53 threads: 40 src: 124503845     0.4868 sec
parent+level pushpull trial: 53 threads: 40 src: 124503845     0.5821 sec
parent only  pushonly trial: 54 threads: 40 src:  87241743     3.9023 sec
level only   pushonly trial: 54 threads: 40 src:  87241743     3.6410 sec
parent+level pushonly trial: 54 threads: 40 src:  87241743     3.9933 sec
parent only  pushpull trial: 54 threads: 40 src:  87241743     0.4405 sec
level only   pushpull trial: 54 threads: 40 src:  87241743     0.4064 sec
parent+level pushpull trial: 54 threads: 40 src:  87241743     0.5186 sec
parent only  pushonly trial: 55 threads: 40 src: 108297008     3.8159 sec
level only   pushonly trial: 55 threads: 40 src: 108297008     3.6919 sec
parent+level pushonly trial: 55 threads: 40 src: 108297008     3.9093 sec
parent only  pushpull trial: 55 threads: 40 src: 108297008     0.5071 sec
level only   pushpull trial: 55 threads: 40 src: 108297008     0.4505 sec
parent+level pushpull trial: 55 threads: 40 src: 108297008     0.5826 sec
parent only  pushonly trial: 56 threads: 40 src:  33955082     3.8110 sec
level only   pushonly trial: 56 threads: 40 src:  33955082     3.6410 sec
parent+level pushonly trial: 56 threads: 40 src:  33955082     3.9147 sec
parent only  pushpull trial: 56 threads: 40 src:  33955082     0.4919 sec
level only   pushpull trial: 56 threads: 40 src:  33955082     0.4728 sec
parent+level pushpull trial: 56 threads: 40 src:  33955082     0.5656 sec
parent only  pushonly trial: 57 threads: 40 src:  79934823     3.8394 sec
level only   pushonly trial: 57 threads: 40 src:  79934823     3.5201 sec
parent+level pushonly trial: 57 threads: 40 src:  79934823     3.8593 sec
parent only  pushpull trial: 57 threads: 40 src:  79934823     0.4586 sec
level only   pushpull trial: 57 threads: 40 src:  79934823     0.4066 sec
parent+level pushpull trial: 57 threads: 40 src:  79934823     0.5356 sec
parent only  pushonly trial: 58 threads: 40 src:   8608481     3.8200 sec
level only   pushonly trial: 58 threads: 40 src:   8608481     3.6447 sec
parent+level pushonly trial: 58 threads: 40 src:   8608481     3.9298 sec
parent only  pushpull trial: 58 threads: 40 src:   8608481     0.6899 sec
level only   pushpull trial: 58 threads: 40 src:   8608481     0.6167 sec
parent+level pushpull trial: 58 threads: 40 src:   8608481     0.7811 sec
parent only  pushonly trial: 59 threads: 40 src:  82435063     3.6355 sec
level only   pushonly trial: 59 threads: 40 src:  82435063     3.3363 sec
parent+level pushonly trial: 59 threads: 40 src:  82435063     3.6916 sec
parent only  pushpull trial: 59 threads: 40 src:  82435063     0.4334 sec
level only   pushpull trial: 59 threads: 40 src:  82435063     0.3774 sec
parent+level pushpull trial: 59 threads: 40 src:  82435063     0.5335 sec
parent only  pushonly trial: 60 threads: 40 src:  46579271     3.8215 sec
level only   pushonly trial: 60 threads: 40 src:  46579271     3.7432 sec
parent+level pushonly trial: 60 threads: 40 src:  46579271     3.8910 sec
parent only  pushpull trial: 60 threads: 40 src:  46579271     0.5013 sec
level only   pushpull trial: 60 threads: 40 src:  46579271     0.4882 sec
parent+level pushpull trial: 60 threads: 40 src:  46579271     0.5779 sec
parent only  pushonly trial: 61 threads: 40 src:    515421     3.9141 sec
level only   pushonly trial: 61 threads: 40 src:    515421     3.6867 sec
parent+level pushonly trial: 61 threads: 40 src:    515421     3.9086 sec
parent only  pushpull trial: 61 threads: 40 src:    515421     0.4561 sec
level only   pushpull trial: 61 threads: 40 src:    515421     0.4164 sec
parent+level pushpull trial: 61 threads: 40 src:    515421     0.5263 sec
parent only  pushonly trial: 62 threads: 40 src: 121530467     3.8942 sec
level only   pushonly trial: 62 threads: 40 src: 121530467     3.6624 sec
parent+level pushonly trial: 62 threads: 40 src: 121530467     3.9261 sec
parent only  pushpull trial: 62 threads: 40 src: 121530467     0.4644 sec
level only   pushpull trial: 62 threads: 40 src: 121530467     0.4360 sec
parent+level pushpull trial: 62 threads: 40 src: 121530467     0.5413 sec
parent only  pushonly trial: 63 threads: 40 src: 127978736     3.9082 sec
level only   pushonly trial: 63 threads: 40 src: 127978736     3.6642 sec
parent+level pushonly trial: 63 threads: 40 src: 127978736     3.9497 sec
parent only  pushpull trial: 63 threads: 40 src: 127978736     0.4430 sec
level only   pushpull trial: 63 threads: 40 src: 127978736     0.3918 sec
parent+level pushpull trial: 63 threads: 40 src: 127978736     0.5287 sec
Avg: BFS pushonly parent only  threads  40:      3.838 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
Avg: BFS pushonly level only   threads  40:      3.646 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
Avg: BFS pushonly level+parent threads  40:      3.898 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
Avg: BFS pushonly parent only  threads  40:      3.838 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
Avg: BFS pushonly level only   threads  40:      3.646 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
Avg: BFS pushonly level+parent threads  40:      3.898 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
Avg: BFS pushpull parent only  threads  40:      0.519 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
Avg: BFS pushpull level only   threads  40:      0.470 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
Avg: BFS pushpull level+parent threads  40:      0.605 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
Avg: BFS pushpull parent only  threads  40:      0.519 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
Avg: BFS pushpull level only   threads  40:      0.470 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
Avg: BFS pushpull level+parent threads  40:      0.605 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb

SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
sources: /home/faculty/davis/GAP/GAP-urand/GAP-urand_sources.mtx
    GraphBLAS type: type double size: 8
read time: 69.9757
Graph: kind: undirected, nodes: 134217728 entries: 4294966740 type: bool
    pattern symmetry: symmetric

------------------------------- threads: 40
parent only  pushonly trial:  0 threads: 40 src:  27691419     5.2450 sec
level only   pushonly trial:  0 threads: 40 src:  27691419     4.8655 sec
parent+level pushonly trial:  0 threads: 40 src:  27691419     5.3182 sec
parent only  pushpull trial:  0 threads: 40 src:  27691419     1.2371 sec
level only   pushpull trial:  0 threads: 40 src:  27691419     1.0883 sec
parent+level pushpull trial:  0 threads: 40 src:  27691419     1.4428 sec
parent only  pushonly trial:  1 threads: 40 src: 121280314     5.4840 sec
level only   pushonly trial:  1 threads: 40 src: 121280314     5.0625 sec
parent+level pushonly trial:  1 threads: 40 src: 121280314     5.5518 sec
parent only  pushpull trial:  1 threads: 40 src: 121280314     1.1675 sec
level only   pushpull trial:  1 threads: 40 src: 121280314     0.9889 sec
parent+level pushpull trial:  1 threads: 40 src: 121280314     1.3375 sec
parent only  pushonly trial:  2 threads: 40 src:   2413431     5.3512 sec
level only   pushonly trial:  2 threads: 40 src:   2413431     5.0351 sec
parent+level pushonly trial:  2 threads: 40 src:   2413431     5.4679 sec
parent only  pushpull trial:  2 threads: 40 src:   2413431     1.2282 sec
level only   pushpull trial:  2 threads: 40 src:   2413431     1.0850 sec
parent+level pushpull trial:  2 threads: 40 src:   2413431     1.4405 sec
parent only  pushonly trial:  3 threads: 40 src:  37512113     5.4529 sec
level only   pushonly trial:  3 threads: 40 src:  37512113     5.1564 sec
parent+level pushonly trial:  3 threads: 40 src:  37512113     5.6292 sec
parent only  pushpull trial:  3 threads: 40 src:  37512113     1.1409 sec
level only   pushpull trial:  3 threads: 40 src:  37512113     0.9534 sec
parent+level pushpull trial:  3 threads: 40 src:  37512113     1.3137 sec
parent only  pushonly trial:  4 threads: 40 src:  38390877     5.4901 sec
level only   pushonly trial:  4 threads: 40 src:  38390877     5.1596 sec
parent+level pushonly trial:  4 threads: 40 src:  38390877     5.5737 sec
parent only  pushpull trial:  4 threads: 40 src:  38390877     1.1532 sec
level only   pushpull trial:  4 threads: 40 src:  38390877     0.9577 sec
parent+level pushpull trial:  4 threads: 40 src:  38390877     1.3224 sec
parent only  pushonly trial:  5 threads: 40 src:  56651037     5.5219 sec
level only   pushonly trial:  5 threads: 40 src:  56651037     5.0798 sec
parent+level pushonly trial:  5 threads: 40 src:  56651037     5.5961 sec
parent only  pushpull trial:  5 threads: 40 src:  56651037     1.1806 sec
level only   pushpull trial:  5 threads: 40 src:  56651037     1.0069 sec
parent+level pushpull trial:  5 threads: 40 src:  56651037     1.3622 sec
parent only  pushonly trial:  6 threads: 40 src: 128461248     5.3763 sec
level only   pushonly trial:  6 threads: 40 src: 128461248     4.9776 sec
parent+level pushonly trial:  6 threads: 40 src: 128461248     5.5463 sec
parent only  pushpull trial:  6 threads: 40 src: 128461248     1.1577 sec
level only   pushpull trial:  6 threads: 40 src: 128461248     0.9799 sec
parent+level pushpull trial:  6 threads: 40 src: 128461248     1.3238 sec
parent only  pushonly trial:  7 threads: 40 src:  33029842     5.1062 sec
level only   pushonly trial:  7 threads: 40 src:  33029842     4.7238 sec
parent+level pushonly trial:  7 threads: 40 src:  33029842     5.2327 sec
parent only  pushpull trial:  7 threads: 40 src:  33029842     1.2125 sec
level only   pushpull trial:  7 threads: 40 src:  33029842     1.0513 sec
parent+level pushpull trial:  7 threads: 40 src:  33029842     1.4223 sec
parent only  pushonly trial:  8 threads: 40 src:  71406328     5.3940 sec
level only   pushonly trial:  8 threads: 40 src:  71406328     5.0161 sec
parent+level pushonly trial:  8 threads: 40 src:  71406328     5.4908 sec
parent only  pushpull trial:  8 threads: 40 src:  71406328     1.2873 sec
level only   pushpull trial:  8 threads: 40 src:  71406328     1.1512 sec
parent+level pushpull trial:  8 threads: 40 src:  71406328     1.5167 sec
parent only  pushonly trial:  9 threads: 40 src: 117872827     5.5558 sec
level only   pushonly trial:  9 threads: 40 src: 117872827     5.1689 sec
parent+level pushonly trial:  9 threads: 40 src: 117872827     5.5950 sec
parent only  pushpull trial:  9 threads: 40 src: 117872827     1.2141 sec
level only   pushpull trial:  9 threads: 40 src: 117872827     0.9362 sec
parent+level pushpull trial:  9 threads: 40 src: 117872827     1.3084 sec
parent only  pushonly trial: 10 threads: 40 src:  24351938     5.4323 sec
level only   pushonly trial: 10 threads: 40 src:  24351938     5.0409 sec
parent+level pushonly trial: 10 threads: 40 src:  24351938     5.4666 sec
parent only  pushpull trial: 10 threads: 40 src:  24351938     1.2534 sec
level only   pushpull trial: 10 threads: 40 src:  24351938     1.1072 sec
parent+level pushpull trial: 10 threads: 40 src:  24351938     1.4673 sec
parent only  pushonly trial: 11 threads: 40 src:  15444519     5.3894 sec
level only   pushonly trial: 11 threads: 40 src:  15444519     5.0552 sec
parent+level pushonly trial: 11 threads: 40 src:  15444519     5.5270 sec
parent only  pushpull trial: 11 threads: 40 src:  15444519     1.2192 sec
level only   pushpull trial: 11 threads: 40 src:  15444519     1.0633 sec
parent+level pushpull trial: 11 threads: 40 src:  15444519     1.4278 sec
parent only  pushonly trial: 12 threads: 40 src: 127526281     5.2547 sec
level only   pushonly trial: 12 threads: 40 src: 127526281     4.8898 sec
parent+level pushonly trial: 12 threads: 40 src: 127526281     5.3191 sec
parent only  pushpull trial: 12 threads: 40 src: 127526281     1.2293 sec
level only   pushpull trial: 12 threads: 40 src: 127526281     1.0846 sec
parent+level pushpull trial: 12 threads: 40 src: 127526281     1.4449 sec
parent only  pushonly trial: 13 threads: 40 src: 112279428     5.4371 sec
level only   pushonly trial: 13 threads: 40 src: 112279428     5.0264 sec
parent+level pushonly trial: 13 threads: 40 src: 112279428     5.4930 sec
parent only  pushpull trial: 13 threads: 40 src: 112279428     1.3001 sec
level only   pushpull trial: 13 threads: 40 src: 112279428     1.1644 sec
parent+level pushpull trial: 13 threads: 40 src: 112279428     1.5212 sec
parent only  pushonly trial: 14 threads: 40 src:  13631649     5.4255 sec
level only   pushonly trial: 14 threads: 40 src:  13631649     4.9752 sec
parent+level pushonly trial: 14 threads: 40 src:  13631649     5.5583 sec
parent only  pushpull trial: 14 threads: 40 src:  13631649     1.1522 sec
level only   pushpull trial: 14 threads: 40 src:  13631649     0.9744 sec
parent+level pushpull trial: 14 threads: 40 src:  13631649     1.3265 sec
parent only  pushonly trial: 15 threads: 40 src: 110379302     5.2232 sec
level only   pushonly trial: 15 threads: 40 src: 110379302     4.7774 sec
parent+level pushonly trial: 15 threads: 40 src: 110379302     5.2954 sec
parent only  pushpull trial: 15 threads: 40 src: 110379302     1.3106 sec
level only   pushpull trial: 15 threads: 40 src: 110379302     1.1800 sec
parent+level pushpull trial: 15 threads: 40 src: 110379302     1.5390 sec
parent only  pushonly trial: 16 threads: 40 src:  44800623     5.3125 sec
level only   pushonly trial: 16 threads: 40 src:  44800623     5.0002 sec
parent+level pushonly trial: 16 threads: 40 src:  44800623     5.3899 sec
parent only  pushpull trial: 16 threads: 40 src:  44800623     1.2505 sec
level only   pushpull trial: 16 threads: 40 src:  44800623     1.1108 sec
parent+level pushpull trial: 16 threads: 40 src:  44800623     1.4625 sec
parent only  pushonly trial: 17 threads: 40 src:  77768193     5.4833 sec
level only   pushonly trial: 17 threads: 40 src:  77768193     5.0610 sec
parent+level pushonly trial: 17 threads: 40 src:  77768193     5.5399 sec
parent only  pushpull trial: 17 threads: 40 src:  77768193     1.2531 sec
level only   pushpull trial: 17 threads: 40 src:  77768193     1.1001 sec
parent+level pushpull trial: 17 threads: 40 src:  77768193     1.4582 sec
parent only  pushonly trial: 18 threads: 40 src:    175347     5.2920 sec
level only   pushonly trial: 18 threads: 40 src:    175347     4.9225 sec
parent+level pushonly trial: 18 threads: 40 src:    175347     5.3890 sec
parent only  pushpull trial: 18 threads: 40 src:    175347     1.1659 sec
level only   pushpull trial: 18 threads: 40 src:    175347     0.9978 sec
parent+level pushpull trial: 18 threads: 40 src:    175347     1.3479 sec
parent only  pushonly trial: 19 threads: 40 src: 107397389     5.2288 sec
level only   pushonly trial: 19 threads: 40 src: 107397389     4.8459 sec
parent+level pushonly trial: 19 threads: 40 src: 107397389     5.3172 sec
parent only  pushpull trial: 19 threads: 40 src: 107397389     1.3168 sec
level only   pushpull trial: 19 threads: 40 src: 107397389     1.1831 sec
parent+level pushpull trial: 19 threads: 40 src: 107397389     1.5482 sec
parent only  pushonly trial: 20 threads: 40 src:  43457209     5.2013 sec
level only   pushonly trial: 20 threads: 40 src:  43457209     4.7920 sec
parent+level pushonly trial: 20 threads: 40 src:  43457209     5.3490 sec
parent only  pushpull trial: 20 threads: 40 src:  43457209     1.1850 sec
level only   pushpull trial: 20 threads: 40 src:  43457209     1.0188 sec
parent+level pushpull trial: 20 threads: 40 src:  43457209     1.3778 sec
parent only  pushonly trial: 21 threads: 40 src:  97215940     5.3961 sec
level only   pushonly trial: 21 threads: 40 src:  97215940     5.0371 sec
parent+level pushonly trial: 21 threads: 40 src:  97215940     5.5607 sec
parent only  pushpull trial: 21 threads: 40 src:  97215940     1.1955 sec
level only   pushpull trial: 21 threads: 40 src:  97215940     1.0200 sec
parent+level pushpull trial: 21 threads: 40 src:  97215940     1.3873 sec
parent only  pushonly trial: 22 threads: 40 src:  73575165     5.4107 sec
level only   pushonly trial: 22 threads: 40 src:  73575165     5.0040 sec
parent+level pushonly trial: 22 threads: 40 src:  73575165     5.5452 sec
parent only  pushpull trial: 22 threads: 40 src:  73575165     1.2013 sec
level only   pushpull trial: 22 threads: 40 src:  73575165     1.0458 sec
parent+level pushpull trial: 22 threads: 40 src:  73575165     1.4079 sec
parent only  pushonly trial: 23 threads: 40 src:  44449715     5.4432 sec
level only   pushonly trial: 23 threads: 40 src:  44449715     5.0707 sec
parent+level pushonly trial: 23 threads: 40 src:  44449715     5.5932 sec
parent only  pushpull trial: 23 threads: 40 src:  44449715     1.1761 sec
level only   pushpull trial: 23 threads: 40 src:  44449715     0.9881 sec
parent+level pushpull trial: 23 threads: 40 src:  44449715     1.3568 sec
parent only  pushonly trial: 24 threads: 40 src:  33931724     5.1505 sec
level only   pushonly trial: 24 threads: 40 src:  33931724     4.7005 sec
parent+level pushonly trial: 24 threads: 40 src:  33931724     5.1674 sec
parent only  pushpull trial: 24 threads: 40 src:  33931724     1.2441 sec
level only   pushpull trial: 24 threads: 40 src:  33931724     1.0974 sec
parent+level pushpull trial: 24 threads: 40 src:  33931724     1.4589 sec
parent only  pushonly trial: 25 threads: 40 src:  55526610     5.4491 sec
level only   pushonly trial: 25 threads: 40 src:  55526610     5.1206 sec
parent+level pushonly trial: 25 threads: 40 src:  55526610     5.5339 sec
parent only  pushpull trial: 25 threads: 40 src:  55526610     1.2021 sec
level only   pushpull trial: 25 threads: 40 src:  55526610     1.0470 sec
parent+level pushpull trial: 25 threads: 40 src:  55526610     1.4176 sec
parent only  pushonly trial: 26 threads: 40 src:  14422051     5.2299 sec
level only   pushonly trial: 26 threads: 40 src:  14422051     4.8325 sec
parent+level pushonly trial: 26 threads: 40 src:  14422051     5.3156 sec
parent only  pushpull trial: 26 threads: 40 src:  14422051     1.3563 sec
level only   pushpull trial: 26 threads: 40 src:  14422051     1.2428 sec
parent+level pushpull trial: 26 threads: 40 src:  14422051     1.5965 sec
parent only  pushonly trial: 27 threads: 40 src:  58043873     5.4310 sec
level only   pushonly trial: 27 threads: 40 src:  58043873     5.0442 sec
parent+level pushonly trial: 27 threads: 40 src:  58043873     5.5296 sec
parent only  pushpull trial: 27 threads: 40 src:  58043873     1.2120 sec
level only   pushpull trial: 27 threads: 40 src:  58043873     1.0505 sec
parent+level pushpull trial: 27 threads: 40 src:  58043873     1.4126 sec
parent only  pushonly trial: 28 threads: 40 src:  72137329     5.4999 sec
level only   pushonly trial: 28 threads: 40 src:  72137329     5.0577 sec
parent+level pushonly trial: 28 threads: 40 src:  72137329     5.5738 sec
parent only  pushpull trial: 28 threads: 40 src:  72137329     1.1984 sec
level only   pushpull trial: 28 threads: 40 src:  72137329     1.0307 sec
parent+level pushpull trial: 28 threads: 40 src:  72137329     1.4058 sec
parent only  pushonly trial: 29 threads: 40 src:   9647840     5.4554 sec
level only   pushonly trial: 29 threads: 40 src:   9647840     5.1117 sec
parent+level pushonly trial: 29 threads: 40 src:   9647840     5.5696 sec
parent only  pushpull trial: 29 threads: 40 src:   9647840     1.2091 sec
level only   pushpull trial: 29 threads: 40 src:   9647840     1.0472 sec
parent+level pushpull trial: 29 threads: 40 src:   9647840     1.4264 sec
parent only  pushonly trial: 30 threads: 40 src:  15940695     5.3044 sec
level only   pushonly trial: 30 threads: 40 src:  15940695     4.9074 sec
parent+level pushonly trial: 30 threads: 40 src:  15940695     5.4032 sec
parent only  pushpull trial: 30 threads: 40 src:  15940695     1.1674 sec
level only   pushpull trial: 30 threads: 40 src:  15940695     0.9868 sec
parent+level pushpull trial: 30 threads: 40 src:  15940695     1.3365 sec
parent only  pushonly trial: 31 threads: 40 src:  14209952     5.3905 sec
level only   pushonly trial: 31 threads: 40 src:  14209952     5.0803 sec
parent+level pushonly trial: 31 threads: 40 src:  14209952     5.4692 sec
parent only  pushpull trial: 31 threads: 40 src:  14209952     1.1726 sec
level only   pushpull trial: 31 threads: 40 src:  14209952     0.8937 sec
parent+level pushpull trial: 31 threads: 40 src:  14209952     1.2579 sec
parent only  pushonly trial: 32 threads: 40 src:  49020883     5.4512 sec
level only   pushonly trial: 32 threads: 40 src:  49020883     5.0122 sec
parent+level pushonly trial: 32 threads: 40 src:  49020883     5.5505 sec
parent only  pushpull trial: 32 threads: 40 src:  49020883     1.2123 sec
level only   pushpull trial: 32 threads: 40 src:  49020883     1.0536 sec
parent+level pushpull trial: 32 threads: 40 src:  49020883     1.4249 sec
parent only  pushonly trial: 33 threads: 40 src:  28901138     5.4647 sec
level only   pushonly trial: 33 threads: 40 src:  28901138     5.1237 sec
parent+level pushonly trial: 33 threads: 40 src:  28901138     5.4993 sec
parent only  pushpull trial: 33 threads: 40 src:  28901138     1.2172 sec
level only   pushpull trial: 33 threads: 40 src:  28901138     1.0556 sec
parent+level pushpull trial: 33 threads: 40 src:  28901138     1.4221 sec
parent only  pushonly trial: 34 threads: 40 src:  50493273     5.4482 sec
level only   pushonly trial: 34 threads: 40 src:  50493273     5.0502 sec
parent+level pushonly trial: 34 threads: 40 src:  50493273     5.5574 sec
parent only  pushpull trial: 34 threads: 40 src:  50493273     1.1870 sec
level only   pushpull trial: 34 threads: 40 src:  50493273     1.0278 sec
parent+level pushpull trial: 34 threads: 40 src:  50493273     1.3832 sec
parent only  pushonly trial: 35 threads: 40 src:  49150069     5.3860 sec
level only   pushonly trial: 35 threads: 40 src:  49150069     4.9956 sec
parent+level pushonly trial: 35 threads: 40 src:  49150069     5.5186 sec
parent only  pushpull trial: 35 threads: 40 src:  49150069     1.2169 sec
level only   pushpull trial: 35 threads: 40 src:  49150069     1.0737 sec
parent+level pushpull trial: 35 threads: 40 src:  49150069     1.4300 sec
parent only  pushonly trial: 36 threads: 40 src: 126525082     5.4115 sec
level only   pushonly trial: 36 threads: 40 src: 126525082     5.0193 sec
parent+level pushonly trial: 36 threads: 40 src: 126525082     5.4877 sec
parent only  pushpull trial: 36 threads: 40 src: 126525082     1.1928 sec
level only   pushpull trial: 36 threads: 40 src: 126525082     1.0307 sec
parent+level pushpull trial: 36 threads: 40 src: 126525082     1.3975 sec
parent only  pushonly trial: 37 threads: 40 src:   6382740     5.3457 sec
level only   pushonly trial: 37 threads: 40 src:   6382740     5.0055 sec
parent+level pushonly trial: 37 threads: 40 src:   6382740     5.4451 sec
parent only  pushpull trial: 37 threads: 40 src:   6382740     1.2564 sec
level only   pushpull trial: 37 threads: 40 src:   6382740     1.1115 sec
parent+level pushpull trial: 37 threads: 40 src:   6382740     1.4637 sec
parent only  pushonly trial: 38 threads: 40 src:  89108297     5.5444 sec
level only   pushonly trial: 38 threads: 40 src:  89108297     5.1004 sec
parent+level pushonly trial: 38 threads: 40 src:  89108297     5.5812 sec
parent only  pushpull trial: 38 threads: 40 src:  89108297     1.2150 sec
level only   pushpull trial: 38 threads: 40 src:  89108297     0.9329 sec
parent+level pushpull trial: 38 threads: 40 src:  89108297     1.2899 sec
parent only  pushonly trial: 39 threads: 40 src:   9239735     5.4672 sec
level only   pushonly trial: 39 threads: 40 src:   9239735     5.0854 sec
parent+level pushonly trial: 39 threads: 40 src:   9239735     5.4859 sec
parent only  pushpull trial: 39 threads: 40 src:   9239735     1.1927 sec
level only   pushpull trial: 39 threads: 40 src:   9239735     1.0347 sec
parent+level pushpull trial: 39 threads: 40 src:   9239735     1.3988 sec
parent only  pushonly trial: 40 threads: 40 src: 110168548     5.4108 sec
level only   pushonly trial: 40 threads: 40 src: 110168548     4.9770 sec
parent+level pushonly trial: 40 threads: 40 src: 110168548     5.5281 sec
parent only  pushpull trial: 40 threads: 40 src: 110168548     1.2991 sec
level only   pushpull trial: 40 threads: 40 src: 110168548     1.1613 sec
parent+level pushpull trial: 40 threads: 40 src: 110168548     1.5253 sec
parent only  pushonly trial: 41 threads: 40 src:  95370259     5.4689 sec
level only   pushonly trial: 41 threads: 40 src:  95370259     5.1115 sec
parent+level pushonly trial: 41 threads: 40 src:  95370259     5.6357 sec
parent only  pushpull trial: 41 threads: 40 src:  95370259     1.1907 sec
level only   pushpull trial: 41 threads: 40 src:  95370259     1.0162 sec
parent+level pushpull trial: 41 threads: 40 src:  95370259     1.3727 sec
parent only  pushonly trial: 42 threads: 40 src: 116653530     5.1581 sec
level only   pushonly trial: 42 threads: 40 src: 116653530     4.8112 sec
parent+level pushonly trial: 42 threads: 40 src: 116653530     5.2490 sec
parent only  pushpull trial: 42 threads: 40 src: 116653530     1.1722 sec
level only   pushpull trial: 42 threads: 40 src: 116653530     1.0025 sec
parent+level pushpull trial: 42 threads: 40 src: 116653530     1.3577 sec
parent only  pushonly trial: 43 threads: 40 src: 123410703     5.3704 sec
level only   pushonly trial: 43 threads: 40 src: 123410703     5.0418 sec
parent+level pushonly trial: 43 threads: 40 src: 123410703     5.4313 sec
parent only  pushpull trial: 43 threads: 40 src: 123410703     1.2354 sec
level only   pushpull trial: 43 threads: 40 src: 123410703     1.1007 sec
parent+level pushpull trial: 43 threads: 40 src: 123410703     1.4614 sec
parent only  pushonly trial: 44 threads: 40 src:  16733665     5.3609 sec
level only   pushonly trial: 44 threads: 40 src:  16733665     4.9726 sec
parent+level pushonly trial: 44 threads: 40 src:  16733665     5.5069 sec
parent only  pushpull trial: 44 threads: 40 src:  16733665     1.1524 sec
level only   pushpull trial: 44 threads: 40 src:  16733665     0.9757 sec
parent+level pushpull trial: 44 threads: 40 src:  16733665     1.3220 sec
parent only  pushonly trial: 45 threads: 40 src:  49030282     5.3454 sec
level only   pushonly trial: 45 threads: 40 src:  49030282     5.0150 sec
parent+level pushonly trial: 45 threads: 40 src:  49030282     5.4150 sec
parent only  pushpull trial: 45 threads: 40 src:  49030282     1.1667 sec
level only   pushpull trial: 45 threads: 40 src:  49030282     1.0011 sec
parent+level pushpull trial: 45 threads: 40 src:  49030282     1.3609 sec
parent only  pushonly trial: 46 threads: 40 src: 108545121     5.1302 sec
level only   pushonly trial: 46 threads: 40 src: 108545121     4.7488 sec
parent+level pushonly trial: 46 threads: 40 src: 108545121     5.2383 sec
parent only  pushpull trial: 46 threads: 40 src: 108545121     1.2239 sec
level only   pushpull trial: 46 threads: 40 src: 108545121     1.0794 sec
parent+level pushpull trial: 46 threads: 40 src: 108545121     1.4359 sec
parent only  pushonly trial: 47 threads: 40 src:  99095665     5.3988 sec
level only   pushonly trial: 47 threads: 40 src:  99095665     5.0163 sec
parent+level pushonly trial: 47 threads: 40 src:  99095665     5.4807 sec
parent only  pushpull trial: 47 threads: 40 src:  99095665     1.2119 sec
level only   pushpull trial: 47 threads: 40 src:  99095665     1.0459 sec
parent+level pushpull trial: 47 threads: 40 src:  99095665     1.4126 sec
parent only  pushonly trial: 48 threads: 40 src: 133850077     5.3344 sec
level only   pushonly trial: 48 threads: 40 src: 133850077     4.9277 sec
parent+level pushonly trial: 48 threads: 40 src: 133850077     5.4057 sec
parent only  pushpull trial: 48 threads: 40 src: 133850077     1.1628 sec
level only   pushpull trial: 48 threads: 40 src: 133850077     0.9809 sec
parent+level pushpull trial: 48 threads: 40 src: 133850077     1.3371 sec
parent only  pushonly trial: 49 threads: 40 src:  63499301     5.4781 sec
level only   pushonly trial: 49 threads: 40 src:  63499301     5.0809 sec
parent+level pushonly trial: 49 threads: 40 src:  63499301     5.5544 sec
parent only  pushpull trial: 49 threads: 40 src:  63499301     1.1595 sec
level only   pushpull trial: 49 threads: 40 src:  63499301     0.9735 sec
parent+level pushpull trial: 49 threads: 40 src:  63499301     1.3275 sec
parent only  pushonly trial: 50 threads: 40 src:  21541382     5.4998 sec
level only   pushonly trial: 50 threads: 40 src:  21541382     5.1222 sec
parent+level pushonly trial: 50 threads: 40 src:  21541382     5.6296 sec
parent only  pushpull trial: 50 threads: 40 src:  21541382     1.1754 sec
level only   pushpull trial: 50 threads: 40 src:  21541382     1.0055 sec
parent+level pushpull trial: 50 threads: 40 src:  21541382     1.3596 sec
parent only  pushonly trial: 51 threads: 40 src:   6230751     5.2615 sec
level only   pushonly trial: 51 threads: 40 src:   6230751     4.8706 sec
parent+level pushonly trial: 51 threads: 40 src:   6230751     5.3994 sec
parent only  pushpull trial: 51 threads: 40 src:   6230751     1.1974 sec
level only   pushpull trial: 51 threads: 40 src:   6230751     1.0249 sec
parent+level pushpull trial: 51 threads: 40 src:   6230751     1.3778 sec
parent only  pushonly trial: 52 threads: 40 src:  89077456     5.4003 sec
level only   pushonly trial: 52 threads: 40 src:  89077456     5.0159 sec
parent+level pushonly trial: 52 threads: 40 src:  89077456     5.4745 sec
parent only  pushpull trial: 52 threads: 40 src:  89077456     1.1837 sec
level only   pushpull trial: 52 threads: 40 src:  89077456     1.0202 sec
parent+level pushpull trial: 52 threads: 40 src:  89077456     1.3781 sec
parent only  pushonly trial: 53 threads: 40 src:  70392765     5.3869 sec
level only   pushonly trial: 53 threads: 40 src:  70392765     5.0329 sec
parent+level pushonly trial: 53 threads: 40 src:  70392765     5.5043 sec
parent only  pushpull trial: 53 threads: 40 src:  70392765     1.2288 sec
level only   pushpull trial: 53 threads: 40 src:  70392765     1.0818 sec
parent+level pushpull trial: 53 threads: 40 src:  70392765     1.4442 sec
parent only  pushonly trial: 54 threads: 40 src:   6670455     5.2146 sec
level only   pushonly trial: 54 threads: 40 src:   6670455     4.8534 sec
parent+level pushonly trial: 54 threads: 40 src:   6670455     5.3627 sec
parent only  pushpull trial: 54 threads: 40 src:   6670455     1.2737 sec
level only   pushpull trial: 54 threads: 40 src:   6670455     1.1355 sec
parent+level pushpull trial: 54 threads: 40 src:   6670455     1.5012 sec
parent only  pushonly trial: 55 threads: 40 src:  61746271     5.2086 sec
level only   pushonly trial: 55 threads: 40 src:  61746271     4.8238 sec
parent+level pushonly trial: 55 threads: 40 src:  61746271     5.2939 sec
parent only  pushpull trial: 55 threads: 40 src:  61746271     1.1791 sec
level only   pushpull trial: 55 threads: 40 src:  61746271     1.0074 sec
parent+level pushpull trial: 55 threads: 40 src:  61746271     1.3567 sec
parent only  pushonly trial: 56 threads: 40 src:  83349535     5.4239 sec
level only   pushonly trial: 56 threads: 40 src:  83349535     4.9915 sec
parent+level pushonly trial: 56 threads: 40 src:  83349535     5.5182 sec
parent only  pushpull trial: 56 threads: 40 src:  83349535     1.2279 sec
level only   pushpull trial: 56 threads: 40 src:  83349535     1.0802 sec
parent+level pushpull trial: 56 threads: 40 src:  83349535     1.4341 sec
parent only  pushonly trial: 57 threads: 40 src: 115272184     5.1561 sec
level only   pushonly trial: 57 threads: 40 src: 115272184     4.7720 sec
parent+level pushonly trial: 57 threads: 40 src: 115272184     5.2295 sec
parent only  pushpull trial: 57 threads: 40 src: 115272184     1.2320 sec
level only   pushpull trial: 57 threads: 40 src: 115272184     1.0769 sec
parent+level pushpull trial: 57 threads: 40 src: 115272184     1.4383 sec
parent only  pushonly trial: 58 threads: 40 src:  20129908     5.3732 sec
level only   pushonly trial: 58 threads: 40 src:  20129908     4.9613 sec
parent+level pushonly trial: 58 threads: 40 src:  20129908     5.4735 sec
parent only  pushpull trial: 58 threads: 40 src:  20129908     1.3005 sec
level only   pushpull trial: 58 threads: 40 src:  20129908     1.1623 sec
parent+level pushpull trial: 58 threads: 40 src:  20129908     1.5280 sec
parent only  pushonly trial: 59 threads: 40 src: 106148553     5.5248 sec
level only   pushonly trial: 59 threads: 40 src: 106148553     5.0557 sec
parent+level pushonly trial: 59 threads: 40 src: 106148553     5.4891 sec
parent only  pushpull trial: 59 threads: 40 src: 106148553     1.2091 sec
level only   pushpull trial: 59 threads: 40 src: 106148553     1.0471 sec
parent+level pushpull trial: 59 threads: 40 src: 106148553     1.4134 sec
parent only  pushonly trial: 60 threads: 40 src: 117042375     5.1948 sec
level only   pushonly trial: 60 threads: 40 src: 117042375     4.8070 sec
parent+level pushonly trial: 60 threads: 40 src: 117042375     5.2875 sec
parent only  pushpull trial: 60 threads: 40 src: 117042375     1.2334 sec
level only   pushpull trial: 60 threads: 40 src: 117042375     1.0836 sec
parent+level pushpull trial: 60 threads: 40 src: 117042375     1.4455 sec
parent only  pushonly trial: 61 threads: 40 src:  71431187     5.3805 sec
level only   pushonly trial: 61 threads: 40 src:  71431187     4.9916 sec
parent+level pushonly trial: 61 threads: 40 src:  71431187     5.4690 sec
parent only  pushpull trial: 61 threads: 40 src:  71431187     1.2176 sec
level only   pushpull trial: 61 threads: 40 src:  71431187     1.0620 sec
parent+level pushpull trial: 61 threads: 40 src:  71431187     1.4236 sec
parent only  pushonly trial: 62 threads: 40 src:  45287808     5.1793 sec
level only   pushonly trial: 62 threads: 40 src:  45287808     4.7729 sec
parent+level pushonly trial: 62 threads: 40 src:  45287808     5.2114 sec
parent only  pushpull trial: 62 threads: 40 src:  45287808     1.3338 sec
level only   pushpull trial: 62 threads: 40 src:  45287808     1.2098 sec
parent+level pushpull trial: 62 threads: 40 src:  45287808     1.5597 sec
parent only  pushonly trial: 63 threads: 40 src: 107702120     5.4384 sec
level only   pushonly trial: 63 threads: 40 src: 107702120     4.9651 sec
parent+level pushonly trial: 63 threads: 40 src: 107702120     5.4617 sec
parent only  pushpull trial: 63 threads: 40 src: 107702120     1.2139 sec
level only   pushpull trial: 63 threads: 40 src: 107702120     1.0583 sec
parent+level pushpull trial: 63 threads: 40 src: 107702120     1.4222 sec
Avg: BFS pushonly parent only  threads  40:      5.366 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
Avg: BFS pushonly level only   threads  40:      4.980 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
Avg: BFS pushonly level+parent threads  40:      5.458 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
Avg: BFS pushonly parent only  threads  40:      5.366 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
Avg: BFS pushonly level only   threads  40:      4.980 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
Avg: BFS pushonly level+parent threads  40:      5.458 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
Avg: BFS pushpull parent only  threads  40:      1.216 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
Avg: BFS pushpull level only   threads  40:      1.052 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
Avg: BFS pushpull level+parent threads  40:      1.412 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
Avg: BFS pushpull parent only  threads  40:      1.216 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
Avg: BFS pushpull level only   threads  40:      1.052 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
Avg: BFS pushpull level+parent threads  40:      1.412 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb

SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
sources: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter_sources.mtx
    GraphBLAS type: type double size: 8
read time: 39.4803
Graph: kind: directed, nodes: 61578415 entries: 1468364884 type: bool
    pattern symmetry: unsymmetric

------------------------------- threads: 40
parent only  pushonly trial:  0 threads: 40 src:  12441072     1.4788 sec
level only   pushonly trial:  0 threads: 40 src:  12441072     1.3483 sec
parent+level pushonly trial:  0 threads: 40 src:  12441072     1.1887 sec
parent only  pushpull trial:  0 threads: 40 src:  12441072     0.3263 sec
level only   pushpull trial:  0 threads: 40 src:  12441072     0.2852 sec
parent+level pushpull trial:  0 threads: 40 src:  12441072     0.3579 sec
parent only  pushonly trial:  1 threads: 40 src:  54488257     1.5051 sec
level only   pushonly trial:  1 threads: 40 src:  54488257     1.3729 sec
parent+level pushonly trial:  1 threads: 40 src:  54488257     1.2210 sec
parent only  pushpull trial:  1 threads: 40 src:  54488257     0.3313 sec
level only   pushpull trial:  1 threads: 40 src:  54488257     0.2804 sec
parent+level pushpull trial:  1 threads: 40 src:  54488257     0.3755 sec
parent only  pushonly trial:  2 threads: 40 src:  25451915     1.5401 sec
level only   pushonly trial:  2 threads: 40 src:  25451915     1.4407 sec
parent+level pushonly trial:  2 threads: 40 src:  25451915     1.2421 sec
parent only  pushpull trial:  2 threads: 40 src:  25451915     0.4006 sec
level only   pushpull trial:  2 threads: 40 src:  25451915     0.3937 sec
parent+level pushpull trial:  2 threads: 40 src:  25451915     0.4417 sec
parent only  pushonly trial:  3 threads: 40 src:  57714473     1.4784 sec
level only   pushonly trial:  3 threads: 40 src:  57714473     1.3372 sec
parent+level pushonly trial:  3 threads: 40 src:  57714473     1.2101 sec
parent only  pushpull trial:  3 threads: 40 src:  57714473     0.3422 sec
level only   pushpull trial:  3 threads: 40 src:  57714473     0.2783 sec
parent+level pushpull trial:  3 threads: 40 src:  57714473     0.3901 sec
parent only  pushonly trial:  4 threads: 40 src:  14839494     1.6170 sec
level only   pushonly trial:  4 threads: 40 src:  14839494     1.4692 sec
parent+level pushonly trial:  4 threads: 40 src:  14839494     1.3587 sec
parent only  pushpull trial:  4 threads: 40 src:  14839494     0.4294 sec
level only   pushpull trial:  4 threads: 40 src:  14839494     0.3560 sec
parent+level pushpull trial:  4 threads: 40 src:  14839494     0.4812 sec
parent only  pushonly trial:  5 threads: 40 src:  32081104     1.6273 sec
level only   pushonly trial:  5 threads: 40 src:  32081104     1.4641 sec
parent+level pushonly trial:  5 threads: 40 src:  32081104     1.3415 sec
parent only  pushpull trial:  5 threads: 40 src:  32081104     0.4247 sec
level only   pushpull trial:  5 threads: 40 src:  32081104     0.3370 sec
parent+level pushpull trial:  5 threads: 40 src:  32081104     0.4604 sec
parent only  pushonly trial:  6 threads: 40 src:  52957357     1.4877 sec
level only   pushonly trial:  6 threads: 40 src:  52957357     1.3781 sec
parent+level pushonly trial:  6 threads: 40 src:  52957357     1.2056 sec
parent only  pushpull trial:  6 threads: 40 src:  52957357     0.3744 sec
level only   pushpull trial:  6 threads: 40 src:  52957357     0.3580 sec
parent+level pushpull trial:  6 threads: 40 src:  52957357     0.4158 sec
parent only  pushonly trial:  7 threads: 40 src:  50444380     1.4819 sec
level only   pushonly trial:  7 threads: 40 src:  50444380     1.3716 sec
parent+level pushonly trial:  7 threads: 40 src:  50444380     1.2220 sec
parent only  pushpull trial:  7 threads: 40 src:  50444380     0.4069 sec
level only   pushpull trial:  7 threads: 40 src:  50444380     0.3958 sec
parent+level pushpull trial:  7 threads: 40 src:  50444380     0.4438 sec
parent only  pushonly trial:  8 threads: 40 src:  49590701     1.4867 sec
level only   pushonly trial:  8 threads: 40 src:  49590701     1.3757 sec
parent+level pushonly trial:  8 threads: 40 src:  49590701     1.2118 sec
parent only  pushpull trial:  8 threads: 40 src:  49590701     0.3563 sec
level only   pushpull trial:  8 threads: 40 src:  49590701     0.3394 sec
parent+level pushpull trial:  8 threads: 40 src:  49590701     0.4003 sec
parent only  pushonly trial:  9 threads: 40 src:  20127816     1.4637 sec
level only   pushonly trial:  9 threads: 40 src:  20127816     1.3461 sec
parent+level pushonly trial:  9 threads: 40 src:  20127816     1.3101 sec
parent only  pushpull trial:  9 threads: 40 src:  20127816     0.3877 sec
level only   pushpull trial:  9 threads: 40 src:  20127816     0.3800 sec
parent+level pushpull trial:  9 threads: 40 src:  20127816     0.4280 sec
parent only  pushonly trial: 10 threads: 40 src:  34939333     1.5618 sec
level only   pushonly trial: 10 threads: 40 src:  34939333     1.4165 sec
parent+level pushonly trial: 10 threads: 40 src:  34939333     1.2016 sec
parent only  pushpull trial: 10 threads: 40 src:  34939333     0.3475 sec
level only   pushpull trial: 10 threads: 40 src:  34939333     0.3227 sec
parent+level pushpull trial: 10 threads: 40 src:  34939333     0.4008 sec
parent only  pushonly trial: 11 threads: 40 src:  48251001     1.4847 sec
level only   pushonly trial: 11 threads: 40 src:  48251001     1.3499 sec
parent+level pushonly trial: 11 threads: 40 src:  48251001     1.1907 sec
parent only  pushpull trial: 11 threads: 40 src:  48251001     0.3849 sec
level only   pushpull trial: 11 threads: 40 src:  48251001     0.3405 sec
parent+level pushpull trial: 11 threads: 40 src:  48251001     0.4076 sec
parent only  pushonly trial: 12 threads: 40 src:  19524253     1.4472 sec
level only   pushonly trial: 12 threads: 40 src:  19524253     1.3518 sec
parent+level pushonly trial: 12 threads: 40 src:  19524253     1.1944 sec
parent only  pushpull trial: 12 threads: 40 src:  19524253     0.3322 sec
level only   pushpull trial: 12 threads: 40 src:  19524253     0.2827 sec
parent+level pushpull trial: 12 threads: 40 src:  19524253     0.3717 sec
parent only  pushonly trial: 13 threads: 40 src:  43676726     1.4768 sec
level only   pushonly trial: 13 threads: 40 src:  43676726     1.3712 sec
parent+level pushonly trial: 13 threads: 40 src:  43676726     1.2191 sec
parent only  pushpull trial: 13 threads: 40 src:  43676726     0.3483 sec
level only   pushpull trial: 13 threads: 40 src:  43676726     0.3272 sec
parent+level pushpull trial: 13 threads: 40 src:  43676726     0.4000 sec
parent only  pushonly trial: 14 threads: 40 src:  33055508     1.4811 sec
level only   pushonly trial: 14 threads: 40 src:  33055508     1.3565 sec
parent+level pushonly trial: 14 threads: 40 src:  33055508     1.2064 sec
parent only  pushpull trial: 14 threads: 40 src:  33055508     0.3364 sec
level only   pushpull trial: 14 threads: 40 src:  33055508     0.2932 sec
parent+level pushpull trial: 14 threads: 40 src:  33055508     0.3696 sec
parent only  pushonly trial: 15 threads: 40 src:  15244687     1.4890 sec
level only   pushonly trial: 15 threads: 40 src:  15244687     1.3462 sec
parent+level pushonly trial: 15 threads: 40 src:  15244687     1.2009 sec
parent only  pushpull trial: 15 threads: 40 src:  15244687     0.3560 sec
level only   pushpull trial: 15 threads: 40 src:  15244687     0.3057 sec
parent+level pushpull trial: 15 threads: 40 src:  15244687     0.4155 sec
parent only  pushonly trial: 16 threads: 40 src:  24946738     1.7465 sec
level only   pushonly trial: 16 threads: 40 src:  24946738     1.5755 sec
parent+level pushonly trial: 16 threads: 40 src:  24946738     1.4829 sec
parent only  pushpull trial: 16 threads: 40 src:  24946738     0.5616 sec
level only   pushpull trial: 16 threads: 40 src:  24946738     0.5165 sec
parent+level pushpull trial: 16 threads: 40 src:  24946738     0.6595 sec
parent only  pushonly trial: 17 threads: 40 src:   6479472     1.7127 sec
level only   pushonly trial: 17 threads: 40 src:   6479472     1.5699 sec
parent+level pushonly trial: 17 threads: 40 src:   6479472     1.4281 sec
parent only  pushpull trial: 17 threads: 40 src:   6479472     0.4803 sec
level only   pushpull trial: 17 threads: 40 src:   6479472     0.4193 sec
parent+level pushpull trial: 17 threads: 40 src:   6479472     0.5365 sec
parent only  pushonly trial: 18 threads: 40 src:  26077682     1.6458 sec
level only   pushonly trial: 18 threads: 40 src:  26077682     1.5501 sec
parent+level pushonly trial: 18 threads: 40 src:  26077682     1.3645 sec
parent only  pushpull trial: 18 threads: 40 src:  26077682     0.4006 sec
level only   pushpull trial: 18 threads: 40 src:  26077682     0.3652 sec
parent+level pushpull trial: 18 threads: 40 src:  26077682     0.4708 sec
parent only  pushonly trial: 19 threads: 40 src:  22023875     1.5977 sec
level only   pushonly trial: 19 threads: 40 src:  22023875     1.5328 sec
parent+level pushonly trial: 19 threads: 40 src:  22023875     1.3542 sec
parent only  pushpull trial: 19 threads: 40 src:  22023875     0.4436 sec
level only   pushpull trial: 19 threads: 40 src:  22023875     0.4499 sec
parent+level pushpull trial: 19 threads: 40 src:  22023875     0.5057 sec
parent only  pushonly trial: 20 threads: 40 src:  22081915     1.6397 sec
level only   pushonly trial: 20 threads: 40 src:  22081915     1.5429 sec
parent+level pushonly trial: 20 threads: 40 src:  22081915     1.3847 sec
parent only  pushpull trial: 20 threads: 40 src:  22081915     0.3897 sec
level only   pushpull trial: 20 threads: 40 src:  22081915     0.3743 sec
parent+level pushpull trial: 20 threads: 40 src:  22081915     0.4637 sec
parent only  pushonly trial: 21 threads: 40 src:  40034162     1.5783 sec
level only   pushonly trial: 21 threads: 40 src:  40034162     1.4888 sec
parent+level pushonly trial: 21 threads: 40 src:  40034162     1.3309 sec
parent only  pushpull trial: 21 threads: 40 src:  40034162     0.4178 sec
level only   pushpull trial: 21 threads: 40 src:  40034162     0.4277 sec
parent+level pushpull trial: 21 threads: 40 src:  40034162     0.4913 sec
parent only  pushonly trial: 22 threads: 40 src:  49496014     1.6071 sec
level only   pushonly trial: 22 threads: 40 src:  49496014     1.5351 sec
parent+level pushonly trial: 22 threads: 40 src:  49496014     1.3453 sec
parent only  pushpull trial: 22 threads: 40 src:  49496014     0.4624 sec
level only   pushpull trial: 22 threads: 40 src:  49496014     0.4729 sec
parent+level pushpull trial: 22 threads: 40 src:  49496014     0.5206 sec
parent only  pushonly trial: 23 threads: 40 src:  42847507     1.6500 sec
level only   pushonly trial: 23 threads: 40 src:  42847507     1.5442 sec
parent+level pushonly trial: 23 threads: 40 src:  42847507     1.3631 sec
parent only  pushpull trial: 23 threads: 40 src:  42847507     0.4056 sec
level only   pushpull trial: 23 threads: 40 src:  42847507     0.3746 sec
parent+level pushpull trial: 23 threads: 40 src:  42847507     0.4684 sec
parent only  pushonly trial: 24 threads: 40 src:  52409557     1.6403 sec
level only   pushonly trial: 24 threads: 40 src:  52409557     1.5622 sec
parent+level pushonly trial: 24 threads: 40 src:  52409557     1.3877 sec
parent only  pushpull trial: 24 threads: 40 src:  52409557     0.4027 sec
level only   pushpull trial: 24 threads: 40 src:  52409557     0.3759 sec
parent+level pushpull trial: 24 threads: 40 src:  52409557     0.4648 sec
parent only  pushonly trial: 25 threads: 40 src:  55445388     1.6631 sec
level only   pushonly trial: 25 threads: 40 src:  55445388     1.5442 sec
parent+level pushonly trial: 25 threads: 40 src:  55445388     1.4511 sec
parent only  pushpull trial: 25 threads: 40 src:  55445388     0.4150 sec
level only   pushpull trial: 25 threads: 40 src:  55445388     0.3815 sec
parent+level pushpull trial: 25 threads: 40 src:  55445388     0.4876 sec
parent only  pushonly trial: 26 threads: 40 src:  22028097     1.8207 sec
level only   pushonly trial: 26 threads: 40 src:  22028097     1.6780 sec
parent+level pushonly trial: 26 threads: 40 src:  22028097     1.5107 sec
parent only  pushpull trial: 26 threads: 40 src:  22028097     0.5105 sec
level only   pushpull trial: 26 threads: 40 src:  22028097     0.4496 sec
parent+level pushpull trial: 26 threads: 40 src:  22028097     0.5908 sec
parent only  pushonly trial: 27 threads: 40 src:  48766648     1.6896 sec
level only   pushonly trial: 27 threads: 40 src:  48766648     1.5648 sec
parent+level pushonly trial: 27 threads: 40 src:  48766648     1.4173 sec
parent only  pushpull trial: 27 threads: 40 src:  48766648     0.4707 sec
level only   pushpull trial: 27 threads: 40 src:  48766648     0.4314 sec
parent+level pushpull trial: 27 threads: 40 src:  48766648     0.5331 sec
parent only  pushonly trial: 28 threads: 40 src:  44521241     1.6340 sec
level only   pushonly trial: 28 threads: 40 src:  44521241     1.5430 sec
parent+level pushonly trial: 28 threads: 40 src:  44521241     1.3584 sec
parent only  pushpull trial: 28 threads: 40 src:  44521241     0.4499 sec
level only   pushpull trial: 28 threads: 40 src:  44521241     0.4525 sec
parent+level pushpull trial: 28 threads: 40 src:  44521241     0.5177 sec
parent only  pushonly trial: 29 threads: 40 src:  60135542     1.5911 sec
level only   pushonly trial: 29 threads: 40 src:  60135542     1.5190 sec
parent+level pushonly trial: 29 threads: 40 src:  60135542     1.3553 sec
parent only  pushpull trial: 29 threads: 40 src:  60135542     0.4591 sec
level only   pushpull trial: 29 threads: 40 src:  60135542     0.4656 sec
parent+level pushpull trial: 29 threads: 40 src:  60135542     0.5207 sec
parent only  pushonly trial: 30 threads: 40 src:  28528671     1.5909 sec
level only   pushonly trial: 30 threads: 40 src:  28528671     1.4807 sec
parent+level pushonly trial: 30 threads: 40 src:  28528671     1.3245 sec
parent only  pushpull trial: 30 threads: 40 src:  28528671     0.4116 sec
level only   pushpull trial: 30 threads: 40 src:  28528671     0.4215 sec
parent+level pushpull trial: 30 threads: 40 src:  28528671     0.4901 sec
parent only  pushonly trial: 31 threads: 40 src:   9678012     1.5990 sec
level only   pushonly trial: 31 threads: 40 src:   9678012     1.4551 sec
parent+level pushonly trial: 31 threads: 40 src:   9678012     1.3203 sec
parent only  pushpull trial: 31 threads: 40 src:   9678012     0.3435 sec
level only   pushpull trial: 31 threads: 40 src:   9678012     0.2717 sec
parent+level pushpull trial: 31 threads: 40 src:   9678012     0.3955 sec
parent only  pushonly trial: 32 threads: 40 src:  40020306     1.5543 sec
level only   pushonly trial: 32 threads: 40 src:  40020306     1.4862 sec
parent+level pushonly trial: 32 threads: 40 src:  40020306     1.3128 sec
parent only  pushpull trial: 32 threads: 40 src:  40020306     0.4016 sec
level only   pushpull trial: 32 threads: 40 src:  40020306     0.3945 sec
parent+level pushpull trial: 32 threads: 40 src:  40020306     0.4656 sec
parent only  pushonly trial: 33 threads: 40 src:  31625735     1.6461 sec
level only   pushonly trial: 33 threads: 40 src:  31625735     1.5148 sec
parent+level pushonly trial: 33 threads: 40 src:  31625735     1.3218 sec
parent only  pushpull trial: 33 threads: 40 src:  31625735     0.4016 sec
level only   pushpull trial: 33 threads: 40 src:  31625735     0.3747 sec
parent+level pushpull trial: 33 threads: 40 src:  31625735     0.4472 sec
parent only  pushonly trial: 34 threads: 40 src:  37446892     1.5676 sec
level only   pushonly trial: 34 threads: 40 src:  37446892     1.4804 sec
parent+level pushonly trial: 34 threads: 40 src:  37446892     1.3377 sec
parent only  pushpull trial: 34 threads: 40 src:  37446892     0.4363 sec
level only   pushpull trial: 34 threads: 40 src:  37446892     0.4044 sec
parent+level pushpull trial: 34 threads: 40 src:  37446892     0.4773 sec
parent only  pushonly trial: 35 threads: 40 src:  51788952     1.5962 sec
level only   pushonly trial: 35 threads: 40 src:  51788952     1.4935 sec
parent+level pushonly trial: 35 threads: 40 src:  51788952     1.2982 sec
parent only  pushpull trial: 35 threads: 40 src:  51788952     0.3924 sec
level only   pushpull trial: 35 threads: 40 src:  51788952     0.4011 sec
parent+level pushpull trial: 35 threads: 40 src:  51788952     0.4775 sec
parent only  pushonly trial: 36 threads: 40 src:  52584255     1.6125 sec
level only   pushonly trial: 36 threads: 40 src:  52584255     1.4604 sec
parent+level pushonly trial: 36 threads: 40 src:  52584255     1.3257 sec
parent only  pushpull trial: 36 threads: 40 src:  52584255     0.3898 sec
level only   pushpull trial: 36 threads: 40 src:  52584255     0.3775 sec
parent+level pushpull trial: 36 threads: 40 src:  52584255     0.4077 sec
parent only  pushonly trial: 37 threads: 40 src:  20346696     1.5261 sec
level only   pushonly trial: 37 threads: 40 src:  20346696     1.3981 sec
parent+level pushonly trial: 37 threads: 40 src:  20346696     1.2233 sec
parent only  pushpull trial: 37 threads: 40 src:  20346696     0.4126 sec
level only   pushpull trial: 37 threads: 40 src:  20346696     0.3473 sec
parent+level pushpull trial: 37 threads: 40 src:  20346696     0.4230 sec
parent only  pushonly trial: 38 threads: 40 src:  48387909     1.5041 sec
level only   pushonly trial: 38 threads: 40 src:  48387909     1.3701 sec
parent+level pushonly trial: 38 threads: 40 src:  48387909     1.2467 sec
parent only  pushpull trial: 38 threads: 40 src:  48387909     0.4284 sec
level only   pushpull trial: 38 threads: 40 src:  48387909     0.4234 sec
parent+level pushpull trial: 38 threads: 40 src:  48387909     0.4583 sec
parent only  pushonly trial: 39 threads: 40 src:  37337427     1.4755 sec
level only   pushonly trial: 39 threads: 40 src:  37337427     1.3490 sec
parent+level pushonly trial: 39 threads: 40 src:  37337427     1.2192 sec
parent only  pushpull trial: 39 threads: 40 src:  37337427     0.4132 sec
level only   pushpull trial: 39 threads: 40 src:  37337427     0.4045 sec
parent+level pushpull trial: 39 threads: 40 src:  37337427     0.4438 sec
parent only  pushonly trial: 40 threads: 40 src:  50501084     1.4845 sec
level only   pushonly trial: 40 threads: 40 src:  50501084     1.3691 sec
parent+level pushonly trial: 40 threads: 40 src:  50501084     1.2184 sec
parent only  pushpull trial: 40 threads: 40 src:  50501084     0.3553 sec
level only   pushpull trial: 40 threads: 40 src:  50501084     0.3350 sec
parent+level pushpull trial: 40 threads: 40 src:  50501084     0.3998 sec
parent only  pushonly trial: 41 threads: 40 src:  30130061     1.4968 sec
level only   pushonly trial: 41 threads: 40 src:  30130061     1.3517 sec
parent+level pushonly trial: 41 threads: 40 src:  30130061     1.2104 sec
parent only  pushpull trial: 41 threads: 40 src:  30130061     0.3504 sec
level only   pushpull trial: 41 threads: 40 src:  30130061     0.3137 sec
parent+level pushpull trial: 41 threads: 40 src:  30130061     0.3806 sec
parent only  pushonly trial: 42 threads: 40 src:  41185893     1.4863 sec
level only   pushonly trial: 42 threads: 40 src:  41185893     1.3244 sec
parent+level pushonly trial: 42 threads: 40 src:  41185893     1.2213 sec
parent only  pushpull trial: 42 threads: 40 src:  41185893     0.3489 sec
level only   pushpull trial: 42 threads: 40 src:  41185893     0.2949 sec
parent+level pushpull trial: 42 threads: 40 src:  41185893     0.3881 sec
parent only  pushonly trial: 43 threads: 40 src:  56495703     1.4766 sec
level only   pushonly trial: 43 threads: 40 src:  56495703     1.4018 sec
parent+level pushonly trial: 43 threads: 40 src:  56495703     1.2147 sec
parent only  pushpull trial: 43 threads: 40 src:  56495703     0.3322 sec
level only   pushpull trial: 43 threads: 40 src:  56495703     0.2911 sec
parent+level pushpull trial: 43 threads: 40 src:  56495703     0.3722 sec
parent only  pushonly trial: 44 threads: 40 src:  45663305     1.4603 sec
level only   pushonly trial: 44 threads: 40 src:  45663305     1.3605 sec
parent+level pushonly trial: 44 threads: 40 src:  45663305     1.2074 sec
parent only  pushpull trial: 44 threads: 40 src:  45663305     0.4130 sec
level only   pushpull trial: 44 threads: 40 src:  45663305     0.4037 sec
parent+level pushpull trial: 44 threads: 40 src:  45663305     0.4503 sec
parent only  pushonly trial: 45 threads: 40 src:  33359460     1.5055 sec
level only   pushonly trial: 45 threads: 40 src:  33359460     1.3725 sec
parent+level pushonly trial: 45 threads: 40 src:  33359460     1.2147 sec
parent only  pushpull trial: 45 threads: 40 src:  33359460     0.3497 sec
level only   pushpull trial: 45 threads: 40 src:  33359460     0.3172 sec
parent+level pushpull trial: 45 threads: 40 src:  33359460     0.3744 sec
parent only  pushonly trial: 46 threads: 40 src:  48143058     1.4879 sec
level only   pushonly trial: 46 threads: 40 src:  48143058     1.3536 sec
parent+level pushonly trial: 46 threads: 40 src:  48143058     1.2127 sec
parent only  pushpull trial: 46 threads: 40 src:  48143058     0.3795 sec
level only   pushpull trial: 46 threads: 40 src:  48143058     0.3458 sec
parent+level pushpull trial: 46 threads: 40 src:  48143058     0.4085 sec
parent only  pushonly trial: 47 threads: 40 src:  33291513     1.5768 sec
level only   pushonly trial: 47 threads: 40 src:  33291513     1.4123 sec
parent+level pushonly trial: 47 threads: 40 src:  33291513     1.2946 sec
parent only  pushpull trial: 47 threads: 40 src:  33291513     0.5001 sec
level only   pushpull trial: 47 threads: 40 src:  33291513     0.4211 sec
parent+level pushpull trial: 47 threads: 40 src:  33291513     0.5056 sec
parent only  pushonly trial: 48 threads: 40 src:  53461445     1.4918 sec
level only   pushonly trial: 48 threads: 40 src:  53461445     1.3903 sec
parent+level pushonly trial: 48 threads: 40 src:  53461445     1.2287 sec
parent only  pushpull trial: 48 threads: 40 src:  53461445     0.3860 sec
level only   pushpull trial: 48 threads: 40 src:  53461445     0.3373 sec
parent+level pushpull trial: 48 threads: 40 src:  53461445     0.4072 sec
parent only  pushonly trial: 49 threads: 40 src:  29340610     1.4684 sec
level only   pushonly trial: 49 threads: 40 src:  29340610     1.3716 sec
parent+level pushonly trial: 49 threads: 40 src:  29340610     1.2367 sec
parent only  pushpull trial: 49 threads: 40 src:  29340610     0.3190 sec
level only   pushpull trial: 49 threads: 40 src:  29340610     0.2703 sec
parent+level pushpull trial: 49 threads: 40 src:  29340610     0.3640 sec
parent only  pushonly trial: 50 threads: 40 src:  34148498     1.4976 sec
level only   pushonly trial: 50 threads: 40 src:  34148498     1.3956 sec
parent+level pushonly trial: 50 threads: 40 src:  34148498     1.2352 sec
parent only  pushpull trial: 50 threads: 40 src:  34148498     0.3272 sec
level only   pushpull trial: 50 threads: 40 src:  34148498     0.2776 sec
parent+level pushpull trial: 50 threads: 40 src:  34148498     0.3839 sec
parent only  pushonly trial: 51 threads: 40 src:  49171806     1.4908 sec
level only   pushonly trial: 51 threads: 40 src:  49171806     1.3718 sec
parent+level pushonly trial: 51 threads: 40 src:  49171806     1.2106 sec
parent only  pushpull trial: 51 threads: 40 src:  49171806     0.3950 sec
level only   pushpull trial: 51 threads: 40 src:  49171806     0.3829 sec
parent+level pushpull trial: 51 threads: 40 src:  49171806     0.4322 sec
parent only  pushonly trial: 52 threads: 40 src:  35550696     1.4754 sec
level only   pushonly trial: 52 threads: 40 src:  35550696     1.3447 sec
parent+level pushonly trial: 52 threads: 40 src:  35550696     1.2148 sec
parent only  pushpull trial: 52 threads: 40 src:  35550696     0.3365 sec
level only   pushpull trial: 52 threads: 40 src:  35550696     0.2864 sec
parent+level pushpull trial: 52 threads: 40 src:  35550696     0.3755 sec
parent only  pushonly trial: 53 threads: 40 src:  14521507     1.4624 sec
level only   pushonly trial: 53 threads: 40 src:  14521507     1.3642 sec
parent+level pushonly trial: 53 threads: 40 src:  14521507     1.2009 sec
parent only  pushpull trial: 53 threads: 40 src:  14521507     0.3261 sec
level only   pushpull trial: 53 threads: 40 src:  14521507     0.2867 sec
parent+level pushpull trial: 53 threads: 40 src:  14521507     0.3688 sec
parent only  pushonly trial: 54 threads: 40 src:  51633218     1.4865 sec
level only   pushonly trial: 54 threads: 40 src:  51633218     1.3769 sec
parent+level pushonly trial: 54 threads: 40 src:  51633218     1.2198 sec
parent only  pushpull trial: 54 threads: 40 src:  51633218     0.3941 sec
level only   pushpull trial: 54 threads: 40 src:  51633218     0.3883 sec
parent+level pushpull trial: 54 threads: 40 src:  51633218     0.4404 sec
parent only  pushonly trial: 55 threads: 40 src:  46823382     1.4870 sec
level only   pushonly trial: 55 threads: 40 src:  46823382     1.3594 sec
parent+level pushonly trial: 55 threads: 40 src:  46823382     1.2071 sec
parent only  pushpull trial: 55 threads: 40 src:  46823382     0.3267 sec
level only   pushpull trial: 55 threads: 40 src:  46823382     0.2812 sec
parent+level pushpull trial: 55 threads: 40 src:  46823382     0.3714 sec
parent only  pushonly trial: 56 threads: 40 src:  19396273     1.4732 sec
level only   pushonly trial: 56 threads: 40 src:  19396273     1.3657 sec
parent+level pushonly trial: 56 threads: 40 src:  19396273     1.2175 sec
parent only  pushpull trial: 56 threads: 40 src:  19396273     0.3768 sec
level only   pushpull trial: 56 threads: 40 src:  19396273     0.3256 sec
parent+level pushpull trial: 56 threads: 40 src:  19396273     0.3974 sec
parent only  pushonly trial: 57 threads: 40 src:  19871750     1.6470 sec
level only   pushonly trial: 57 threads: 40 src:  19871750     1.4832 sec
parent+level pushonly trial: 57 threads: 40 src:  19871750     1.3668 sec
parent only  pushpull trial: 57 threads: 40 src:  19871750     0.4127 sec
level only   pushpull trial: 57 threads: 40 src:  19871750     0.3520 sec
parent+level pushpull trial: 57 threads: 40 src:  19871750     0.4774 sec
parent only  pushonly trial: 58 threads: 40 src:  36862677     1.4623 sec
level only   pushonly trial: 58 threads: 40 src:  36862677     1.3450 sec
parent+level pushonly trial: 58 threads: 40 src:  36862677     1.2140 sec
parent only  pushpull trial: 58 threads: 40 src:  36862677     0.3525 sec
level only   pushpull trial: 58 threads: 40 src:  36862677     0.3160 sec
parent+level pushpull trial: 58 threads: 40 src:  36862677     0.3955 sec
parent only  pushonly trial: 59 threads: 40 src:  49539126     1.4882 sec
level only   pushonly trial: 59 threads: 40 src:  49539126     1.3791 sec
parent+level pushonly trial: 59 threads: 40 src:  49539126     1.2216 sec
parent only  pushpull trial: 59 threads: 40 src:  49539126     0.4084 sec
level only   pushpull trial: 59 threads: 40 src:  49539126     0.3971 sec
parent+level pushpull trial: 59 threads: 40 src:  49539126     0.4508 sec
parent only  pushonly trial: 60 threads: 40 src:  34016452     1.5978 sec
level only   pushonly trial: 60 threads: 40 src:  34016452     1.4428 sec
parent+level pushonly trial: 60 threads: 40 src:  34016452     1.3251 sec
parent only  pushpull trial: 60 threads: 40 src:  34016452     0.4164 sec
level only   pushpull trial: 60 threads: 40 src:  34016452     0.3371 sec
parent+level pushpull trial: 60 threads: 40 src:  34016452     0.4605 sec
parent only  pushonly trial: 61 threads: 40 src:  36567395     1.6431 sec
level only   pushonly trial: 61 threads: 40 src:  36567395     1.4365 sec
parent+level pushonly trial: 61 threads: 40 src:  36567395     1.3316 sec
parent only  pushpull trial: 61 threads: 40 src:  36567395     0.4263 sec
level only   pushpull trial: 61 threads: 40 src:  36567395     0.3382 sec
parent+level pushpull trial: 61 threads: 40 src:  36567395     0.4774 sec
parent only  pushonly trial: 62 threads: 40 src:  55487793     1.4744 sec
level only   pushonly trial: 62 threads: 40 src:  55487793     1.3737 sec
parent+level pushonly trial: 62 threads: 40 src:  55487793     1.2359 sec
parent only  pushpull trial: 62 threads: 40 src:  55487793     0.3448 sec
level only   pushpull trial: 62 threads: 40 src:  55487793     0.3166 sec
parent+level pushpull trial: 62 threads: 40 src:  55487793     0.4029 sec
parent only  pushonly trial: 63 threads: 40 src:  14391370     1.5916 sec
level only   pushonly trial: 63 threads: 40 src:  14391370     1.4106 sec
parent+level pushonly trial: 63 threads: 40 src:  14391370     1.3052 sec
parent only  pushpull trial: 63 threads: 40 src:  14391370     0.4267 sec
level only   pushpull trial: 63 threads: 40 src:  14391370     0.3694 sec
parent+level pushpull trial: 63 threads: 40 src:  14391370     0.4681 sec
Avg: BFS pushonly parent only  threads  40:      1.550 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
Avg: BFS pushonly level only   threads  40:      1.430 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
Avg: BFS pushonly level+parent threads  40:      1.281 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
Avg: BFS pushonly parent only  threads  40:      1.550 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
Avg: BFS pushonly level only   threads  40:      1.430 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
Avg: BFS pushonly level+parent threads  40:      1.281 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
Avg: BFS pushpull parent only  threads  40:      0.394 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
Avg: BFS pushpull level only   threads  40:      0.360 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
Avg: BFS pushpull level+parent threads  40:      0.441 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
Avg: BFS pushpull parent only  threads  40:      0.394 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
Avg: BFS pushpull level only   threads  40:      0.360 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
Avg: BFS pushpull level+parent threads  40:      0.441 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb

SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
sources: /home/faculty/davis/GAP/GAP-web/GAP-web_sources.mtx
    GraphBLAS type: type double size: 8
read time: 35.8598
Graph: kind: directed, nodes: 50636151 entries: 1930292948 type: bool
    pattern symmetry: unsymmetric

------------------------------- threads: 40
parent only  pushonly trial:  0 threads: 40 src:  10219452     1.3336 sec
level only   pushonly trial:  0 threads: 40 src:  10219452     1.1423 sec
parent+level pushonly trial:  0 threads: 40 src:  10219452     1.3600 sec
parent only  pushpull trial:  0 threads: 40 src:  10219452     0.8777 sec
level only   pushpull trial:  0 threads: 40 src:  10219452     0.8250 sec
parent+level pushpull trial:  0 threads: 40 src:  10219452     1.0187 sec
parent only  pushonly trial:  1 threads: 40 src:  44758211     1.3430 sec
level only   pushonly trial:  1 threads: 40 src:  44758211     1.1819 sec
parent+level pushonly trial:  1 threads: 40 src:  44758211     1.3857 sec
parent only  pushpull trial:  1 threads: 40 src:  44758211     0.9363 sec
level only   pushpull trial:  1 threads: 40 src:  44758211     0.8948 sec
parent+level pushpull trial:  1 threads: 40 src:  44758211     1.0918 sec
parent only  pushonly trial:  2 threads: 40 src:    890671     1.3037 sec
level only   pushonly trial:  2 threads: 40 src:    890671     1.1491 sec
parent+level pushonly trial:  2 threads: 40 src:    890671     1.3549 sec
parent only  pushpull trial:  2 threads: 40 src:    890671     0.8764 sec
level only   pushpull trial:  2 threads: 40 src:    890671     0.8234 sec
parent+level pushpull trial:  2 threads: 40 src:    890671     1.0274 sec
parent only  pushonly trial:  3 threads: 40 src:  13843756     0.0113 sec
level only   pushonly trial:  3 threads: 40 src:  13843756     0.0141 sec
parent+level pushonly trial:  3 threads: 40 src:  13843756     0.0113 sec
parent only  pushpull trial:  3 threads: 40 src:  13843756     0.0099 sec
level only   pushpull trial:  3 threads: 40 src:  13843756     0.0129 sec
parent+level pushpull trial:  3 threads: 40 src:  13843756     0.0114 sec
parent only  pushonly trial:  4 threads: 40 src:  14168062     1.3290 sec
level only   pushonly trial:  4 threads: 40 src:  14168062     1.1739 sec
parent+level pushonly trial:  4 threads: 40 src:  14168062     1.3643 sec
parent only  pushpull trial:  4 threads: 40 src:  14168062     0.8777 sec
level only   pushpull trial:  4 threads: 40 src:  14168062     0.8323 sec
parent+level pushpull trial:  4 threads: 40 src:  14168062     1.0208 sec
parent only  pushonly trial:  5 threads: 40 src:  20906930     1.3123 sec
level only   pushonly trial:  5 threads: 40 src:  20906930     1.1873 sec
parent+level pushonly trial:  5 threads: 40 src:  20906930     1.3587 sec
parent only  pushpull trial:  5 threads: 40 src:  20906930     0.8830 sec
level only   pushpull trial:  5 threads: 40 src:  20906930     0.8160 sec
parent+level pushpull trial:  5 threads: 40 src:  20906930     0.9966 sec
parent only  pushonly trial:  6 threads: 40 src:  12189584     1.2993 sec
level only   pushonly trial:  6 threads: 40 src:  12189584     1.1467 sec
parent+level pushonly trial:  6 threads: 40 src:  12189584     1.3739 sec
parent only  pushpull trial:  6 threads: 40 src:  12189584     0.8669 sec
level only   pushpull trial:  6 threads: 40 src:  12189584     0.8183 sec
parent+level pushpull trial:  6 threads: 40 src:  12189584     1.0013 sec
parent only  pushonly trial:  7 threads: 40 src:  26352335     0.0084 sec
level only   pushonly trial:  7 threads: 40 src:  26352335     0.0106 sec
parent+level pushonly trial:  7 threads: 40 src:  26352335     0.0082 sec
parent only  pushpull trial:  7 threads: 40 src:  26352335     0.0071 sec
level only   pushpull trial:  7 threads: 40 src:  26352335     0.0097 sec
parent+level pushpull trial:  7 threads: 40 src:  26352335     0.0087 sec
parent only  pushonly trial:  8 threads: 40 src:  43500686     1.3370 sec
level only   pushonly trial:  8 threads: 40 src:  43500686     1.1727 sec
parent+level pushonly trial:  8 threads: 40 src:  43500686     1.3739 sec
parent only  pushpull trial:  8 threads: 40 src:  43500686     0.9016 sec
level only   pushpull trial:  8 threads: 40 src:  43500686     0.8677 sec
parent+level pushpull trial:  8 threads: 40 src:  43500686     1.0494 sec
parent only  pushonly trial:  9 threads: 40 src:   8987024     1.3125 sec
level only   pushonly trial:  9 threads: 40 src:   8987024     1.1489 sec
parent+level pushonly trial:  9 threads: 40 src:   8987024     1.3559 sec
parent only  pushpull trial:  9 threads: 40 src:   8987024     0.8607 sec
level only   pushpull trial:  9 threads: 40 src:   8987024     0.8081 sec
parent+level pushpull trial:  9 threads: 40 src:   8987024     1.0134 sec
parent only  pushonly trial: 10 threads: 40 src:   5699762     0.0043 sec
level only   pushonly trial: 10 threads: 40 src:   5699762     0.0063 sec
parent+level pushonly trial: 10 threads: 40 src:   5699762     0.0059 sec
parent only  pushpull trial: 10 threads: 40 src:   5699762     0.0041 sec
level only   pushpull trial: 10 threads: 40 src:   5699762     0.0065 sec
parent+level pushpull trial: 10 threads: 40 src:   5699762     0.0051 sec
parent only  pushonly trial: 11 threads: 40 src:  41436455     1.3692 sec
level only   pushonly trial: 11 threads: 40 src:  41436455     1.2155 sec
parent+level pushonly trial: 11 threads: 40 src:  41436455     1.4186 sec
parent only  pushpull trial: 11 threads: 40 src:  41436455     0.9277 sec
level only   pushpull trial: 11 threads: 40 src:  41436455     0.8643 sec
parent+level pushpull trial: 11 threads: 40 src:  41436455     1.0697 sec
parent only  pushonly trial: 12 threads: 40 src:   5030727     1.2972 sec
level only   pushonly trial: 12 threads: 40 src:   5030727     1.1309 sec
parent+level pushonly trial: 12 threads: 40 src:   5030727     1.3456 sec
parent only  pushpull trial: 12 threads: 40 src:   5030727     0.8693 sec
level only   pushpull trial: 12 threads: 40 src:   5030727     0.8168 sec
parent+level pushpull trial: 12 threads: 40 src:   5030727     0.9971 sec
parent only  pushonly trial: 13 threads: 40 src:  40735218     1.3229 sec
level only   pushonly trial: 13 threads: 40 src:  40735218     1.1357 sec
parent+level pushonly trial: 13 threads: 40 src:  40735218     1.3570 sec
parent only  pushpull trial: 13 threads: 40 src:  40735218     0.8886 sec
level only   pushpull trial: 13 threads: 40 src:  40735218     0.8481 sec
parent+level pushpull trial: 13 threads: 40 src:  40735218     1.0394 sec
parent only  pushonly trial: 14 threads: 40 src:  16533563     1.3162 sec
level only   pushonly trial: 14 threads: 40 src:  16533563     1.1570 sec
parent+level pushonly trial: 14 threads: 40 src:  16533563     1.3601 sec
parent only  pushpull trial: 14 threads: 40 src:  16533563     0.8330 sec
level only   pushpull trial: 14 threads: 40 src:  16533563     0.7854 sec
parent+level pushpull trial: 14 threads: 40 src:  16533563     0.9880 sec
parent only  pushonly trial: 15 threads: 40 src:  28700166     1.3237 sec
level only   pushonly trial: 15 threads: 40 src:  28700166     1.1610 sec
parent+level pushonly trial: 15 threads: 40 src:  28700166     1.3555 sec
parent only  pushpull trial: 15 threads: 40 src:  28700166     0.8428 sec
level only   pushpull trial: 15 threads: 40 src:  28700166     0.7835 sec
parent+level pushpull trial: 15 threads: 40 src:  28700166     0.9815 sec
parent only  pushonly trial: 16 threads: 40 src:     64711     1.3183 sec
level only   pushonly trial: 16 threads: 40 src:     64711     1.1473 sec
parent+level pushonly trial: 16 threads: 40 src:     64711     1.3688 sec
parent only  pushpull trial: 16 threads: 40 src:     64711     0.9226 sec
level only   pushpull trial: 16 threads: 40 src:     64711     0.8853 sec
parent+level pushpull trial: 16 threads: 40 src:     64711     1.0624 sec
parent only  pushonly trial: 17 threads: 40 src:  39634750     1.3249 sec
level only   pushonly trial: 17 threads: 40 src:  39634750     1.1549 sec
parent+level pushonly trial: 17 threads: 40 src:  39634750     1.3776 sec
parent only  pushpull trial: 17 threads: 40 src:  39634750     0.9045 sec
level only   pushpull trial: 17 threads: 40 src:  39634750     0.8481 sec
parent+level pushpull trial: 17 threads: 40 src:  39634750     1.0457 sec
parent only  pushonly trial: 18 threads: 40 src:  16037779     1.3516 sec
level only   pushonly trial: 18 threads: 40 src:  16037779     1.1925 sec
parent+level pushonly trial: 18 threads: 40 src:  16037779     1.4009 sec
parent only  pushpull trial: 18 threads: 40 src:  16037779     0.8549 sec
level only   pushpull trial: 18 threads: 40 src:  16037779     0.9130 sec
parent+level pushpull trial: 18 threads: 40 src:  16037779     1.1438 sec
parent only  pushonly trial: 19 threads: 40 src:  27152739     1.3432 sec
level only   pushonly trial: 19 threads: 40 src:  27152739     1.1824 sec
parent+level pushonly trial: 19 threads: 40 src:  27152739     1.4026 sec
parent only  pushpull trial: 19 threads: 40 src:  27152739     0.9465 sec
level only   pushpull trial: 19 threads: 40 src:  27152739     0.8995 sec
parent+level pushpull trial: 19 threads: 40 src:  27152739     1.0771 sec
parent only  pushonly trial: 20 threads: 40 src:  16404061     1.3271 sec
level only   pushonly trial: 20 threads: 40 src:  16404061     1.1332 sec
parent+level pushonly trial: 20 threads: 40 src:  16404061     1.3433 sec
parent only  pushpull trial: 20 threads: 40 src:  16404061     0.8668 sec
level only   pushpull trial: 20 threads: 40 src:  16404061     0.8158 sec
parent+level pushpull trial: 20 threads: 40 src:  16404061     0.9975 sec
parent only  pushonly trial: 21 threads: 40 src:  20491963     1.3326 sec
level only   pushonly trial: 21 threads: 40 src:  20491963     1.1738 sec
parent+level pushonly trial: 21 threads: 40 src:  20491963     1.3747 sec
parent only  pushpull trial: 21 threads: 40 src:  20491963     0.8361 sec
level only   pushpull trial: 21 threads: 40 src:  20491963     0.7849 sec
parent+level pushpull trial: 21 threads: 40 src:  20491963     0.9847 sec
parent only  pushonly trial: 22 threads: 40 src:   5322423     1.3299 sec
level only   pushonly trial: 22 threads: 40 src:   5322423     1.1705 sec
parent+level pushonly trial: 22 threads: 40 src:   5322423     1.3878 sec
parent only  pushpull trial: 22 threads: 40 src:   5322423     0.9097 sec
level only   pushpull trial: 22 threads: 40 src:   5322423     0.8473 sec
parent+level pushpull trial: 22 threads: 40 src:   5322423     1.0270 sec
parent only  pushonly trial: 23 threads: 40 src:  21420953     1.3082 sec
level only   pushonly trial: 23 threads: 40 src:  21420953     1.1606 sec
parent+level pushonly trial: 23 threads: 40 src:  21420953     1.3733 sec
parent only  pushpull trial: 23 threads: 40 src:  21420953     0.9332 sec
level only   pushpull trial: 23 threads: 40 src:  21420953     0.8843 sec
parent+level pushpull trial: 23 threads: 40 src:  21420953     1.0649 sec
parent only  pushonly trial: 24 threads: 40 src:  26622109     1.3247 sec
level only   pushonly trial: 24 threads: 40 src:  26622109     1.1628 sec
parent+level pushonly trial: 24 threads: 40 src:  26622109     1.3678 sec
parent only  pushpull trial: 24 threads: 40 src:  26622109     0.8716 sec
level only   pushpull trial: 24 threads: 40 src:  26622109     0.8154 sec
parent+level pushpull trial: 24 threads: 40 src:  26622109     1.0126 sec
parent only  pushonly trial: 25 threads: 40 src:   5882875     1.3482 sec
level only   pushonly trial: 25 threads: 40 src:   5882875     1.1871 sec
parent+level pushonly trial: 25 threads: 40 src:   5882875     1.3947 sec
parent only  pushpull trial: 25 threads: 40 src:   5882875     0.8623 sec
level only   pushpull trial: 25 threads: 40 src:   5882875     0.8169 sec
parent+level pushpull trial: 25 threads: 40 src:   5882875     0.9998 sec
parent only  pushonly trial: 26 threads: 40 src:  18091040     1.3455 sec
level only   pushonly trial: 26 threads: 40 src:  18091040     1.1863 sec
parent+level pushonly trial: 26 threads: 40 src:  18091040     1.3970 sec
parent only  pushpull trial: 26 threads: 40 src:  18091040     0.9402 sec
level only   pushpull trial: 26 threads: 40 src:  18091040     0.8867 sec
parent+level pushpull trial: 26 threads: 40 src:  18091040     1.0701 sec
parent only  pushonly trial: 27 threads: 40 src:  10665896     0.0194 sec
level only   pushonly trial: 27 threads: 40 src:  10665896     0.0234 sec
parent+level pushonly trial: 27 threads: 40 src:  10665896     0.0215 sec
parent only  pushpull trial: 27 threads: 40 src:  10665896     0.0199 sec
level only   pushpull trial: 27 threads: 40 src:  10665896     0.0224 sec
parent+level pushpull trial: 27 threads: 40 src:  10665896     0.0229 sec
parent only  pushonly trial: 28 threads: 40 src:  18634422     1.3258 sec
level only   pushonly trial: 28 threads: 40 src:  18634422     1.1674 sec
parent+level pushonly trial: 28 threads: 40 src:  18634422     1.3841 sec
parent only  pushpull trial: 28 threads: 40 src:  18634422     0.8356 sec
level only   pushpull trial: 28 threads: 40 src:  18634422     0.7910 sec
parent+level pushpull trial: 28 threads: 40 src:  18634422     0.9786 sec
parent only  pushonly trial: 29 threads: 40 src:  18138715     1.3179 sec
level only   pushonly trial: 29 threads: 40 src:  18138715     1.1529 sec
parent+level pushonly trial: 29 threads: 40 src:  18138715     1.3843 sec
parent only  pushpull trial: 29 threads: 40 src:  18138715     0.8722 sec
level only   pushpull trial: 29 threads: 40 src:  18138715     0.8221 sec
parent+level pushpull trial: 29 threads: 40 src:  18138715     1.0180 sec
parent only  pushonly trial: 30 threads: 40 src:   2355535     1.3103 sec
level only   pushonly trial: 30 threads: 40 src:   2355535     1.1382 sec
parent+level pushonly trial: 30 threads: 40 src:   2355535     1.3517 sec
parent only  pushpull trial: 30 threads: 40 src:   2355535     0.8992 sec
level only   pushpull trial: 30 threads: 40 src:   2355535     0.8537 sec
parent+level pushpull trial: 30 threads: 40 src:   2355535     1.0535 sec
parent only  pushonly trial: 31 threads: 40 src:  32885205     0.0140 sec
level only   pushonly trial: 31 threads: 40 src:  32885205     0.0176 sec
parent+level pushonly trial: 31 threads: 40 src:  32885205     0.0159 sec
parent only  pushpull trial: 31 threads: 40 src:  32885205     0.0146 sec
level only   pushpull trial: 31 threads: 40 src:  32885205     0.0165 sec
parent+level pushpull trial: 31 threads: 40 src:  32885205     0.0173 sec
parent only  pushonly trial: 32 threads: 40 src:  40657440     1.3016 sec
level only   pushonly trial: 32 threads: 40 src:  40657440     1.1493 sec
parent+level pushonly trial: 32 threads: 40 src:  40657440     1.3739 sec
parent only  pushpull trial: 32 threads: 40 src:  40657440     0.8676 sec
level only   pushpull trial: 32 threads: 40 src:  40657440     0.8099 sec
parent+level pushpull trial: 32 threads: 40 src:  40657440     0.9973 sec
parent only  pushonly trial: 33 threads: 40 src:  35196167     1.3051 sec
level only   pushonly trial: 33 threads: 40 src:  35196167     1.1451 sec
parent+level pushonly trial: 33 threads: 40 src:  35196167     1.3564 sec
parent only  pushpull trial: 33 threads: 40 src:  35196167     0.8826 sec
level only   pushpull trial: 33 threads: 40 src:  35196167     0.8249 sec
parent+level pushpull trial: 33 threads: 40 src:  35196167     1.0095 sec
parent only  pushonly trial: 34 threads: 40 src:  45544426     1.3464 sec
level only   pushonly trial: 34 threads: 40 src:  45544426     1.1909 sec
parent+level pushonly trial: 34 threads: 40 src:  45544426     1.3884 sec
parent only  pushpull trial: 34 threads: 40 src:  45544426     0.8974 sec
level only   pushpull trial: 34 threads: 40 src:  45544426     0.8559 sec
parent+level pushpull trial: 34 threads: 40 src:  45544426     1.0534 sec
parent only  pushonly trial: 35 threads: 40 src:   6175519     0.0013 sec
level only   pushonly trial: 35 threads: 40 src:   6175519     0.0011 sec
parent+level pushonly trial: 35 threads: 40 src:   6175519     0.0022 sec
parent only  pushpull trial: 35 threads: 40 src:   6175519     0.0016 sec
level only   pushpull trial: 35 threads: 40 src:   6175519     0.0013 sec
parent+level pushpull trial: 35 threads: 40 src:   6175519     0.0023 sec
parent only  pushonly trial: 36 threads: 40 src:  40058318     1.3367 sec
level only   pushonly trial: 36 threads: 40 src:  40058318     1.1633 sec
parent+level pushonly trial: 36 threads: 40 src:  40058318     1.3771 sec
parent only  pushpull trial: 36 threads: 40 src:  40058318     0.9047 sec
level only   pushpull trial: 36 threads: 40 src:  40058318     0.8537 sec
parent+level pushpull trial: 36 threads: 40 src:  40058318     1.0472 sec
parent only  pushonly trial: 37 threads: 40 src:  50626230     1.3392 sec
level only   pushonly trial: 37 threads: 40 src:  50626230     1.1881 sec
parent+level pushonly trial: 37 threads: 40 src:  50626230     1.3960 sec
parent only  pushpull trial: 37 threads: 40 src:  50626230     0.9001 sec
level only   pushpull trial: 37 threads: 40 src:  50626230     0.8678 sec
parent+level pushpull trial: 37 threads: 40 src:  50626230     1.0402 sec
parent only  pushonly trial: 38 threads: 40 src:  36571019     1.3193 sec
level only   pushonly trial: 38 threads: 40 src:  36571019     1.1513 sec
parent+level pushonly trial: 38 threads: 40 src:  36571019     1.3668 sec
parent only  pushpull trial: 38 threads: 40 src:  36571019     0.8742 sec
level only   pushpull trial: 38 threads: 40 src:  36571019     0.8101 sec
parent+level pushpull trial: 38 threads: 40 src:  36571019     1.0091 sec
parent only  pushonly trial: 39 threads: 40 src:  49397052     1.3072 sec
level only   pushonly trial: 39 threads: 40 src:  49397052     1.1316 sec
parent+level pushonly trial: 39 threads: 40 src:  49397052     1.3539 sec
parent only  pushpull trial: 39 threads: 40 src:  49397052     0.8658 sec
level only   pushpull trial: 39 threads: 40 src:  49397052     0.8092 sec
parent+level pushpull trial: 39 threads: 40 src:  49397052     1.0026 sec
parent only  pushonly trial: 40 threads: 40 src:  23434265     1.3047 sec
level only   pushonly trial: 40 threads: 40 src:  23434265     1.1547 sec
parent+level pushonly trial: 40 threads: 40 src:  23434265     1.3650 sec
parent only  pushpull trial: 40 threads: 40 src:  23434265     0.8621 sec
level only   pushpull trial: 40 threads: 40 src:  23434265     0.7970 sec
parent+level pushpull trial: 40 threads: 40 src:  23434265     1.0006 sec
parent only  pushonly trial: 41 threads: 40 src:   2299444     1.2953 sec
level only   pushonly trial: 41 threads: 40 src:   2299444     1.1464 sec
parent+level pushonly trial: 41 threads: 40 src:   2299444     1.3583 sec
parent only  pushpull trial: 41 threads: 40 src:   2299444     0.8463 sec
level only   pushpull trial: 41 threads: 40 src:   2299444     0.7989 sec
parent+level pushpull trial: 41 threads: 40 src:   2299444     0.9829 sec
parent only  pushonly trial: 42 threads: 40 src:  32873823     0.0164 sec
level only   pushonly trial: 42 threads: 40 src:  32873823     0.0171 sec
parent+level pushonly trial: 42 threads: 40 src:  32873823     0.0185 sec
parent only  pushpull trial: 42 threads: 40 src:  32873823     0.0164 sec
level only   pushpull trial: 42 threads: 40 src:  32873823     0.0179 sec
parent+level pushpull trial: 42 threads: 40 src:  32873823     0.0184 sec
parent only  pushonly trial: 43 threads: 40 src:  25978282     1.2874 sec
level only   pushonly trial: 43 threads: 40 src:  25978282     1.1254 sec
parent+level pushonly trial: 43 threads: 40 src:  25978282     1.3367 sec
parent only  pushpull trial: 43 threads: 40 src:  25978282     0.9200 sec
level only   pushpull trial: 43 threads: 40 src:  25978282     0.8747 sec
parent+level pushpull trial: 43 threads: 40 src:  25978282     1.0617 sec
parent only  pushonly trial: 44 threads: 40 src:   2461715     0.0189 sec
level only   pushonly trial: 44 threads: 40 src:   2461715     0.0206 sec
parent+level pushonly trial: 44 threads: 40 src:   2461715     0.0214 sec
parent only  pushpull trial: 44 threads: 40 src:   2461715     0.0194 sec
level only   pushpull trial: 44 threads: 40 src:   2461715     0.0229 sec
parent+level pushpull trial: 44 threads: 40 src:   2461715     0.0202 sec
parent only  pushonly trial: 45 threads: 40 src:  22787314     1.3052 sec
level only   pushonly trial: 45 threads: 40 src:  22787314     1.1506 sec
parent+level pushonly trial: 45 threads: 40 src:  22787314     1.3562 sec
parent only  pushpull trial: 45 threads: 40 src:  22787314     0.8528 sec
level only   pushpull trial: 45 threads: 40 src:  22787314     0.8141 sec
parent+level pushpull trial: 45 threads: 40 src:  22787314     1.0250 sec
parent only  pushonly trial: 46 threads: 40 src:  30759947     1.3456 sec
level only   pushonly trial: 46 threads: 40 src:  30759947     1.1746 sec
parent+level pushonly trial: 46 threads: 40 src:  30759947     1.3882 sec
parent only  pushpull trial: 46 threads: 40 src:  30759947     0.8829 sec
level only   pushpull trial: 46 threads: 40 src:  30759947     0.8215 sec
parent+level pushpull trial: 46 threads: 40 src:  30759947     1.0256 sec
parent only  pushonly trial: 47 threads: 40 src:   7428894     0.0017 sec
level only   pushonly trial: 47 threads: 40 src:   7428894     0.0005 sec
parent+level pushonly trial: 47 threads: 40 src:   7428894     0.0014 sec
parent only  pushpull trial: 47 threads: 40 src:   7428894     0.0009 sec
level only   pushpull trial: 47 threads: 40 src:   7428894     0.0006 sec
parent+level pushpull trial: 47 threads: 40 src:   7428894     0.0014 sec
parent only  pushonly trial: 48 threads: 40 src:  39173870     0.0009 sec
level only   pushonly trial: 48 threads: 40 src:  39173870     0.0005 sec
parent+level pushonly trial: 48 threads: 40 src:  39173870     0.0014 sec
parent only  pushpull trial: 48 threads: 40 src:  39173870     0.0009 sec
level only   pushpull trial: 48 threads: 40 src:  39173870     0.0005 sec
parent+level pushpull trial: 48 threads: 40 src:  39173870     0.0015 sec
parent only  pushonly trial: 49 threads: 40 src:  43194209     0.0037 sec
level only   pushonly trial: 49 threads: 40 src:  43194209     0.0058 sec
parent+level pushonly trial: 49 threads: 40 src:  43194209     0.0043 sec
parent only  pushpull trial: 49 threads: 40 src:  43194209     0.0036 sec
level only   pushpull trial: 49 threads: 40 src:  43194209     0.0084 sec
parent+level pushpull trial: 49 threads: 40 src:  43194209     0.0043 sec
parent only  pushonly trial: 50 threads: 40 src:  26361509     0.0069 sec
level only   pushonly trial: 50 threads: 40 src:  26361509     0.0092 sec
parent+level pushonly trial: 50 threads: 40 src:  26361509     0.0081 sec
parent only  pushpull trial: 50 threads: 40 src:  26361509     0.0092 sec
level only   pushpull trial: 50 threads: 40 src:  26361509     0.0094 sec
parent+level pushpull trial: 50 threads: 40 src:  26361509     0.0083 sec
parent only  pushonly trial: 51 threads: 40 src:  39747211     0.0007 sec
level only   pushonly trial: 51 threads: 40 src:  39747211     0.0005 sec
parent+level pushonly trial: 51 threads: 40 src:  39747211     0.0014 sec
parent only  pushpull trial: 51 threads: 40 src:  39747211     0.0009 sec
level only   pushpull trial: 51 threads: 40 src:  39747211     0.0005 sec
parent+level pushpull trial: 51 threads: 40 src:  39747211     0.0014 sec
parent only  pushonly trial: 52 threads: 40 src:  30670029     1.3629 sec
level only   pushonly trial: 52 threads: 40 src:  30670029     1.1936 sec
parent+level pushonly trial: 52 threads: 40 src:  30670029     1.4177 sec
parent only  pushpull trial: 52 threads: 40 src:  30670029     0.8897 sec
level only   pushpull trial: 52 threads: 40 src:  30670029     0.8375 sec
parent+level pushpull trial: 52 threads: 40 src:  30670029     1.0351 sec
parent only  pushonly trial: 53 threads: 40 src:  41483033     1.3287 sec
level only   pushonly trial: 53 threads: 40 src:  41483033     1.1590 sec
parent+level pushonly trial: 53 threads: 40 src:  41483033     1.3824 sec
parent only  pushpull trial: 53 threads: 40 src:  41483033     0.9315 sec
level only   pushpull trial: 53 threads: 40 src:  41483033     0.8909 sec
parent+level pushpull trial: 53 threads: 40 src:  41483033     1.0722 sec
parent only  pushonly trial: 54 threads: 40 src:   9358666     1.3199 sec
level only   pushonly trial: 54 threads: 40 src:   9358666     1.1423 sec
parent+level pushonly trial: 54 threads: 40 src:   9358666     1.3716 sec
parent only  pushpull trial: 54 threads: 40 src:   9358666     0.8792 sec
level only   pushpull trial: 54 threads: 40 src:   9358666     0.8153 sec
parent+level pushpull trial: 54 threads: 40 src:   9358666     1.0009 sec
parent only  pushonly trial: 55 threads: 40 src:   9945008     1.2886 sec
level only   pushonly trial: 55 threads: 40 src:   9945008     1.1264 sec
parent+level pushonly trial: 55 threads: 40 src:   9945008     1.3586 sec
parent only  pushpull trial: 55 threads: 40 src:   9945008     0.8688 sec
level only   pushpull trial: 55 threads: 40 src:   9945008     0.8178 sec
parent+level pushpull trial: 55 threads: 40 src:   9945008     1.0045 sec
parent only  pushonly trial: 56 threads: 40 src:   3355244     1.3125 sec
level only   pushonly trial: 56 threads: 40 src:   3355244     1.1369 sec
parent+level pushonly trial: 56 threads: 40 src:   3355244     1.3432 sec
parent only  pushpull trial: 56 threads: 40 src:   3355244     0.8786 sec
level only   pushpull trial: 56 threads: 40 src:   3355244     0.8201 sec
parent+level pushpull trial: 56 threads: 40 src:   3355244     1.0077 sec
parent only  pushonly trial: 57 threads: 40 src:  33831269     1.3471 sec
level only   pushonly trial: 57 threads: 40 src:  33831269     1.1786 sec
parent+level pushonly trial: 57 threads: 40 src:  33831269     1.5443 sec
parent only  pushpull trial: 57 threads: 40 src:  33831269     0.8602 sec
level only   pushpull trial: 57 threads: 40 src:  33831269     0.8117 sec
parent+level pushpull trial: 57 threads: 40 src:  33831269     1.0150 sec
parent only  pushonly trial: 58 threads: 40 src:  45124744     1.3459 sec
level only   pushonly trial: 58 threads: 40 src:  45124744     1.1700 sec
parent+level pushonly trial: 58 threads: 40 src:  45124744     1.4007 sec
parent only  pushpull trial: 58 threads: 40 src:  45124744     0.9037 sec
level only   pushpull trial: 58 threads: 40 src:  45124744     0.8607 sec
parent+level pushpull trial: 58 threads: 40 src:  45124744     1.0550 sec
parent only  pushonly trial: 59 threads: 40 src:  16137877     0.0126 sec
level only   pushonly trial: 59 threads: 40 src:  16137877     0.0134 sec
parent+level pushonly trial: 59 threads: 40 src:  16137877     0.0121 sec
parent only  pushpull trial: 59 threads: 40 src:  16137877     0.0111 sec
level only   pushpull trial: 59 threads: 40 src:  16137877     0.0136 sec
parent+level pushpull trial: 59 threads: 40 src:  16137877     0.0126 sec
parent only  pushonly trial: 60 threads: 40 src:  11235448     1.3164 sec
level only   pushonly trial: 60 threads: 40 src:  11235448     1.1555 sec
parent+level pushonly trial: 60 threads: 40 src:  11235448     1.3532 sec
parent only  pushpull trial: 60 threads: 40 src:  11235448     0.8736 sec
level only   pushpull trial: 60 threads: 40 src:  11235448     0.8197 sec
parent+level pushpull trial: 60 threads: 40 src:  11235448     1.0155 sec
parent only  pushonly trial: 61 threads: 40 src:  37509144     1.2865 sec
level only   pushonly trial: 61 threads: 40 src:  37509144     1.1289 sec
parent+level pushonly trial: 61 threads: 40 src:  37509144     1.3355 sec
parent only  pushpull trial: 61 threads: 40 src:  37509144     0.8579 sec
level only   pushpull trial: 61 threads: 40 src:  37509144     0.8130 sec
parent+level pushpull trial: 61 threads: 40 src:  37509144     0.9902 sec
parent only  pushonly trial: 62 threads: 40 src:  27402414     1.3069 sec
level only   pushonly trial: 62 threads: 40 src:  27402414     1.1312 sec
parent+level pushonly trial: 62 threads: 40 src:  27402414     1.3468 sec
parent only  pushpull trial: 62 threads: 40 src:  27402414     0.8515 sec
level only   pushpull trial: 62 threads: 40 src:  27402414     0.8117 sec
parent+level pushpull trial: 62 threads: 40 src:  27402414     0.9937 sec
parent only  pushonly trial: 63 threads: 40 src:  39546083     1.3207 sec
level only   pushonly trial: 63 threads: 40 src:  39546083     1.1750 sec
parent+level pushonly trial: 63 threads: 40 src:  39546083     1.3898 sec
parent only  pushpull trial: 63 threads: 40 src:  39546083     0.9112 sec
level only   pushpull trial: 63 threads: 40 src:  39546083     0.8569 sec
parent+level pushpull trial: 63 threads: 40 src:  39546083     1.0518 sec
Avg: BFS pushonly parent only  threads  40:      1.035 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
Avg: BFS pushonly level only   threads  40:      0.908 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
Avg: BFS pushonly level+parent threads  40:      1.076 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
Avg: BFS pushonly parent only  threads  40:      1.035 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
Avg: BFS pushonly level only   threads  40:      0.908 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
Avg: BFS pushonly level+parent threads  40:      1.076 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
Avg: BFS pushpull parent only  threads  40:      0.692 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
Avg: BFS pushpull level only   threads  40:      0.654 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
Avg: BFS pushpull level+parent threads  40:      0.804 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
Avg: BFS pushpull parent only  threads  40:      0.692 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
Avg: BFS pushpull level only   threads  40:      0.654 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
Avg: BFS pushpull level+parent threads  40:      0.804 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb

SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
sources: /home/faculty/davis/GAP/GAP-road/GAP-road_sources.mtx
    GraphBLAS type: type double size: 8
read time: 1.38709
Graph: kind: undirected, nodes: 23947347 entries: 57708624 type: bool
    pattern symmetry: symmetric

------------------------------- threads: 40
parent only  pushonly trial:  0 threads: 40 src:   4795720     3.2264 sec
level only   pushonly trial:  0 threads: 40 src:   4795720     3.1865 sec
parent+level pushonly trial:  0 threads: 40 src:   4795720     3.7415 sec
parent only  pushpull trial:  0 threads: 40 src:   4795720     3.3364 sec
level only   pushpull trial:  0 threads: 40 src:   4795720     3.3026 sec
parent+level pushpull trial:  0 threads: 40 src:   4795720     3.8593 sec
parent only  pushonly trial:  1 threads: 40 src:  21003853     3.2992 sec
level only   pushonly trial:  1 threads: 40 src:  21003853     3.2530 sec
parent+level pushonly trial:  1 threads: 40 src:  21003853     3.8082 sec
parent only  pushpull trial:  1 threads: 40 src:  21003853     3.4399 sec
level only   pushpull trial:  1 threads: 40 src:  21003853     3.3631 sec
parent+level pushpull trial:  1 threads: 40 src:  21003853     3.9108 sec
parent only  pushonly trial:  2 threads: 40 src:    417968     3.3626 sec
level only   pushonly trial:  2 threads: 40 src:    417968     3.3138 sec
parent+level pushonly trial:  2 threads: 40 src:    417968     3.8650 sec
parent only  pushpull trial:  2 threads: 40 src:    417968     3.4676 sec
level only   pushpull trial:  2 threads: 40 src:    417968     3.4268 sec
parent+level pushpull trial:  2 threads: 40 src:    417968     3.9678 sec
parent only  pushonly trial:  3 threads: 40 src:   6496511     3.2164 sec
level only   pushonly trial:  3 threads: 40 src:   6496511     3.1731 sec
parent+level pushonly trial:  3 threads: 40 src:   6496511     3.7310 sec
parent only  pushpull trial:  3 threads: 40 src:   6496511     3.3236 sec
level only   pushpull trial:  3 threads: 40 src:   6496511     3.2844 sec
parent+level pushpull trial:  3 threads: 40 src:   6496511     3.8509 sec
parent only  pushonly trial:  4 threads: 40 src:   6648699     3.3663 sec
level only   pushonly trial:  4 threads: 40 src:   6648699     3.3124 sec
parent+level pushonly trial:  4 threads: 40 src:   6648699     3.8661 sec
parent only  pushpull trial:  4 threads: 40 src:   6648699     3.5400 sec
level only   pushpull trial:  4 threads: 40 src:   6648699     3.4131 sec
parent+level pushpull trial:  4 threads: 40 src:   6648699     3.9659 sec
parent only  pushonly trial:  5 threads: 40 src:   9811073     3.1612 sec
level only   pushonly trial:  5 threads: 40 src:   9811073     3.1215 sec
parent+level pushonly trial:  5 threads: 40 src:   9811073     3.6796 sec
parent only  pushpull trial:  5 threads: 40 src:   9811073     3.2756 sec
level only   pushpull trial:  5 threads: 40 src:   9811073     3.2326 sec
parent+level pushpull trial:  5 threads: 40 src:   9811073     3.7864 sec
parent only  pushonly trial:  6 threads: 40 src:  22247478     3.2507 sec
level only   pushonly trial:  6 threads: 40 src:  22247478     3.2077 sec
parent+level pushonly trial:  6 threads: 40 src:  22247478     3.7627 sec
parent only  pushpull trial:  6 threads: 40 src:  22247478     3.3552 sec
level only   pushpull trial:  6 threads: 40 src:  22247478     3.3113 sec
parent+level pushpull trial:  6 threads: 40 src:  22247478     3.8925 sec
parent only  pushonly trial:  7 threads: 40 src:   5720252     3.1884 sec
level only   pushonly trial:  7 threads: 40 src:   5720252     3.1469 sec
parent+level pushonly trial:  7 threads: 40 src:   5720252     3.7020 sec
parent only  pushpull trial:  7 threads: 40 src:   5720252     3.3018 sec
level only   pushpull trial:  7 threads: 40 src:   5720252     3.2552 sec
parent+level pushpull trial:  7 threads: 40 src:   5720252     3.8071 sec
parent only  pushonly trial:  8 threads: 40 src:  12366459     3.2675 sec
level only   pushonly trial:  8 threads: 40 src:  12366459     3.2189 sec
parent+level pushonly trial:  8 threads: 40 src:  12366459     3.7748 sec
parent only  pushpull trial:  8 threads: 40 src:  12366459     3.3726 sec
level only   pushpull trial:  8 threads: 40 src:  12366459     3.3219 sec
parent+level pushpull trial:  8 threads: 40 src:  12366459     3.8804 sec
parent only  pushonly trial:  9 threads: 40 src:  20413729     3.2721 sec
level only   pushonly trial:  9 threads: 40 src:  20413729     3.2236 sec
parent+level pushonly trial:  9 threads: 40 src:  20413729     3.7792 sec
parent only  pushpull trial:  9 threads: 40 src:  20413729     3.3680 sec
level only   pushpull trial:  9 threads: 40 src:  20413729     3.3991 sec
parent+level pushpull trial:  9 threads: 40 src:  20413729     3.8823 sec
parent only  pushonly trial: 10 threads: 40 src:   4217374     3.1439 sec
level only   pushonly trial: 10 threads: 40 src:   4217374     3.1053 sec
parent+level pushonly trial: 10 threads: 40 src:   4217374     3.6664 sec
parent only  pushpull trial: 10 threads: 40 src:   4217374     3.2659 sec
level only   pushpull trial: 10 threads: 40 src:   4217374     3.2181 sec
parent+level pushpull trial: 10 threads: 40 src:   4217374     3.7807 sec
parent only  pushonly trial: 11 threads: 40 src:   2674749     3.1424 sec
level only   pushonly trial: 11 threads: 40 src:   2674749     3.1042 sec
parent+level pushonly trial: 11 threads: 40 src:   2674749     3.6645 sec
parent only  pushpull trial: 11 threads: 40 src:   2674749     3.2776 sec
level only   pushpull trial: 11 threads: 40 src:   2674749     3.2203 sec
parent+level pushpull trial: 11 threads: 40 src:   2674749     3.7936 sec
parent only  pushonly trial: 12 threads: 40 src:  22085557     3.2733 sec
level only   pushonly trial: 12 threads: 40 src:  22085557     3.2265 sec
parent+level pushonly trial: 12 threads: 40 src:  22085557     3.7815 sec
parent only  pushpull trial: 12 threads: 40 src:  22085557     3.3814 sec
level only   pushpull trial: 12 threads: 40 src:  22085557     3.3344 sec
parent+level pushpull trial: 12 threads: 40 src:  22085557     3.9244 sec
parent only  pushonly trial: 13 threads: 40 src:  19445040     3.3115 sec
level only   pushonly trial: 13 threads: 40 src:  19445040     3.2625 sec
parent+level pushonly trial: 13 threads: 40 src:  19445040     3.8228 sec
parent only  pushpull trial: 13 threads: 40 src:  19445040     3.4482 sec
level only   pushpull trial: 13 threads: 40 src:  19445040     3.3678 sec
parent+level pushpull trial: 13 threads: 40 src:  19445040     3.9294 sec
parent only  pushonly trial: 14 threads: 40 src:   2360788     3.1844 sec
level only   pushonly trial: 14 threads: 40 src:   2360788     3.1444 sec
parent+level pushonly trial: 14 threads: 40 src:   2360788     3.7017 sec
parent only  pushpull trial: 14 threads: 40 src:   2360788     3.3172 sec
level only   pushpull trial: 14 threads: 40 src:   2360788     3.2635 sec
parent+level pushpull trial: 14 threads: 40 src:   2360788     3.8311 sec
parent only  pushonly trial: 15 threads: 40 src:  19115968     3.1828 sec
level only   pushonly trial: 15 threads: 40 src:  19115968     3.1444 sec
parent+level pushonly trial: 15 threads: 40 src:  19115968     3.7052 sec
parent only  pushpull trial: 15 threads: 40 src:  19115968     3.3600 sec
level only   pushpull trial: 15 threads: 40 src:  19115968     3.2620 sec
parent+level pushpull trial: 15 threads: 40 src:  19115968     3.8108 sec
parent only  pushonly trial: 16 threads: 40 src:   7758767     3.3275 sec
level only   pushonly trial: 16 threads: 40 src:   7758767     3.2739 sec
parent+level pushonly trial: 16 threads: 40 src:   7758767     3.8336 sec
parent only  pushpull trial: 16 threads: 40 src:   7758767     3.4407 sec
level only   pushpull trial: 16 threads: 40 src:   7758767     3.3754 sec
parent+level pushpull trial: 16 threads: 40 src:   7758767     3.9547 sec
parent only  pushonly trial: 17 threads: 40 src:  13468234     3.1667 sec
level only   pushonly trial: 17 threads: 40 src:  13468234     3.1251 sec
parent+level pushonly trial: 17 threads: 40 src:  13468234     3.6843 sec
parent only  pushpull trial: 17 threads: 40 src:  13468234     3.2790 sec
level only   pushpull trial: 17 threads: 40 src:  13468234     3.2499 sec
parent+level pushpull trial: 17 threads: 40 src:  13468234     3.7926 sec
parent only  pushonly trial: 18 threads: 40 src:     30367     3.2806 sec
level only   pushonly trial: 18 threads: 40 src:     30367     3.2346 sec
parent+level pushonly trial: 18 threads: 40 src:     30367     3.7924 sec
parent only  pushpull trial: 18 threads: 40 src:     30367     3.3851 sec
level only   pushpull trial: 18 threads: 40 src:     30367     3.3400 sec
parent+level pushpull trial: 18 threads: 40 src:     30367     3.8956 sec
parent only  pushonly trial: 19 threads: 40 src:  18599547     3.2396 sec
level only   pushonly trial: 19 threads: 40 src:  18599547     3.2000 sec
parent+level pushonly trial: 19 threads: 40 src:  18599547     3.7501 sec
parent only  pushpull trial: 19 threads: 40 src:  18599547     3.3540 sec
level only   pushpull trial: 19 threads: 40 src:  18599547     3.3757 sec
parent+level pushpull trial: 19 threads: 40 src:  18599547     3.8624 sec
parent only  pushonly trial: 20 threads: 40 src:   7526108     3.3698 sec
level only   pushonly trial: 20 threads: 40 src:   7526108     3.3158 sec
parent+level pushonly trial: 20 threads: 40 src:   7526108     3.8683 sec
parent only  pushpull trial: 20 threads: 40 src:   7526108     3.4695 sec
level only   pushpull trial: 20 threads: 40 src:   7526108     3.4697 sec
parent+level pushpull trial: 20 threads: 40 src:   7526108     4.0231 sec
parent only  pushonly trial: 21 threads: 40 src:  16836280     3.1650 sec
level only   pushonly trial: 21 threads: 40 src:  16836280     3.1250 sec
parent+level pushonly trial: 21 threads: 40 src:  16836280     3.6844 sec
parent only  pushpull trial: 21 threads: 40 src:  16836280     3.3161 sec
level only   pushpull trial: 21 threads: 40 src:  16836280     3.2088 sec
parent+level pushpull trial: 21 threads: 40 src:  16836280     3.7812 sec
parent only  pushonly trial: 22 threads: 40 src:  12742067     3.1220 sec
level only   pushonly trial: 22 threads: 40 src:  12742067     3.0880 sec
parent+level pushonly trial: 22 threads: 40 src:  12742067     3.6316 sec
parent only  pushpull trial: 22 threads: 40 src:  12742067     3.2525 sec
level only   pushpull trial: 22 threads: 40 src:  12742067     3.1962 sec
parent+level pushpull trial: 22 threads: 40 src:  12742067     3.7365 sec
parent only  pushonly trial: 23 threads: 40 src:   7697995     3.2723 sec
level only   pushonly trial: 23 threads: 40 src:   7697995     3.2207 sec
parent+level pushonly trial: 23 threads: 40 src:   7697995     3.7589 sec
parent only  pushpull trial: 23 threads: 40 src:   7697995     3.3794 sec
level only   pushpull trial: 23 threads: 40 src:   7697995     3.3190 sec
parent+level pushpull trial: 23 threads: 40 src:   7697995     3.8599 sec
parent only  pushonly trial: 24 threads: 40 src:   5876443     3.3130 sec
level only   pushonly trial: 24 threads: 40 src:   5876443     3.2576 sec
parent+level pushonly trial: 24 threads: 40 src:   5876443     3.7991 sec
parent only  pushpull trial: 24 threads: 40 src:   5876443     3.4128 sec
level only   pushpull trial: 24 threads: 40 src:   5876443     3.3587 sec
parent+level pushpull trial: 24 threads: 40 src:   5876443     3.9176 sec
parent only  pushonly trial: 25 threads: 40 src:   9616340     3.2366 sec
level only   pushonly trial: 25 threads: 40 src:   9616340     3.1894 sec
parent+level pushonly trial: 25 threads: 40 src:   9616340     3.7311 sec
parent only  pushpull trial: 25 threads: 40 src:   9616340     3.3586 sec
level only   pushpull trial: 25 threads: 40 src:   9616340     3.3298 sec
parent+level pushpull trial: 25 threads: 40 src:   9616340     3.8503 sec
parent only  pushonly trial: 26 threads: 40 src:   2497673     3.0893 sec
level only   pushonly trial: 26 threads: 40 src:   2497673     3.0537 sec
parent+level pushonly trial: 26 threads: 40 src:   2497673     3.5942 sec
parent only  pushpull trial: 26 threads: 40 src:   2497673     3.2096 sec
level only   pushpull trial: 26 threads: 40 src:   2497673     3.1732 sec
parent+level pushpull trial: 26 threads: 40 src:   2497673     3.7271 sec
parent only  pushonly trial: 27 threads: 40 src:  10052290     3.2648 sec
level only   pushonly trial: 27 threads: 40 src:  10052290     3.2145 sec
parent+level pushonly trial: 27 threads: 40 src:  10052290     3.7512 sec
parent only  pushpull trial: 27 threads: 40 src:  10052290     3.4114 sec
level only   pushpull trial: 27 threads: 40 src:  10052290     3.3261 sec
parent+level pushpull trial: 27 threads: 40 src:  10052290     3.8817 sec
parent only  pushonly trial: 28 threads: 40 src:  12493057     3.1296 sec
level only   pushonly trial: 28 threads: 40 src:  12493057     3.0958 sec
parent+level pushonly trial: 28 threads: 40 src:  12493057     3.6385 sec
parent only  pushpull trial: 28 threads: 40 src:  12493057     3.2717 sec
level only   pushpull trial: 28 threads: 40 src:  12493057     3.2048 sec
parent+level pushpull trial: 28 threads: 40 src:  12493057     3.7427 sec
parent only  pushonly trial: 29 threads: 40 src:   1670855     3.1399 sec
level only   pushonly trial: 29 threads: 40 src:   1670855     3.0999 sec
parent+level pushonly trial: 29 threads: 40 src:   1670855     3.6422 sec
parent only  pushpull trial: 29 threads: 40 src:   1670855     3.2526 sec
level only   pushpull trial: 29 threads: 40 src:   1670855     3.2109 sec
parent+level pushpull trial: 29 threads: 40 src:   1670855     3.7523 sec
parent only  pushonly trial: 30 threads: 40 src:   2760679     3.1951 sec
level only   pushonly trial: 30 threads: 40 src:   2760679     3.1462 sec
parent+level pushonly trial: 30 threads: 40 src:   2760679     3.6882 sec
parent only  pushpull trial: 30 threads: 40 src:   2760679     3.3247 sec
level only   pushpull trial: 30 threads: 40 src:   2760679     3.2674 sec
parent+level pushpull trial: 30 threads: 40 src:   2760679     3.8200 sec
parent only  pushonly trial: 31 threads: 40 src:   2460941     3.0945 sec
level only   pushonly trial: 31 threads: 40 src:   2460941     3.0540 sec
parent+level pushonly trial: 31 threads: 40 src:   2460941     3.6017 sec
parent only  pushpull trial: 31 threads: 40 src:   2460941     3.2172 sec
level only   pushpull trial: 31 threads: 40 src:   2460941     3.1740 sec
parent+level pushpull trial: 31 threads: 40 src:   2460941     3.7158 sec
parent only  pushonly trial: 32 threads: 40 src:   8489650     3.2608 sec
level only   pushonly trial: 32 threads: 40 src:   8489650     3.2107 sec
parent+level pushonly trial: 32 threads: 40 src:   8489650     3.7476 sec
parent only  pushpull trial: 32 threads: 40 src:   8489650     3.3587 sec
level only   pushpull trial: 32 threads: 40 src:   8489650     3.3080 sec
parent+level pushpull trial: 32 threads: 40 src:   8489650     3.9029 sec
parent only  pushonly trial: 33 threads: 40 src:   5005225     3.1550 sec
level only   pushonly trial: 33 threads: 40 src:   5005225     3.1157 sec
parent+level pushonly trial: 33 threads: 40 src:   5005225     3.6607 sec
parent only  pushpull trial: 33 threads: 40 src:   5005225     3.2710 sec
level only   pushpull trial: 33 threads: 40 src:   5005225     3.2334 sec
parent+level pushpull trial: 33 threads: 40 src:   5005225     3.7682 sec
parent only  pushonly trial: 34 threads: 40 src:   8744645     3.2722 sec
level only   pushonly trial: 34 threads: 40 src:   8744645     3.2208 sec
parent+level pushonly trial: 34 threads: 40 src:   8744645     3.7641 sec
parent only  pushpull trial: 34 threads: 40 src:   8744645     3.3740 sec
level only   pushpull trial: 34 threads: 40 src:   8744645     3.3472 sec
parent+level pushpull trial: 34 threads: 40 src:   8744645     3.8741 sec
parent only  pushonly trial: 35 threads: 40 src:   8512023     3.2601 sec
level only   pushonly trial: 35 threads: 40 src:   8512023     3.2097 sec
parent+level pushonly trial: 35 threads: 40 src:   8512023     3.7465 sec
parent only  pushpull trial: 35 threads: 40 src:   8512023     3.3617 sec
level only   pushpull trial: 35 threads: 40 src:   8512023     3.3143 sec
parent+level pushpull trial: 35 threads: 40 src:   8512023     3.8544 sec
parent only  pushonly trial: 36 threads: 40 src:  21912165     3.0606 sec
level only   pushonly trial: 36 threads: 40 src:  21912165     3.0266 sec
parent+level pushonly trial: 36 threads: 40 src:  21912165     3.5690 sec
parent only  pushpull trial: 36 threads: 40 src:  21912165     3.1784 sec
level only   pushpull trial: 36 threads: 40 src:  21912165     3.1416 sec
parent+level pushpull trial: 36 threads: 40 src:  21912165     3.6000 sec
parent only  pushonly trial: 37 threads: 40 src:   1105390     3.1552 sec
level only   pushonly trial: 37 threads: 40 src:   1105390     3.1149 sec
parent+level pushonly trial: 37 threads: 40 src:   1105390     3.6344 sec
parent only  pushpull trial: 37 threads: 40 src:   1105390     3.4025 sec
level only   pushpull trial: 37 threads: 40 src:   1105390     3.2990 sec
parent+level pushpull trial: 37 threads: 40 src:   1105390     3.8495 sec
parent only  pushonly trial: 38 threads: 40 src:  15432163     3.2880 sec
level only   pushonly trial: 38 threads: 40 src:  15432163     3.2383 sec
parent+level pushonly trial: 38 threads: 40 src:  15432163     3.7754 sec
parent only  pushpull trial: 38 threads: 40 src:  15432163     3.4071 sec
level only   pushpull trial: 38 threads: 40 src:  15432163     3.3390 sec
parent+level pushpull trial: 38 threads: 40 src:  15432163     3.9016 sec
parent only  pushonly trial: 39 threads: 40 src:   1600177     3.1347 sec
level only   pushonly trial: 39 threads: 40 src:   1600177     3.0946 sec
parent+level pushonly trial: 39 threads: 40 src:   1600177     3.6396 sec
parent only  pushpull trial: 39 threads: 40 src:   1600177     3.2921 sec
level only   pushpull trial: 39 threads: 40 src:   1600177     3.2220 sec
parent+level pushpull trial: 39 threads: 40 src:   1600177     3.7424 sec
parent only  pushonly trial: 40 threads: 40 src:  19079469     3.1260 sec
level only   pushonly trial: 40 threads: 40 src:  19079469     3.0885 sec
parent+level pushonly trial: 40 threads: 40 src:  19079469     3.6316 sec
parent only  pushpull trial: 40 threads: 40 src:  19079469     3.2382 sec
level only   pushpull trial: 40 threads: 40 src:  19079469     3.1990 sec
parent+level pushpull trial: 40 threads: 40 src:  19079469     3.7388 sec
parent only  pushonly trial: 41 threads: 40 src:  16516637     3.0639 sec
level only   pushonly trial: 41 threads: 40 src:  16516637     3.0285 sec
parent+level pushonly trial: 41 threads: 40 src:  16516637     3.5749 sec
parent only  pushpull trial: 41 threads: 40 src:  16516637     3.1785 sec
level only   pushpull trial: 41 threads: 40 src:  16516637     3.1441 sec
parent+level pushpull trial: 41 threads: 40 src:  16516637     3.6810 sec
parent only  pushonly trial: 42 threads: 40 src:  20202566     3.2196 sec
level only   pushonly trial: 42 threads: 40 src:  20202566     3.1811 sec
parent+level pushonly trial: 42 threads: 40 src:  20202566     3.7193 sec
parent only  pushpull trial: 42 threads: 40 src:  20202566     3.3307 sec
level only   pushpull trial: 42 threads: 40 src:  20202566     3.2904 sec
parent+level pushpull trial: 42 threads: 40 src:  20202566     3.8258 sec
parent only  pushonly trial: 43 threads: 40 src:  21372803     3.2522 sec
level only   pushonly trial: 43 threads: 40 src:  21372803     3.2056 sec
parent+level pushonly trial: 43 threads: 40 src:  21372803     3.7458 sec
parent only  pushpull trial: 43 threads: 40 src:  21372803     3.3545 sec
level only   pushpull trial: 43 threads: 40 src:  21372803     3.3075 sec
parent+level pushpull trial: 43 threads: 40 src:  21372803     3.8446 sec
parent only  pushonly trial: 44 threads: 40 src:   2898009     3.1581 sec
level only   pushonly trial: 44 threads: 40 src:   2898009     3.1176 sec
parent+level pushonly trial: 44 threads: 40 src:   2898009     3.6617 sec
parent only  pushpull trial: 44 threads: 40 src:   2898009     3.2698 sec
level only   pushpull trial: 44 threads: 40 src:   2898009     3.2273 sec
parent+level pushpull trial: 44 threads: 40 src:   2898009     3.7792 sec
parent only  pushonly trial: 45 threads: 40 src:   8491277     3.2581 sec
level only   pushonly trial: 45 threads: 40 src:   8491277     3.2169 sec
parent+level pushonly trial: 45 threads: 40 src:   8491277     3.7506 sec
parent only  pushpull trial: 45 threads: 40 src:   8491277     3.3897 sec
level only   pushpull trial: 45 threads: 40 src:   8491277     3.3130 sec
parent+level pushpull trial: 45 threads: 40 src:   8491277     3.8500 sec
parent only  pushonly trial: 46 threads: 40 src:  18798317     3.1848 sec
level only   pushonly trial: 46 threads: 40 src:  18798317     3.1484 sec
parent+level pushonly trial: 46 threads: 40 src:  18798317     3.6869 sec
parent only  pushpull trial: 46 threads: 40 src:  18798317     3.2754 sec
level only   pushpull trial: 46 threads: 40 src:  18798317     3.2060 sec
parent+level pushpull trial: 46 threads: 40 src:  18798317     3.6795 sec
parent only  pushonly trial: 47 threads: 40 src:  23757560     3.0866 sec
level only   pushonly trial: 47 threads: 40 src:  23757560     3.0495 sec
parent+level pushonly trial: 47 threads: 40 src:  23757560     3.5671 sec
parent only  pushpull trial: 47 threads: 40 src:  23757560     3.1919 sec
level only   pushpull trial: 47 threads: 40 src:  23757560     3.1494 sec
parent+level pushpull trial: 47 threads: 40 src:  23757560     3.6620 sec
parent only  pushonly trial: 48 threads: 40 src:  17161819     3.1306 sec
level only   pushonly trial: 48 threads: 40 src:  17161819     3.0936 sec
parent+level pushonly trial: 48 threads: 40 src:  17161819     3.6084 sec
parent only  pushpull trial: 48 threads: 40 src:  17161819     3.2284 sec
level only   pushpull trial: 48 threads: 40 src:  17161819     3.1877 sec
parent+level pushpull trial: 48 threads: 40 src:  17161819     3.7049 sec
parent only  pushonly trial: 49 threads: 40 src:  23180739     2.9766 sec
level only   pushonly trial: 49 threads: 40 src:  23180739     2.9429 sec
parent+level pushonly trial: 49 threads: 40 src:  23180739     3.4641 sec
parent only  pushpull trial: 49 threads: 40 src:  23180739     3.0830 sec
level only   pushpull trial: 49 threads: 40 src:  23180739     3.0672 sec
parent+level pushpull trial: 49 threads: 40 src:  23180739     3.5813 sec
parent only  pushonly trial: 50 threads: 40 src:  10997085     3.2294 sec
level only   pushonly trial: 50 threads: 40 src:  10997085     3.1780 sec
parent+level pushonly trial: 50 threads: 40 src:  10997085     3.6859 sec
parent only  pushpull trial: 50 threads: 40 src:  10997085     3.3251 sec
level only   pushpull trial: 50 threads: 40 src:  10997085     3.2720 sec
parent+level pushpull trial: 50 threads: 40 src:  10997085     3.8045 sec
parent only  pushonly trial: 51 threads: 40 src:   3730630     3.0669 sec
level only   pushonly trial: 51 threads: 40 src:   3730630     3.0265 sec
parent+level pushonly trial: 51 threads: 40 src:   3730630     3.5445 sec
parent only  pushpull trial: 51 threads: 40 src:   3730630     3.1724 sec
level only   pushpull trial: 51 threads: 40 src:   3730630     3.1444 sec
parent+level pushpull trial: 51 threads: 40 src:   3730630     3.6600 sec
parent only  pushonly trial: 52 threads: 40 src:   1079068     3.1340 sec
level only   pushonly trial: 52 threads: 40 src:   1079068     3.0880 sec
parent+level pushonly trial: 52 threads: 40 src:   1079068     3.6047 sec
parent only  pushpull trial: 52 threads: 40 src:   1079068     3.2294 sec
level only   pushpull trial: 52 threads: 40 src:   1079068     3.1906 sec
parent+level pushpull trial: 52 threads: 40 src:   1079068     3.7032 sec
parent only  pushonly trial: 53 threads: 40 src:  15426822     3.1699 sec
level only   pushonly trial: 53 threads: 40 src:  15426822     3.1197 sec
parent+level pushonly trial: 53 threads: 40 src:  15426822     3.6334 sec
parent only  pushpull trial: 53 threads: 40 src:  15426822     3.2650 sec
level only   pushpull trial: 53 threads: 40 src:  15426822     3.2172 sec
parent+level pushpull trial: 53 threads: 40 src:  15426822     3.7291 sec
parent only  pushonly trial: 54 threads: 40 src:  12190925     3.1713 sec
level only   pushonly trial: 54 threads: 40 src:  12190925     3.1254 sec
parent+level pushonly trial: 54 threads: 40 src:  12190925     3.6373 sec
parent only  pushpull trial: 54 threads: 40 src:  12190925     3.2670 sec
level only   pushpull trial: 54 threads: 40 src:  12190925     3.2221 sec
parent+level pushpull trial: 54 threads: 40 src:  12190925     3.7370 sec
parent only  pushonly trial: 55 threads: 40 src:   1155218     3.1368 sec
level only   pushonly trial: 55 threads: 40 src:   1155218     3.0926 sec
parent+level pushonly trial: 55 threads: 40 src:   1155218     3.6104 sec
parent only  pushpull trial: 55 threads: 40 src:   1155218     3.2410 sec
level only   pushpull trial: 55 threads: 40 src:   1155218     3.1971 sec
parent+level pushpull trial: 55 threads: 40 src:   1155218     3.7066 sec
parent only  pushonly trial: 56 threads: 40 src:  10693488     3.1710 sec
level only   pushonly trial: 56 threads: 40 src:  10693488     3.1187 sec
parent+level pushonly trial: 56 threads: 40 src:  10693488     3.6323 sec
parent only  pushpull trial: 56 threads: 40 src:  10693488     3.2981 sec
level only   pushpull trial: 56 threads: 40 src:  10693488     3.2160 sec
parent+level pushpull trial: 56 threads: 40 src:  10693488     3.7325 sec
parent only  pushonly trial: 57 threads: 40 src:  14434835     3.0314 sec
level only   pushonly trial: 57 threads: 40 src:  14434835     2.9900 sec
parent+level pushonly trial: 57 threads: 40 src:  14434835     3.5067 sec
parent only  pushpull trial: 57 threads: 40 src:  14434835     3.1354 sec
level only   pushpull trial: 57 threads: 40 src:  14434835     3.0939 sec
parent+level pushpull trial: 57 threads: 40 src:  14434835     3.6552 sec
parent only  pushonly trial: 58 threads: 40 src:  19963339     3.0468 sec
level only   pushonly trial: 58 threads: 40 src:  19963339     3.0061 sec
parent+level pushonly trial: 58 threads: 40 src:  19963339     3.5234 sec
parent only  pushpull trial: 58 threads: 40 src:  19963339     3.1763 sec
level only   pushpull trial: 58 threads: 40 src:  19963339     3.1146 sec
parent+level pushpull trial: 58 threads: 40 src:  19963339     3.6197 sec
parent only  pushonly trial: 59 threads: 40 src:   3486185     3.0811 sec
level only   pushonly trial: 59 threads: 40 src:   3486185     3.0367 sec
parent+level pushonly trial: 59 threads: 40 src:   3486185     3.5512 sec
parent only  pushpull trial: 59 threads: 40 src:   3486185     3.1823 sec
level only   pushpull trial: 59 threads: 40 src:   3486185     3.1352 sec
parent+level pushpull trial: 59 threads: 40 src:   3486185     3.6506 sec
parent only  pushonly trial: 60 threads: 40 src:  18383269     3.1373 sec
level only   pushonly trial: 60 threads: 40 src:  18383269     3.0949 sec
parent+level pushonly trial: 60 threads: 40 src:  18383269     3.6106 sec
parent only  pushpull trial: 60 threads: 40 src:  18383269     3.2423 sec
level only   pushpull trial: 60 threads: 40 src:  18383269     3.1899 sec
parent+level pushpull trial: 60 threads: 40 src:  18383269     3.7077 sec
parent only  pushonly trial: 61 threads: 40 src:  20269908     3.1561 sec
level only   pushonly trial: 61 threads: 40 src:  20269908     3.1106 sec
parent+level pushonly trial: 61 threads: 40 src:  20269908     3.8259 sec
parent only  pushpull trial: 61 threads: 40 src:  20269908     3.3529 sec
level only   pushpull trial: 61 threads: 40 src:  20269908     3.2915 sec
parent+level pushpull trial: 61 threads: 40 src:  20269908     3.8270 sec
parent only  pushonly trial: 62 threads: 40 src:  12370764     3.0976 sec
level only   pushonly trial: 62 threads: 40 src:  12370764     3.0630 sec
parent+level pushonly trial: 62 threads: 40 src:  12370764     3.5981 sec
parent only  pushpull trial: 62 threads: 40 src:  12370764     3.2209 sec
level only   pushpull trial: 62 threads: 40 src:  12370764     3.1769 sec
parent+level pushpull trial: 62 threads: 40 src:  12370764     3.7061 sec
parent only  pushonly trial: 63 threads: 40 src:   7843140     3.3330 sec
level only   pushonly trial: 63 threads: 40 src:   7843140     3.2396 sec
parent+level pushonly trial: 63 threads: 40 src:   7843140     3.7963 sec
parent only  pushpull trial: 63 threads: 40 src:   7843140     3.2595 sec
level only   pushpull trial: 63 threads: 40 src:   7843140     3.2383 sec
parent+level pushpull trial: 63 threads: 40 src:   7843140     3.8652 sec
Avg: BFS pushonly parent only  threads  40:      3.192 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
Avg: BFS pushonly level only   threads  40:      3.147 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
Avg: BFS pushonly level+parent threads  40:      3.691 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
Avg: BFS pushonly parent only  threads  40:      3.192 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
Avg: BFS pushonly level only   threads  40:      3.147 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
Avg: BFS pushonly level+parent threads  40:      3.691 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
Avg: BFS pushpull parent only  threads  40:      3.308 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
Avg: BFS pushpull level only   threads  40:      3.259 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
Avg: BFS pushpull level+parent threads  40:      3.799 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
Avg: BFS pushpull parent only  threads  40:      3.308 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
Avg: BFS pushpull level only   threads  40:      3.259 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
Avg: BFS pushpull level+parent threads  40:      3.799 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb

SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
sources: /home/faculty/davis/GAP/GAP-kron/GAP-kron_sources.mtx
    GraphBLAS type: type double size: 8
read time: 35.2677
Graph: kind: undirected, nodes: 134217726 entries: 4223264644 type: bool
    pattern symmetry: symmetric

Trial 1 : sources: [ 2338012 31997659 23590940 43400604 ]
BC time 40:      25.0584 (sec)

Trial 2 : sources: [ 75337937 169867 104041220 94177942 ]
BC time 40:      25.3644 (sec)

Trial 3 : sources: [ 32871357 56230002 69883037 9346345 ]
BC time 40:      27.3373 (sec)

Trial 4 : sources: [ 48915358 122571173 6183279 86323663 ]
BC time 40:      25.5504 (sec)

Trial 5 : sources: [ 106725780 92389938 16210738 59816700 ]
BC time 40:      25.0109 (sec)

Trial 6 : sources: [ 111669929 102831411 113384800 43872564 ]
BC time 40:      27.2368 (sec)

Trial 7 : sources: [ 80508827 26105648 8807516 118452455 ]
BC time 40:      21.2640 (sec)

Trial 8 : sources: [ 121818859 42361928 29493053 98461503 ]
BC time 40:      19.4754 (sec)

Trial 9 : sources: [ 71931337 103808468 4092345 115276241 ]
BC time 40:      24.1921 (sec)

Trial 10 : sources: [ 4649343 76656189 31312001 111334127 ]
BC time 40:      24.7179 (sec)

Trial 11 : sources: [ 100962918 41823215 22631240 42848461 ]
BC time 40:      22.5126 (sec)

Trial 12 : sources: [ 79485148 106818742 73347974 78848445 ]
BC time 40:      22.6622 (sec)

Trial 13 : sources: [ 109920510 121492133 101037296 15438600 ]
BC time 40:      26.2769 (sec)

Trial 14 : sources: [ 4584784 124503845 87241743 108297008 ]
BC time 40:      26.1659 (sec)

Trial 15 : sources: [ 33955082 79934823 8608481 82435063 ]
BC time 40:      28.8839 (sec)

Trial 16 : sources: [ 46579271 515421 121530467 127978736 ]
BC time 40:      20.9253 (sec)

ntrials: 16

Ave BC 40:     24.540 sec, rate    172.100
Avg: BC  40:     24.540 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
sources: /home/faculty/davis/GAP/GAP-urand/GAP-urand_sources.mtx
    GraphBLAS type: type double size: 8
read time: 72.7121
Graph: kind: undirected, nodes: 134217728 entries: 4294966740 type: bool
    pattern symmetry: symmetric

Trial 1 : sources: [ 27691419 121280314 2413431 37512113 ]
BC time 40:      32.7424 (sec)

Trial 2 : sources: [ 38390877 56651037 128461248 33029842 ]
BC time 40:      33.2468 (sec)

Trial 3 : sources: [ 71406328 117872827 24351938 15444519 ]
BC time 40:      32.4570 (sec)

Trial 4 : sources: [ 127526281 112279428 13631649 110379302 ]
BC time 40:      31.8887 (sec)

Trial 5 : sources: [ 44800623 77768193 175347 107397389 ]
BC time 40:      31.7915 (sec)

Trial 6 : sources: [ 43457209 97215940 73575165 44449715 ]
BC time 40:      32.8962 (sec)

Trial 7 : sources: [ 33931724 55526610 14422051 58043873 ]
BC time 40:      31.7547 (sec)

Trial 8 : sources: [ 72137329 9647840 15940695 14209952 ]
BC time 40:      33.2671 (sec)

Trial 9 : sources: [ 49020883 28901138 50493273 49150069 ]
BC time 40:      32.4345 (sec)

Trial 10 : sources: [ 126525082 6382740 89108297 9239735 ]
BC time 40:      33.0952 (sec)

Trial 11 : sources: [ 110168548 95370259 116653530 123410703 ]
BC time 40:      32.2370 (sec)

Trial 12 : sources: [ 16733665 49030282 108545121 99095665 ]
BC time 40:      32.9302 (sec)

Trial 13 : sources: [ 133850077 63499301 21541382 6230751 ]
BC time 40:      33.2251 (sec)

Trial 14 : sources: [ 89077456 70392765 6670455 61746271 ]
BC time 40:      32.3289 (sec)

Trial 15 : sources: [ 83349535 115272184 20129908 106148553 ]
BC time 40:      31.7305 (sec)

Trial 16 : sources: [ 117042375 71431187 45287808 107702120 ]
BC time 40:      31.7265 (sec)

ntrials: 16

Ave BC 40:     32.485 sec, rate    132.216
Avg: BC  40:     32.485 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
sources: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter_sources.mtx
    GraphBLAS type: type double size: 8
read time: 38.093
Graph: kind: directed, nodes: 61578415 entries: 1468364884 type: bool
    pattern symmetry: unsymmetric

Trial 1 : sources: [ 12441072 54488257 25451915 57714473 ]
BC time 40:       8.7294 (sec)

Trial 2 : sources: [ 14839494 32081104 52957357 50444380 ]
BC time 40:      11.2339 (sec)

Trial 3 : sources: [ 49590701 20127816 34939333 48251001 ]
BC time 40:       9.5604 (sec)

Trial 4 : sources: [ 19524253 43676726 33055508 15244687 ]
BC time 40:       8.6191 (sec)

Trial 5 : sources: [ 24946738 6479472 26077682 22023875 ]
BC time 40:       9.5129 (sec)

Trial 6 : sources: [ 22081915 40034162 49496014 42847507 ]
BC time 40:       9.0741 (sec)

Trial 7 : sources: [ 52409557 55445388 22028097 48766648 ]
BC time 40:       8.8157 (sec)

Trial 8 : sources: [ 44521241 60135542 28528671 9678012 ]
BC time 40:       9.8270 (sec)

Trial 9 : sources: [ 40020306 31625735 37446892 51788952 ]
BC time 40:       8.9029 (sec)

Trial 10 : sources: [ 52584255 20346696 48387909 37337427 ]
BC time 40:       8.5296 (sec)

Trial 11 : sources: [ 50501084 30130061 41185893 56495703 ]
BC time 40:       8.7609 (sec)

Trial 12 : sources: [ 45663305 33359460 48143058 33291513 ]
BC time 40:       9.8083 (sec)

Trial 13 : sources: [ 53461445 29340610 34148498 49171806 ]
BC time 40:       9.0015 (sec)

Trial 14 : sources: [ 35550696 14521507 51633218 46823382 ]
BC time 40:       8.7798 (sec)

Trial 15 : sources: [ 19396273 19871750 36862677 49539126 ]
BC time 40:      11.7917 (sec)

Trial 16 : sources: [ 34016452 36567395 55487793 14391370 ]
BC time 40:       8.5630 (sec)

ntrials: 16

Ave BC 40:      9.344 sec, rate    157.139
Avg: BC  40:      9.344 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
sources: /home/faculty/davis/GAP/GAP-web/GAP-web_sources.mtx
    GraphBLAS type: type double size: 8
read time: 35.8709
Graph: kind: directed, nodes: 50636151 entries: 1930292948 type: bool
    pattern symmetry: unsymmetric

Trial 1 : sources: [ 10219452 44758211 890671 13843756 ]
BC time 40:       6.4946 (sec)

Trial 2 : sources: [ 14168062 20906930 12189584 26352335 ]
BC time 40:       6.2068 (sec)

Trial 3 : sources: [ 43500686 8987024 5699762 41436455 ]
BC time 40:       6.2871 (sec)

Trial 4 : sources: [ 5030727 40735218 16533563 28700166 ]
BC time 40:       8.3940 (sec)

Trial 5 : sources: [ 64711 39634750 16037779 27152739 ]
BC time 40:       7.9350 (sec)

Trial 6 : sources: [ 16404061 20491963 5322423 21420953 ]
BC time 40:       8.2451 (sec)

Trial 7 : sources: [ 26622109 5882875 18091040 10665896 ]
BC time 40:       6.3693 (sec)

Trial 8 : sources: [ 18634422 18138715 2355535 32885205 ]
BC time 40:       6.1447 (sec)

Trial 9 : sources: [ 40657440 35196167 45544426 6175519 ]
BC time 40:       6.0811 (sec)

Trial 10 : sources: [ 40058318 50626230 36571019 49397052 ]
BC time 40:       7.6639 (sec)

Trial 11 : sources: [ 23434265 2299444 32873823 25978282 ]
BC time 40:       6.0131 (sec)

Trial 12 : sources: [ 2461715 22787314 30759947 7428894 ]
BC time 40:       4.4819 (sec)

Trial 13 : sources: [ 39173870 43194209 26361509 39747211 ]
BC time 40:       0.1945 (sec)

Trial 14 : sources: [ 30670029 41483033 9358666 9945008 ]
BC time 40:       7.8585 (sec)

Trial 15 : sources: [ 3355244 33831269 45124744 16137877 ]
BC time 40:       6.2259 (sec)

Trial 16 : sources: [ 11235448 37509144 27402414 39546083 ]
BC time 40:       7.5298 (sec)

ntrials: 16

Ave BC 40:      6.383 sec, rate    302.420
Avg: BC  40:      6.383 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
sources: /home/faculty/davis/GAP/GAP-road/GAP-road_sources.mtx
    GraphBLAS type: type double size: 8
read time: 1.37263
Graph: kind: undirected, nodes: 23947347 entries: 57708624 type: bool
    pattern symmetry: symmetric

Trial 1 : sources: [ 4795720 21003853 417968 6496511 ]
BC time 40:      35.1739 (sec)

Trial 2 : sources: [ 6648699 9811073 22247478 5720252 ]
BC time 40:      35.7276 (sec)

Trial 3 : sources: [ 12366459 20413729 4217374 2674749 ]
BC time 40:      35.2932 (sec)

Trial 4 : sources: [ 22085557 19445040 2360788 19115968 ]
BC time 40:      35.5797 (sec)

Trial 5 : sources: [ 7758767 13468234 30367 18599547 ]
BC time 40:      35.7236 (sec)

Trial 6 : sources: [ 7526108 16836280 12742067 7697995 ]
BC time 40:      35.5140 (sec)

Trial 7 : sources: [ 5876443 9616340 2497673 10052290 ]
BC time 40:      35.6871 (sec)

Trial 8 : sources: [ 12493057 1670855 2760679 2460941 ]
BC time 40:      35.9374 (sec)

Trial 9 : sources: [ 8489650 5005225 8744645 8512023 ]
BC time 40:      35.9794 (sec)

Trial 10 : sources: [ 21912165 1105390 15432163 1600177 ]
BC time 40:      35.8375 (sec)

Trial 11 : sources: [ 19079469 16516637 20202566 21372803 ]
BC time 40:      34.3858 (sec)

Trial 12 : sources: [ 2898009 8491277 18798317 23757560 ]
BC time 40:      34.3900 (sec)

Trial 13 : sources: [ 17161819 23180739 10997085 3730630 ]
BC time 40:      34.3694 (sec)

Trial 14 : sources: [ 1079068 15426822 12190925 1155218 ]
BC time 40:      34.7294 (sec)

Trial 15 : sources: [ 10693488 14434835 19963339 3486185 ]
BC time 40:      34.4947 (sec)

Trial 16 : sources: [ 18383269 20269908 12370764 7843140 ]
BC time 40:      35.7092 (sec)

ntrials: 16

Ave BC 40:     35.283 sec, rate      1.636
Avg: BC  40:     35.283 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
read time: 38.0053
Graph: kind: undirected, nodes: 134217726 entries: 4223264644 type: bool
    pattern symmetry: symmetric
# of trials: 16

SV5b: trial:  0 time:     3.6093 sec
SV5b: trial:  1 time:     3.7125 sec
SV5b: trial:  2 time:     3.7592 sec
SV5b: trial:  3 time:     3.6608 sec
SV5b: trial:  4 time:     3.7121 sec
SV5b: trial:  5 time:     3.6832 sec
SV5b: trial:  6 time:     3.6887 sec
SV5b: trial:  7 time:     3.7396 sec
SV5b: trial:  8 time:     3.7413 sec
SV5b: trial:  9 time:     3.6285 sec
SV5b: trial: 10 time:     3.5521 sec
SV5b: trial: 11 time:     3.5700 sec
SV5b: trial: 12 time:     3.3461 sec
SV5b: trial: 13 time:     3.3592 sec
SV5b: trial: 14 time:     3.3547 sec
SV5b: trial: 15 time:     3.3482 sec
LG2:SV5b: threads: 40 time:     3.5916  # of CC: 71164263

Avg: CC (sv5b.2)   40:      3.592 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb

SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
read time: 53.5596
Graph: kind: undirected, nodes: 134217728 entries: 4294966740 type: bool
    pattern symmetry: symmetric
# of trials: 16

SV5b: trial:  0 time:     4.6567 sec
SV5b: trial:  1 time:     4.5181 sec
SV5b: trial:  2 time:     4.4689 sec
SV5b: trial:  3 time:     4.4694 sec
SV5b: trial:  4 time:     4.4669 sec
SV5b: trial:  5 time:     4.4719 sec
SV5b: trial:  6 time:     4.4877 sec
SV5b: trial:  7 time:     4.4661 sec
SV5b: trial:  8 time:     4.4693 sec
SV5b: trial:  9 time:     4.4719 sec
SV5b: trial: 10 time:     4.4699 sec
SV5b: trial: 11 time:     4.4691 sec
SV5b: trial: 12 time:     4.4614 sec
SV5b: trial: 13 time:     4.4649 sec
SV5b: trial: 14 time:     4.4684 sec
SV5b: trial: 15 time:     4.4674 sec
LG2:SV5b: threads: 40 time:     4.4843  # of CC: 1

Avg: CC (sv5b.2)   40:      4.484 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb

SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
read time: 40.5308
Graph: kind: undirected, nodes: 61578415 entries: 2405026092 type: bool
    pattern symmetry: symmetric
# of trials: 16

SV5b: trial:  0 time:     1.4808 sec
SV5b: trial:  1 time:     1.4865 sec
SV5b: trial:  2 time:     1.4897 sec
SV5b: trial:  3 time:     1.4876 sec
SV5b: trial:  4 time:     1.4915 sec
SV5b: trial:  5 time:     1.4908 sec
SV5b: trial:  6 time:     1.4840 sec
SV5b: trial:  7 time:     1.4821 sec
SV5b: trial:  8 time:     1.4874 sec
SV5b: trial:  9 time:     1.4893 sec
SV5b: trial: 10 time:     1.4936 sec
SV5b: trial: 11 time:     1.4835 sec
SV5b: trial: 12 time:     1.4859 sec
SV5b: trial: 13 time:     1.4883 sec
SV5b: trial: 14 time:     1.4863 sec
SV5b: trial: 15 time:     1.4919 sec
LG2:SV5b: threads: 40 time:     1.4875  # of CC: 19926186

Avg: CC (sv5b.2)   40:      1.487 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb

SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
read time: 26.8792
Graph: kind: undirected, nodes: 50636151 entries: 3620126660 type: bool
    pattern symmetry: symmetric
# of trials: 16

SV5b: trial:  0 time:     2.1865 sec
SV5b: trial:  1 time:     1.9506 sec
SV5b: trial:  2 time:     1.9515 sec
SV5b: trial:  3 time:     1.9539 sec
SV5b: trial:  4 time:     1.9449 sec
SV5b: trial:  5 time:     1.9522 sec
SV5b: trial:  6 time:     1.9487 sec
SV5b: trial:  7 time:     1.9548 sec
SV5b: trial:  8 time:     1.9526 sec
SV5b: trial:  9 time:     1.9496 sec
SV5b: trial: 10 time:     1.9512 sec
SV5b: trial: 11 time:     1.9484 sec
SV5b: trial: 12 time:     1.9547 sec
SV5b: trial: 13 time:     1.9430 sec
SV5b: trial: 14 time:     1.9511 sec
SV5b: trial: 15 time:     1.9551 sec
LG2:SV5b: threads: 40 time:     1.9655  # of CC: 123

Avg: CC (sv5b.2)   40:      1.966 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb

SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
read time: 0.852341
Graph: kind: undirected, nodes: 23947347 entries: 57708624 type: bool
    pattern symmetry: symmetric
# of trials: 16

SV5b: trial:  0 time:     0.9791 sec
SV5b: trial:  1 time:     0.9737 sec
SV5b: trial:  2 time:     0.9811 sec
SV5b: trial:  3 time:     0.9761 sec
SV5b: trial:  4 time:     0.9747 sec
SV5b: trial:  5 time:     0.9791 sec
SV5b: trial:  6 time:     0.9733 sec
SV5b: trial:  7 time:     0.9784 sec
SV5b: trial:  8 time:     0.9807 sec
SV5b: trial:  9 time:     0.9774 sec
SV5b: trial: 10 time:     0.9714 sec
SV5b: trial: 11 time:     0.9756 sec
SV5b: trial: 12 time:     0.9749 sec
SV5b: trial: 13 time:     0.9799 sec
SV5b: trial: 14 time:     0.9761 sec
SV5b: trial: 15 time:     0.9828 sec
LG2:SV5b: threads: 40 time:     0.9771  # of CC: 1

Avg: CC (sv5b.2)   40:      0.977 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb

PageRank test with SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
read time: 44.9086
Graph: kind: undirected, nodes: 134217726 entries: 4223264644 type: bool
    pattern symmetry: symmetric
# of trials: 16

--------------------------- nthreads: 40
trial:  0 time:    22.0825 sec
trial:  1 time:    22.1019 sec
trial:  2 time:    22.0827 sec
trial:  3 time:    22.0775 sec
trial:  4 time:    22.1019 sec
trial:  5 time:    22.0167 sec
trial:  6 time:    22.0308 sec
trial:  7 time:    22.0039 sec
trial:  8 time:    22.0980 sec
trial:  9 time:    22.0667 sec
trial: 10 time:    22.0300 sec
trial: 11 time:    22.0520 sec
trial: 12 time:    22.0630 sec
trial: 13 time:    22.0618 sec
trial: 14 time:    21.9791 sec
trial: 15 time:    22.0583 sec
3f: 40: avg time:     22.057 (sec), rate:   1340.313 iters: 7
Avg: PR (3f)       40:     22.057 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
PageRank test with SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
read time: 32.9968
Graph: kind: undirected, nodes: 134217728 entries: 4294966740 type: bool
    pattern symmetry: symmetric
# of trials: 16

--------------------------- nthreads: 40
trial:  0 time:    27.6089 sec
trial:  1 time:    27.6498 sec
trial:  2 time:    27.5727 sec
trial:  3 time:    27.6478 sec
trial:  4 time:    27.6178 sec
trial:  5 time:    27.5832 sec
trial:  6 time:    27.6174 sec
trial:  7 time:    27.5938 sec
trial:  8 time:    27.6099 sec
trial:  9 time:    27.6267 sec
trial: 10 time:    27.5981 sec
trial: 11 time:    27.6098 sec
trial: 12 time:    27.5972 sec
trial: 13 time:    27.6154 sec
trial: 14 time:    27.6336 sec
trial: 15 time:    27.5545 sec
3f: 40: avg time:     27.609 (sec), rate:    933.400 iters: 6
Avg: PR (3f)       40:     27.609 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
PageRank test with SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
read time: 26.0022
Graph: kind: directed, nodes: 61578415 entries: 1468364884 type: bool
    pattern symmetry: unsymmetric
# of trials: 16

--------------------------- nthreads: 40
trial:  0 time:    17.0703 sec
trial:  1 time:    17.1029 sec
trial:  2 time:    17.0820 sec
trial:  3 time:    17.0689 sec
trial:  4 time:    17.0458 sec
trial:  5 time:    17.0934 sec
trial:  6 time:    17.0747 sec
trial:  7 time:    17.0600 sec
trial:  8 time:    17.0824 sec
trial:  9 time:    17.0663 sec
trial: 10 time:    17.1010 sec
trial: 11 time:    17.1105 sec
trial: 12 time:    17.1139 sec
trial: 13 time:    17.0989 sec
trial: 14 time:    17.2686 sec
trial: 15 time:    17.0852 sec
3f: 40: avg time:     17.095 (sec), rate:   1889.644 iters: 22
Avg: PR (3f)       40:     17.095 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
PageRank test with SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
read time: 29.7118
Graph: kind: directed, nodes: 50636151 entries: 1930292948 type: bool
    pattern symmetry: unsymmetric
# of trials: 16

--------------------------- nthreads: 40
trial:  0 time:     9.3789 sec
trial:  1 time:     9.3783 sec
trial:  2 time:     9.3662 sec
trial:  3 time:     9.3595 sec
trial:  4 time:     9.3788 sec
trial:  5 time:     9.3776 sec
trial:  6 time:     9.3706 sec
trial:  7 time:     9.3696 sec
trial:  8 time:     9.3991 sec
trial:  9 time:     9.3703 sec
trial: 10 time:     9.3655 sec
trial: 11 time:     9.3681 sec
trial: 12 time:     9.3759 sec
trial: 13 time:     9.3779 sec
trial: 14 time:     9.3655 sec
trial: 15 time:     9.3791 sec
3f: 40: avg time:      9.374 (sec), rate:   6177.721 iters: 30
Avg: PR (3f)       40:      9.374 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
PageRank test with SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
read time: 1.37763
Graph: kind: undirected, nodes: 23947347 entries: 57708624 type: bool
    pattern symmetry: symmetric
# of trials: 16

--------------------------- nthreads: 40
trial:  0 time:     1.3821 sec
trial:  1 time:     1.3853 sec
trial:  2 time:     1.3814 sec
trial:  3 time:     1.3834 sec
trial:  4 time:     1.3880 sec
trial:  5 time:     1.3831 sec
trial:  6 time:     1.3783 sec
trial:  7 time:     1.3818 sec
trial:  8 time:     1.3847 sec
trial:  9 time:     1.3819 sec
trial: 10 time:     1.3821 sec
trial: 11 time:     1.3816 sec
trial: 12 time:     1.3851 sec
trial: 13 time:     1.3809 sec
trial: 14 time:     1.3812 sec
trial: 15 time:     1.3738 sec
3f: 40: avg time:      1.382 (sec), rate:   1628.331 iters: 39
Avg: PR (3f)       40:      1.382 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
sources: /home/faculty/davis/GAP/GAP-kron/GAP-kron_sources.mtx
    GraphBLAS type: type double size: 8
read time: 53.1586
Graph: kind: undirected, nodes: 134217726 entries: 4223264644 type: int32
    pattern symmetry: symmetric
delta: 29
sssp15:  threads: 40 trial:  0 source   2338012 time:    17.8899 sec
sssp15:  threads: 40 trial:  1 source  31997659 time:    17.6973 sec
sssp15:  threads: 40 trial:  2 source  23590940 time:    16.7246 sec
sssp15:  threads: 40 trial:  3 source  43400604 time:    16.4274 sec
sssp15:  threads: 40 trial:  4 source  75337937 time:    17.0345 sec
sssp15:  threads: 40 trial:  5 source    169867 time:    16.1486 sec
sssp15:  threads: 40 trial:  6 source 104041220 time:    18.4135 sec
sssp15:  threads: 40 trial:  7 source  94177942 time:    18.5229 sec
sssp15:  threads: 40 trial:  8 source  32871357 time:    17.9817 sec
sssp15:  threads: 40 trial:  9 source  56230002 time:    18.3793 sec
sssp15:  threads: 40 trial: 10 source  69883037 time:    18.4041 sec
sssp15:  threads: 40 trial: 11 source   9346345 time:    17.3536 sec
sssp15:  threads: 40 trial: 12 source  48915358 time:    17.2061 sec
sssp15:  threads: 40 trial: 13 source 122571173 time:    17.0741 sec
sssp15:  threads: 40 trial: 14 source   6183279 time:    17.5795 sec
sssp15:  threads: 40 trial: 15 source  86323663 time:    17.4856 sec
sssp15:  threads: 40 trial: 16 source 106725780 time:    18.5849 sec
sssp15:  threads: 40 trial: 17 source  92389938 time:    20.0328 sec
sssp15:  threads: 40 trial: 18 source  16210738 time:    17.8204 sec
sssp15:  threads: 40 trial: 19 source  59816700 time:    17.3210 sec
sssp15:  threads: 40 trial: 20 source 111669929 time:    16.6863 sec
sssp15:  threads: 40 trial: 21 source 102831411 time:    18.1567 sec
sssp15:  threads: 40 trial: 22 source 113384800 time:    16.0858 sec
sssp15:  threads: 40 trial: 23 source  43872564 time:    17.7181 sec
sssp15:  threads: 40 trial: 24 source  80508827 time:    17.2606 sec
sssp15:  threads: 40 trial: 25 source  26105648 time:    17.2534 sec
sssp15:  threads: 40 trial: 26 source   8807516 time:    16.8145 sec
sssp15:  threads: 40 trial: 27 source 118452455 time:    17.2810 sec
sssp15:  threads: 40 trial: 28 source 121818859 time:    17.4278 sec
sssp15:  threads: 40 trial: 29 source  42361928 time:    16.8208 sec
sssp15:  threads: 40 trial: 30 source  29493053 time:    16.8983 sec
sssp15:  threads: 40 trial: 31 source  98461503 time:    16.8693 sec
sssp15:  threads: 40 trial: 32 source  71931337 time:    16.3259 sec
sssp15:  threads: 40 trial: 33 source 103808468 time:    17.7744 sec
sssp15:  threads: 40 trial: 34 source   4092345 time:    17.3393 sec
sssp15:  threads: 40 trial: 35 source 115276241 time:    17.7618 sec
sssp15:  threads: 40 trial: 36 source   4649343 time:    17.5872 sec
sssp15:  threads: 40 trial: 37 source  76656189 time:    17.1499 sec
sssp15:  threads: 40 trial: 38 source  31312001 time:    17.4118 sec
sssp15:  threads: 40 trial: 39 source 111334127 time:    17.4890 sec
sssp15:  threads: 40 trial: 40 source 100962918 time:    18.3263 sec
sssp15:  threads: 40 trial: 41 source  41823215 time:    17.2088 sec
sssp15:  threads: 40 trial: 42 source  22631240 time:    16.1040 sec
sssp15:  threads: 40 trial: 43 source  42848461 time:    16.9683 sec
sssp15:  threads: 40 trial: 44 source  79485148 time:    16.3424 sec
sssp15:  threads: 40 trial: 45 source 106818742 time:    16.8883 sec
sssp15:  threads: 40 trial: 46 source  73347974 time:    16.7038 sec
sssp15:  threads: 40 trial: 47 source  78848445 time:    16.5071 sec
sssp15:  threads: 40 trial: 48 source 109920510 time:    18.0490 sec
sssp15:  threads: 40 trial: 49 source 121492133 time:    17.1833 sec
sssp15:  threads: 40 trial: 50 source 101037296 time:    16.9483 sec
sssp15:  threads: 40 trial: 51 source  15438600 time:    17.6543 sec
sssp15:  threads: 40 trial: 52 source   4584784 time:    16.6277 sec
sssp15:  threads: 40 trial: 53 source 124503845 time:    17.4339 sec
sssp15:  threads: 40 trial: 54 source  87241743 time:    16.9241 sec
sssp15:  threads: 40 trial: 55 source 108297008 time:    16.4525 sec
sssp15:  threads: 40 trial: 56 source  33955082 time:    17.1534 sec
sssp15:  threads: 40 trial: 57 source  79934823 time:    17.0982 sec
sssp15:  threads: 40 trial: 58 source   8608481 time:    16.1712 sec
sssp15:  threads: 40 trial: 59 source  82435063 time:    17.0606 sec
sssp15:  threads: 40 trial: 60 source  46579271 time:    16.9813 sec
sssp15:  threads: 40 trial: 61 source    515421 time:    18.7407 sec
sssp15:  threads: 40 trial: 62 source 121530467 time:    16.8407 sec
sssp15:  threads: 40 trial: 63 source 127978736 time:    17.3855 sec

40: SSSP    time:      17.311677 sec  rate:   243.95 (delta 29)
Avg: SSSP          40:     17.312 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
sources: /home/faculty/davis/GAP/GAP-urand/GAP-urand_sources.mtx
    GraphBLAS type: type double size: 8
read time: 49.6027
Graph: kind: undirected, nodes: 134217728 entries: 4294966740 type: int32
    pattern symmetry: symmetric
delta: 41
sssp15:  threads: 40 trial:  0 source  27691419 time:    25.1799 sec
sssp15:  threads: 40 trial:  1 source 121280314 time:    25.4608 sec
sssp15:  threads: 40 trial:  2 source   2413431 time:    24.3315 sec
sssp15:  threads: 40 trial:  3 source  37512113 time:    24.3430 sec
sssp15:  threads: 40 trial:  4 source  38390877 time:    26.0546 sec
sssp15:  threads: 40 trial:  5 source  56651037 time:    26.0347 sec
sssp15:  threads: 40 trial:  6 source 128461248 time:    25.2897 sec
sssp15:  threads: 40 trial:  7 source  33029842 time:    24.6767 sec
sssp15:  threads: 40 trial:  8 source  71406328 time:    24.4019 sec
sssp15:  threads: 40 trial:  9 source 117872827 time:    26.5015 sec
sssp15:  threads: 40 trial: 10 source  24351938 time:    23.9284 sec
sssp15:  threads: 40 trial: 11 source  15444519 time:    23.9492 sec
sssp15:  threads: 40 trial: 12 source 127526281 time:    24.5691 sec
sssp15:  threads: 40 trial: 13 source 112279428 time:    24.6558 sec
sssp15:  threads: 40 trial: 14 source  13631649 time:    24.5913 sec
sssp15:  threads: 40 trial: 15 source 110379302 time:    23.8477 sec
sssp15:  threads: 40 trial: 16 source  44800623 time:    26.1010 sec
sssp15:  threads: 40 trial: 17 source  77768193 time:    24.6721 sec
sssp15:  threads: 40 trial: 18 source    175347 time:    25.1738 sec
sssp15:  threads: 40 trial: 19 source 107397389 time:    26.0198 sec
sssp15:  threads: 40 trial: 20 source  43457209 time:    26.0501 sec
sssp15:  threads: 40 trial: 21 source  97215940 time:    25.4796 sec
sssp15:  threads: 40 trial: 22 source  73575165 time:    24.0329 sec
sssp15:  threads: 40 trial: 23 source  44449715 time:    26.6477 sec
sssp15:  threads: 40 trial: 24 source  33931724 time:    25.1398 sec
sssp15:  threads: 40 trial: 25 source  55526610 time:    24.1332 sec
sssp15:  threads: 40 trial: 26 source  14422051 time:    23.7370 sec
sssp15:  threads: 40 trial: 27 source  58043873 time:    24.4776 sec
sssp15:  threads: 40 trial: 28 source  72137329 time:    26.2817 sec
sssp15:  threads: 40 trial: 29 source   9647840 time:    25.0275 sec
sssp15:  threads: 40 trial: 30 source  15940695 time:    26.0762 sec
sssp15:  threads: 40 trial: 31 source  14209952 time:    25.0271 sec
sssp15:  threads: 40 trial: 32 source  49020883 time:    26.0130 sec
sssp15:  threads: 40 trial: 33 source  28901138 time:    26.1746 sec
sssp15:  threads: 40 trial: 34 source  50493273 time:    24.3966 sec
sssp15:  threads: 40 trial: 35 source  49150069 time:    24.5132 sec
sssp15:  threads: 40 trial: 36 source 126525082 time:    26.1265 sec
sssp15:  threads: 40 trial: 37 source   6382740 time:    26.2349 sec
sssp15:  threads: 40 trial: 38 source  89108297 time:    26.3344 sec
sssp15:  threads: 40 trial: 39 source   9239735 time:    24.5324 sec
sssp15:  threads: 40 trial: 40 source 110168548 time:    24.4366 sec
sssp15:  threads: 40 trial: 41 source  95370259 time:    25.8725 sec
sssp15:  threads: 40 trial: 42 source 116653530 time:    26.2522 sec
sssp15:  threads: 40 trial: 43 source 123410703 time:    28.1065 sec
sssp15:  threads: 40 trial: 44 source  16733665 time:    26.3569 sec
sssp15:  threads: 40 trial: 45 source  49030282 time:    28.1292 sec
sssp15:  threads: 40 trial: 46 source 108545121 time:    28.1234 sec
sssp15:  threads: 40 trial: 47 source  99095665 time:    26.1406 sec
sssp15:  threads: 40 trial: 48 source 133850077 time:    25.7873 sec
sssp15:  threads: 40 trial: 49 source  63499301 time:    25.9793 sec
sssp15:  threads: 40 trial: 50 source  21541382 time:    24.6575 sec
sssp15:  threads: 40 trial: 51 source   6230751 time:    24.7855 sec
sssp15:  threads: 40 trial: 52 source  89077456 time:    24.6119 sec
sssp15:  threads: 40 trial: 53 source  70392765 time:    26.0573 sec
sssp15:  threads: 40 trial: 54 source   6670455 time:    24.5146 sec
sssp15:  threads: 40 trial: 55 source  61746271 time:    24.4863 sec
sssp15:  threads: 40 trial: 56 source  83349535 time:    24.4810 sec
sssp15:  threads: 40 trial: 57 source 115272184 time:    24.5146 sec
sssp15:  threads: 40 trial: 58 source  20129908 time:    24.9524 sec
sssp15:  threads: 40 trial: 59 source 106148553 time:    24.2373 sec
sssp15:  threads: 40 trial: 60 source 117042375 time:    24.8198 sec
sssp15:  threads: 40 trial: 61 source  71431187 time:    24.3230 sec
sssp15:  threads: 40 trial: 62 source  45287808 time:    25.5360 sec
sssp15:  threads: 40 trial: 63 source 107702120 time:    26.2344 sec

40: SSSP    time:      25.306478 sec  rate:   169.72 (delta 41)
Avg: SSSP          40:     25.306 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
sources: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter_sources.mtx
    GraphBLAS type: type double size: 8
read time: 30.7917
Graph: kind: directed, nodes: 61578415 entries: 1468364884 type: int32
    pattern symmetry: unsymmetric
delta: 51
sssp15:  threads: 40 trial:  0 source  12441072 time:     7.1724 sec
sssp15:  threads: 40 trial:  1 source  54488257 time:     8.4302 sec
sssp15:  threads: 40 trial:  2 source  25451915 time:     8.7884 sec
sssp15:  threads: 40 trial:  3 source  57714473 time:     8.5413 sec
sssp15:  threads: 40 trial:  4 source  14839494 time:     8.4533 sec
sssp15:  threads: 40 trial:  5 source  32081104 time:     7.6388 sec
sssp15:  threads: 40 trial:  6 source  52957357 time:     8.0016 sec
sssp15:  threads: 40 trial:  7 source  50444380 time:     8.3526 sec
sssp15:  threads: 40 trial:  8 source  49590701 time:     7.6030 sec
sssp15:  threads: 40 trial:  9 source  20127816 time:     7.4531 sec
sssp15:  threads: 40 trial: 10 source  34939333 time:     8.4902 sec
sssp15:  threads: 40 trial: 11 source  48251001 time:     8.7152 sec
sssp15:  threads: 40 trial: 12 source  19524253 time:     7.3653 sec
sssp15:  threads: 40 trial: 13 source  43676726 time:     8.4745 sec
sssp15:  threads: 40 trial: 14 source  33055508 time:     7.8589 sec
sssp15:  threads: 40 trial: 15 source  15244687 time:     7.5175 sec
sssp15:  threads: 40 trial: 16 source  24946738 time:     9.2899 sec
sssp15:  threads: 40 trial: 17 source   6479472 time:     8.1557 sec
sssp15:  threads: 40 trial: 18 source  26077682 time:     8.4278 sec
sssp15:  threads: 40 trial: 19 source  22023875 time:     8.3185 sec
sssp15:  threads: 40 trial: 20 source  22081915 time:     8.6338 sec
sssp15:  threads: 40 trial: 21 source  40034162 time:     7.2260 sec
sssp15:  threads: 40 trial: 22 source  49496014 time:     8.6711 sec
sssp15:  threads: 40 trial: 23 source  42847507 time:    10.0482 sec
sssp15:  threads: 40 trial: 24 source  52409557 time:     8.1195 sec
sssp15:  threads: 40 trial: 25 source  55445388 time:     7.0715 sec
sssp15:  threads: 40 trial: 26 source  22028097 time:     7.9029 sec
sssp15:  threads: 40 trial: 27 source  48766648 time:     8.4306 sec
sssp15:  threads: 40 trial: 28 source  44521241 time:     8.0115 sec
sssp15:  threads: 40 trial: 29 source  60135542 time:     7.3029 sec
sssp15:  threads: 40 trial: 30 source  28528671 time:     7.0739 sec
sssp15:  threads: 40 trial: 31 source   9678012 time:     8.4119 sec
sssp15:  threads: 40 trial: 32 source  40020306 time:     8.4200 sec
sssp15:  threads: 40 trial: 33 source  31625735 time:     8.3740 sec
sssp15:  threads: 40 trial: 34 source  37446892 time:     8.4662 sec
sssp15:  threads: 40 trial: 35 source  51788952 time:     8.1773 sec
sssp15:  threads: 40 trial: 36 source  52584255 time:     7.8232 sec
sssp15:  threads: 40 trial: 37 source  20346696 time:     8.1146 sec
sssp15:  threads: 40 trial: 38 source  48387909 time:     7.6364 sec
sssp15:  threads: 40 trial: 39 source  37337427 time:     7.2944 sec
sssp15:  threads: 40 trial: 40 source  50501084 time:     7.6028 sec
sssp15:  threads: 40 trial: 41 source  30130061 time:     8.2059 sec
sssp15:  threads: 40 trial: 42 source  41185893 time:     8.6353 sec
sssp15:  threads: 40 trial: 43 source  56495703 time:     7.5399 sec
sssp15:  threads: 40 trial: 44 source  45663305 time:     7.8941 sec
sssp15:  threads: 40 trial: 45 source  33359460 time:     7.5857 sec
sssp15:  threads: 40 trial: 46 source  48143058 time:     7.6890 sec
sssp15:  threads: 40 trial: 47 source  33291513 time:     7.3589 sec
sssp15:  threads: 40 trial: 48 source  53461445 time:     8.1556 sec
sssp15:  threads: 40 trial: 49 source  29340610 time:     7.4845 sec
sssp15:  threads: 40 trial: 50 source  34148498 time:     7.9645 sec
sssp15:  threads: 40 trial: 51 source  49171806 time:     7.9892 sec
sssp15:  threads: 40 trial: 52 source  35550696 time:     8.1513 sec
sssp15:  threads: 40 trial: 53 source  14521507 time:     8.2736 sec
sssp15:  threads: 40 trial: 54 source  51633218 time:     8.6013 sec
sssp15:  threads: 40 trial: 55 source  46823382 time:     7.8046 sec
sssp15:  threads: 40 trial: 56 source  19396273 time:     8.9339 sec
sssp15:  threads: 40 trial: 57 source  19871750 time:     8.3762 sec
sssp15:  threads: 40 trial: 58 source  36862677 time:     9.1021 sec
sssp15:  threads: 40 trial: 59 source  49539126 time:     8.4754 sec
sssp15:  threads: 40 trial: 60 source  34016452 time:     7.3010 sec
sssp15:  threads: 40 trial: 61 source  36567395 time:     7.7694 sec
sssp15:  threads: 40 trial: 62 source  55487793 time:     7.7460 sec
sssp15:  threads: 40 trial: 63 source  14391370 time:     9.0335 sec

40: SSSP    time:       8.092687 sec  rate:   181.44 (delta 51)
Avg: SSSP          40:      8.093 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
sources: /home/faculty/davis/GAP/GAP-web/GAP-web_sources.mtx
    GraphBLAS type: type double size: 8
read time: 20.2697
Graph: kind: directed, nodes: 50636151 entries: 1930292948 type: int32
    pattern symmetry: unsymmetric
delta: 140
sssp15:  threads: 40 trial:  0 source  10219452 time:    10.5654 sec
sssp15:  threads: 40 trial:  1 source  44758211 time:    10.9807 sec
sssp15:  threads: 40 trial:  2 source    890671 time:    10.8705 sec
sssp15:  threads: 40 trial:  3 source  13843756 time:     1.9312 sec
sssp15:  threads: 40 trial:  4 source  14168062 time:    10.8867 sec
sssp15:  threads: 40 trial:  5 source  20906930 time:    10.6307 sec
sssp15:  threads: 40 trial:  6 source  12189584 time:    10.5345 sec
sssp15:  threads: 40 trial:  7 source  26352335 time:     1.9302 sec
sssp15:  threads: 40 trial:  8 source  43500686 time:    10.4451 sec
sssp15:  threads: 40 trial:  9 source   8987024 time:    10.7812 sec
sssp15:  threads: 40 trial: 10 source   5699762 time:     1.9249 sec
sssp15:  threads: 40 trial: 11 source  41436455 time:    10.3853 sec
sssp15:  threads: 40 trial: 12 source   5030727 time:    10.9738 sec
sssp15:  threads: 40 trial: 13 source  40735218 time:    10.3421 sec
sssp15:  threads: 40 trial: 14 source  16533563 time:    10.3053 sec
sssp15:  threads: 40 trial: 15 source  28700166 time:    10.8238 sec
sssp15:  threads: 40 trial: 16 source     64711 time:    10.7307 sec
sssp15:  threads: 40 trial: 17 source  39634750 time:    10.7300 sec
sssp15:  threads: 40 trial: 18 source  16037779 time:    10.5906 sec
sssp15:  threads: 40 trial: 19 source  27152739 time:    10.8662 sec
sssp15:  threads: 40 trial: 20 source  16404061 time:    10.6090 sec
sssp15:  threads: 40 trial: 21 source  20491963 time:    10.6038 sec
sssp15:  threads: 40 trial: 22 source   5322423 time:    10.7962 sec
sssp15:  threads: 40 trial: 23 source  21420953 time:    10.5078 sec
sssp15:  threads: 40 trial: 24 source  26622109 time:    10.7801 sec
sssp15:  threads: 40 trial: 25 source   5882875 time:    10.8033 sec
sssp15:  threads: 40 trial: 26 source  18091040 time:    10.7328 sec
sssp15:  threads: 40 trial: 27 source  10665896 time:     2.0758 sec
sssp15:  threads: 40 trial: 28 source  18634422 time:    10.4832 sec
sssp15:  threads: 40 trial: 29 source  18138715 time:    10.4609 sec
sssp15:  threads: 40 trial: 30 source   2355535 time:    10.9589 sec
sssp15:  threads: 40 trial: 31 source  32885205 time:     2.0032 sec
sssp15:  threads: 40 trial: 32 source  40657440 time:    10.7229 sec
sssp15:  threads: 40 trial: 33 source  35196167 time:    10.4834 sec
sssp15:  threads: 40 trial: 34 source  45544426 time:    11.0156 sec
sssp15:  threads: 40 trial: 35 source   6175519 time:     1.8495 sec
sssp15:  threads: 40 trial: 36 source  40058318 time:    11.0900 sec
sssp15:  threads: 40 trial: 37 source  50626230 time:    10.8687 sec
sssp15:  threads: 40 trial: 38 source  36571019 time:    10.7780 sec
sssp15:  threads: 40 trial: 39 source  49397052 time:    10.3746 sec
sssp15:  threads: 40 trial: 40 source  23434265 time:    10.7425 sec
sssp15:  threads: 40 trial: 41 source   2299444 time:    10.5019 sec
sssp15:  threads: 40 trial: 42 source  32873823 time:     1.9812 sec
sssp15:  threads: 40 trial: 43 source  25978282 time:    10.6279 sec
sssp15:  threads: 40 trial: 44 source   2461715 time:     2.0908 sec
sssp15:  threads: 40 trial: 45 source  22787314 time:    10.6602 sec
sssp15:  threads: 40 trial: 46 source  30759947 time:    10.8559 sec
sssp15:  threads: 40 trial: 47 source   7428894 time:     1.8050 sec
sssp15:  threads: 40 trial: 48 source  39173870 time:     1.7876 sec
sssp15:  threads: 40 trial: 49 source  43194209 time:     1.8487 sec
sssp15:  threads: 40 trial: 50 source  26361509 time:     1.9380 sec
sssp15:  threads: 40 trial: 51 source  39747211 time:     1.7854 sec
sssp15:  threads: 40 trial: 52 source  30670029 time:    10.7640 sec
sssp15:  threads: 40 trial: 53 source  41483033 time:    10.4956 sec
sssp15:  threads: 40 trial: 54 source   9358666 time:    10.5213 sec
sssp15:  threads: 40 trial: 55 source   9945008 time:    10.5611 sec
sssp15:  threads: 40 trial: 56 source   3355244 time:    10.4811 sec
sssp15:  threads: 40 trial: 57 source  33831269 time:    10.8213 sec
sssp15:  threads: 40 trial: 58 source  45124744 time:    11.1910 sec
sssp15:  threads: 40 trial: 59 source  16137877 time:     1.9852 sec
sssp15:  threads: 40 trial: 60 source  11235448 time:    10.4560 sec
sssp15:  threads: 40 trial: 61 source  37509144 time:    10.9270 sec
sssp15:  threads: 40 trial: 62 source  27402414 time:    10.4969 sec
sssp15:  threads: 40 trial: 63 source  39546083 time:    11.3065 sec

40: SSSP    time:       8.779042 sec  rate:   219.88 (delta 140)
Avg: SSSP          40:      8.779 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
sources: /home/faculty/davis/GAP/GAP-road/GAP-road_sources.mtx
    GraphBLAS type: type double size: 8
read time: 0.914362
Graph: kind: directed, nodes: 23947347 entries: 57708624 type: int32
    pattern symmetry: symmetric
delta: 50000
sssp15:  threads: 40 trial:  0 source   4795720 time:    47.3063 sec
sssp15:  threads: 40 trial:  1 source  21003853 time:    42.8197 sec
sssp15:  threads: 40 trial:  2 source    417968 time:    42.6629 sec
sssp15:  threads: 40 trial:  3 source   6496511 time:    46.4693 sec
sssp15:  threads: 40 trial:  4 source   6648699 time:    40.9787 sec
sssp15:  threads: 40 trial:  5 source   9811073 time:    50.2983 sec
sssp15:  threads: 40 trial:  6 source  22247478 time:   134.8461 sec
sssp15:  threads: 40 trial:  7 source   5720252 time:    46.1894 sec
sssp15:  threads: 40 trial:  8 source  12366459 time:    43.1560 sec
sssp15:  threads: 40 trial:  9 source  20413729 time:    42.4199 sec
sssp15:  threads: 40 trial: 10 source   4217374 time:    49.8268 sec
sssp15:  threads: 40 trial: 11 source   2674749 time:    50.6979 sec
sssp15:  threads: 40 trial: 12 source  22085557 time:    44.0831 sec
sssp15:  threads: 40 trial: 13 source  19445040 time:    44.7616 sec
sssp15:  threads: 40 trial: 14 source   2360788 time:    47.8570 sec
sssp15:  threads: 40 trial: 15 source  19115968 time:    47.4915 sec
sssp15:  threads: 40 trial: 16 source   7758767 time:    44.7801 sec
sssp15:  threads: 40 trial: 17 source  13468234 time:    49.4029 sec
sssp15:  threads: 40 trial: 18 source     30367 time:    45.7610 sec
sssp15:  threads: 40 trial: 19 source  18599547 time:    45.1108 sec
sssp15:  threads: 40 trial: 20 source   7526108 time:    42.3976 sec
sssp15:  threads: 40 trial: 21 source  16836280 time:    49.0667 sec
sssp15:  threads: 40 trial: 22 source  12742067 time:    47.9206 sec
sssp15:  threads: 40 trial: 23 source   7697995 time:    40.9522 sec
sssp15:  threads: 40 trial: 24 source   5876443 time:    43.2672 sec
sssp15:  threads: 40 trial: 25 source   9616340 time:    45.3433 sec
sssp15:  threads: 40 trial: 26 source   2497673 time:    50.0777 sec
sssp15:  threads: 40 trial: 27 source  10052290 time:    43.9814 sec
sssp15:  threads: 40 trial: 28 source  12493057 time:    48.7155 sec
sssp15:  threads: 40 trial: 29 source   1670855 time:    47.6556 sec
sssp15:  threads: 40 trial: 30 source   2760679 time:    43.8638 sec
sssp15:  threads: 40 trial: 31 source   2460941 time:    50.6614 sec
sssp15:  threads: 40 trial: 32 source   8489650 time:    40.9792 sec
sssp15:  threads: 40 trial: 33 source   5005225 time:    47.1157 sec
sssp15:  threads: 40 trial: 34 source   8744645 time:    44.8550 sec
sssp15:  threads: 40 trial: 35 source   8512023 time:    40.6332 sec
sssp15:  threads: 40 trial: 36 source  21912165 time:    51.0061 sec
sssp15:  threads: 40 trial: 37 source   1105390 time:    45.3254 sec
sssp15:  threads: 40 trial: 38 source  15432163 time:    42.9495 sec
sssp15:  threads: 40 trial: 39 source   1600177 time:    47.3770 sec
sssp15:  threads: 40 trial: 40 source  19079469 time:    47.6851 sec
sssp15:  threads: 40 trial: 41 source  16516637 time:    50.8196 sec
sssp15:  threads: 40 trial: 42 source  20202566 time:    43.8213 sec
sssp15:  threads: 40 trial: 43 source  21372803 time:    43.9178 sec
sssp15:  threads: 40 trial: 44 source   2898009 time:    49.2756 sec
sssp15:  threads: 40 trial: 45 source   8491277 time:    40.5033 sec
sssp15:  threads: 40 trial: 46 source  18798317 time:    89.1573 sec
sssp15:  threads: 40 trial: 47 source  23757560 time:    99.0015 sec
sssp15:  threads: 40 trial: 48 source  17161819 time:    41.9616 sec
sssp15:  threads: 40 trial: 49 source  23180739 time:    49.7684 sec
sssp15:  threads: 40 trial: 50 source  10997085 time:    42.6316 sec
sssp15:  threads: 40 trial: 51 source   3730630 time:    50.1343 sec
sssp15:  threads: 40 trial: 52 source   1079068 time:    49.4137 sec
sssp15:  threads: 40 trial: 53 source  15426822 time:    41.4693 sec
sssp15:  threads: 40 trial: 54 source  12190925 time:    45.2405 sec
sssp15:  threads: 40 trial: 55 source   1155218 time:    45.2628 sec
sssp15:  threads: 40 trial: 56 source  10693488 time:    41.6342 sec
sssp15:  threads: 40 trial: 57 source  14434835 time:    46.7929 sec
sssp15:  threads: 40 trial: 58 source  19963339 time:    46.9205 sec
sssp15:  threads: 40 trial: 59 source   3486185 time:    44.6975 sec
sssp15:  threads: 40 trial: 60 source  18383269 time:    45.4008 sec
sssp15:  threads: 40 trial: 61 source  20269908 time:    42.7433 sec
sssp15:  threads: 40 trial: 62 source  12370764 time:    47.3770 sec
sssp15:  threads: 40 trial: 63 source   7843140 time:    45.4469 sec

40: SSSP    time:      48.627192 sec  rate:     1.19 (delta 50000)
Avg: SSSP          40:     48.627 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
# of trials: 3
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
read time: 55.8078
Graph: kind: undirected, nodes: 134217726 entries: 4223264644 type: bool
    pattern symmetry: symmetric  self-edges: 0

warmup method: SandiaDot2: sum ((U*L') .* U)    auto-sort
# of triangles: 106873365648
SandiaDot2: sum ((U*L') .* U)    sort: descending degree
nthreads:  40 time:  1006.328788 rate:   4.20 (SandiaDot2, one trial)

Method: Sandia:     sum ((L*L) .* L)     auto-sort
kron fails on method 3; skipped

Method: Sandia2:    sum ((U*U) .* U)     auto-sort
kron fails on method 4; skipped

Method: SandiaDot:  sum ((L*U') .* L)    auto-sort
trial  0:   948.238793 sec rate   4.45  # triangles: 106873365648
trial  1:   942.811501 sec rate   4.48  # triangles: 106873365648
trial  2:   947.668233 sec rate   4.46  # triangles: 106873365648
nthreads:  40 time:   946.239509 rate:   4.46   # of triangles: 106873365648 presort: 1
Avg: TC method5.2  40:    946.240 sec: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb

Best method: SandiaDot:  sum ((L*U') .* L)    auto-sort
nthreads:  40 time:   946.239509 rate:   4.46
SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
# of trials: 3
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
read time: 46.0302
Graph: kind: undirected, nodes: 134217728 entries: 4294966740 type: bool
    pattern symmetry: symmetric  self-edges: 0

warmup method: SandiaDot2: sum ((U*L') .* U)    auto-sort
# of triangles: 5378
SandiaDot2: sum ((U*L') .* U)    sort: none
nthreads:  40 time:    35.147142 rate: 122.20 (SandiaDot2, one trial)

Method: Sandia:     sum ((L*L) .* L)     auto-sort
trial  0:    25.976188 sec rate 165.34  # triangles: 5378
trial  1:    26.114976 sec rate 164.46  # triangles: 5378
trial  2:    26.133262 sec rate 164.35  # triangles: 5378
nthreads:  40 time:    26.074808 rate: 164.72   # of triangles: 5378 presort: 0
Avg: TC method3.2  40:     26.075 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb

Method: Sandia2:    sum ((U*U) .* U)     auto-sort
trial  0:    26.280306 sec rate 163.43  # triangles: 5378
trial  1:    26.519247 sec rate 161.96  # triangles: 5378
trial  2:    26.669655 sec rate 161.04  # triangles: 5378
nthreads:  40 time:    26.489736 rate: 162.14   # of triangles: 5378 presort: 0
Avg: TC method4.2  40:     26.490 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb

Method: SandiaDot:  sum ((L*U') .* L)    auto-sort
trial  0:    34.177574 sec rate 125.67  # triangles: 5378
trial  1:    34.211599 sec rate 125.54  # triangles: 5378
trial  2:    34.208977 sec rate 125.55  # triangles: 5378
nthreads:  40 time:    34.199383 rate: 125.59   # of triangles: 5378 presort: 0
Avg: TC method5.2  40:     34.199 sec: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb

Best method: Sandia:     sum ((L*L) .* L)     auto-sort
nthreads:  40 time:    26.074808 rate: 164.72
SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
# of trials: 3
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
read time: 33.4489
Graph: kind: undirected, nodes: 61578415 entries: 2405026092 type: bool
    pattern symmetry: symmetric  self-edges: 0

warmup method: SandiaDot2: sum ((U*L') .* U)    auto-sort
# of triangles: 34824916864
SandiaDot2: sum ((U*L') .* U)    sort: descending degree
nthreads:  40 time:   266.513499 rate:   9.02 (SandiaDot2, one trial)

Method: Sandia:     sum ((L*L) .* L)     auto-sort
all but urand is slow with method 3: skipped

Method: Sandia2:    sum ((U*U) .* U)     auto-sort
all but urand is slow with method 4: skipped

Method: SandiaDot:  sum ((L*U') .* L)    auto-sort
trial  0:   243.476408 sec rate   9.88  # triangles: 34824916864
trial  1:   244.094418 sec rate   9.85  # triangles: 34824916864
trial  2:   244.053122 sec rate   9.85  # triangles: 34824916864
nthreads:  40 time:   243.874649 rate:   9.86   # of triangles: 34824916864 presort: 1
Avg: TC method5.2  40:    243.875 sec: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb

Best method: SandiaDot:  sum ((L*U') .* L)    auto-sort
nthreads:  40 time:   243.874649 rate:   9.86
SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
# of trials: 3
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
read time: 39.5421
Graph: kind: undirected, nodes: 50636151 entries: 3620126660 type: bool
    pattern symmetry: symmetric  self-edges: 0

warmup method: SandiaDot2: sum ((U*L') .* U)    auto-sort
# of triangles: 84907041475
SandiaDot2: sum ((U*L') .* U)    sort: none
nthreads:  40 time:    39.521949 rate:  91.60 (SandiaDot2, one trial)

Method: Sandia:     sum ((L*L) .* L)     auto-sort
all but urand is slow with method 3: skipped

Method: Sandia2:    sum ((U*U) .* U)     auto-sort
all but urand is slow with method 4: skipped

Method: SandiaDot:  sum ((L*U') .* L)    auto-sort
trial  0:    35.953653 sec rate 100.69  # triangles: 84907041475
trial  1:    35.494287 sec rate 101.99  # triangles: 84907041475
trial  2:    35.010799 sec rate 103.40  # triangles: 84907041475
nthreads:  40 time:    35.486246 rate: 102.01   # of triangles: 84907041475 presort: 0
Avg: TC method5.2  40:     35.486 sec: /home/faculty/davis/GAP/GAP-web/GAP-web.grb

Best method: SandiaDot:  sum ((L*U') .* L)    auto-sort
nthreads:  40 time:    35.486246 rate: 102.01
SuiteSparse:GraphBLAS v5.0.1 [Apr 27, 2021 (BETA2)]
# of trials: 3
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
read time: 1.44698
Graph: kind: undirected, nodes: 23947347 entries: 57708624 type: bool
    pattern symmetry: symmetric  self-edges: 0

warmup method: SandiaDot2: sum ((U*L') .* U)    auto-sort
# of triangles: 438804
SandiaDot2: sum ((U*L') .* U)    sort: none
nthreads:  40 time:     0.207436 rate: 278.20 (SandiaDot2, one trial)

Method: Sandia:     sum ((L*L) .* L)     auto-sort
all but urand is slow with method 3: skipped

Method: Sandia2:    sum ((U*U) .* U)     auto-sort
all but urand is slow with method 4: skipped

Method: SandiaDot:  sum ((L*U') .* L)    auto-sort
trial  0:     0.200910 sec rate 287.24  # triangles: 438804
trial  1:     0.199919 sec rate 288.66  # triangles: 438804
trial  2:     0.199498 sec rate 289.27  # triangles: 438804
nthreads:  40 time:     0.200109 rate: 288.39   # of triangles: 438804 presort: 0
Avg: TC method5.2  40:      0.200 sec: /home/faculty/davis/GAP/GAP-road/GAP-road.grb

Best method: SandiaDot:  sum ((L*U') .* L)    auto-sort
nthreads:  40 time:     0.200109 rate: 288.39
[0;36mhypersparse $[0m cd
[0;36mhypersparse $[0m cd sparse/GraphBLAS/
[0;36mhypersparse $[0m git status
On branch master
Your branch is up-to-date with 'origin/master'.
nothing to commit, working directory clean
[0;36mhypersparse $[0m git diff
[?1h=[K[?1l>[0;36mhypersparse $[0m ack FIXME
[1;32mCUDA/jitify.hpp[0m
[1;33m3573[0m:    return CUDA_SUCCESS;  // [30;43mFIXME[0m - replace with non-CUDA enum type?[0m[K

[1;32mCUDA/test/googlemock/include/gmock/gmock-matchers.h[0m
[1;33m2014[0m:    // [30;43mFIXME[0m: The dispatch on std::is_pointer was introduced as a workaround for[0m[K

[1;32mCUDA/test/googlemock/scripts/generator/cpp/ast.py[0m
[1;33m20[0m:# [30;43mFIXME[0m:[0m[K

[1;32mCUDA/test/googlemock/src/gmock-spec-builders.cc[0m
[1;33m609[0m:      // [30;43mFIXME[0m: Print the type of the leaked object.[0m[K

[1;32mCUDA/test/googlemock/test/gmock-spec-builders_test.cc[0m
[1;33m1179[0m:  // [30;43mFIXME[0m: We should really verify the output message,[0m[K

[1;32mCUDA/test/jitify.hpp[0m
[1;33m3574[0m:    return CUDA_SUCCESS;  // [30;43mFIXME[0m - replace with non-CUDA enum type?[0m[K
[0;36mhypersparse $[0m pwd
/home/faculty/davis/sparse/GraphBLAS
[0;36mhypersparse $[0m cd GraphBLAS/demo/
[0;36mhypersparse $[0m dir
total 120
 4 bfs_matlab.m   4 dnn_matlab.m   4 gbdemo2.m          32 graphblas_demo.m        20 mxm_demo_DGX_Station.txt
 4 Contents.m     4 [0m[01;32mdnn_results[0m/   4 gbdemo.m            4 [01;32mhtml[0m/                    8 mxm_demo.m
 4 dnn_mat2gb.m   4 dnn_run.m      4 graphblas_demo2.m  20 mxm_demo_DellXPS13.txt
[0;36mhypersparse $[0m vi graphblas_demo.m 
[?1000h[?1049h[?1h=[2;1H▽[6n[2;1H  [1;1H[1;79r[?12;25h[?12l[?25h[27m[23m[m[97m[40m[H[2J[?25l[79;1H"graphblas_demo.m" 918L, 31749C[>c[1;1H[96m%% GraphBLAS: graph algorithms in the language of linear algebra
% GraphBLAS is a library for creating graph algorithms based on sparse
% linear algebraic operations over semirings.  Visit http://graphblas.org
% for more details and resources.  See also the SuiteSparse:GraphBLAS
% User Guide in this package.
%
% http://faculty.cse.tamu.edu/davis
%
% SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2021, All Rights Reserved.
% SPDX-License-Identifier: Apache-2.0

%% GraphBLAS: faster and more general sparse matrices for MATLAB
% GraphBLAS is not only useful for creating graph algorithms; it also
% supports a wide range of sparse matrix data types and operations.
% MATLAB can compute C=A*B with just two semirings: 'plus.times.double'
% and 'plus.times.complex' for complex matrices.  GraphBLAS has 2,518
% built-in semirings, such as 'max.plus'
% (https://en.wikipedia.org/wiki/Tropical_semiring).  These semirings can
% be used to construct a wide variety of graph algorithms, based on
% operations on sparse adjacency matrices.
%
% MATLAB and GraphBLAS both provide sparse matrices of type double,
% logical, and double complex.  GraphBLAS adds sparse matrices of type:
% single, int8, int16, int32, int64, uint8, uint16, uint32, uint64, and
% single complex (with MATLAB matrices, these types can only be held in
% full matrices).

% reset to the default number of threads[m[97m[40m
[92mclear[m[97m[40m all
maxNumCompThreads ([91m'automatic'[m[97m[40m) [91m[40m;[m[97m[40m
GrB.[92mclear[m[97m[40m [91m[40m;[m[97m[40m
fprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m

format compact
rng ([91m'default'[m[97m[40m) [91m[40m;[m[97m[40m
X = [92m100[m[97m[40m [92m*[m[97m[40m [92mrand[m[97m[40m ([92m2[m[97m[40m) [91m[40m;[m[97m[40m
G = GrB (X)[14C[96m% GraphBLAS copy of a matrix X, same type

%% Sparse integer matrices
% Here's an int8 version of the same matrix:[m[97m[40m

S = int8 (G)[13C[96m% convert G to a full MATLAB int8 matrix[m[97m[40m
S ([92m1[m[97m[40m,[92m1[m[97m[40m) = [92m0[m[97m[40m[14C[96m% add an explicit zero to S[m[97m[40m
G = GrB (X, [91m'int8'[m[97m[40m)      [96m% a GraphBLAS full int8 matrix[m[97m[40m
G ([92m1[m[97m[40m,[92m1[m[97m[40m) = [92m0[m[97m[40m[14C[96m% add an explicit zero to G[m[97m[40m
G = GrB.prune (G)[8C[96m% a GraphBLAS sparse int8 matrix[m[97m[40m

[92mtry[m[97m[40m
    S = sparse (S) [91m[40m;[m[97m[40m     [96m% MATLAB can't create sparse int8 matrices[m[97m[40m
[92mcatch[m[97m[40m me
    display (me)
[92mend[m[97m[40m

[96m%% Sparse single-precision matrices
% Matrix operations in GraphBLAS are typically as fast, or faster than
% MATLAB.  Here's an unfair comparison: computing X^2 with MATLAB in
% double precision and with GraphBLAS in single precision.  You would
% naturally expect GraphBLAS to be faster. 
%
% CAVEAT:  MATLAB R2021a uses SuiteSparse:GraphBLAS v3.3.3 for C=A*B,
% so on that version, we're comparing 2 versions by the same author.
%
% Please wait ...[m[97m[40m

n = [92m1e5[m[97m[40m [91m[40m;[m[97m[40m
X = spdiags ([92mrand[m[97m[40m (n, [92m201[m[97m[40m), [92m-100[m[97m[40m:[92m100[m[97m[40m, n, n) [91m[40m;[m[97m[40m
G = GrB (X, [91m'single'[m[97m[40m) [91m[40m;[m[97m[40m
tic
G2 = G[92m^2[m[97m[40m [91m[40m;[m[97m[40m
gb_time = toc [91m[40m;[m[97m[40m
tic
X2 = X[92m^2[m[97m[40m [91m[40m;[m[97m[40m
matlab_time = toc [91m[40m;[m[97m[40m
fprintf ([91m'\nGraphBLAS time: %g sec (in single)\n'[m[97m[40m, gb_time) [91m[40m;[m[97m[40m
fprintf ([91m'MATLAB time:    %g sec (in double)\n'[m[97m[40m, matlab_time) [91m[40m;[m[97m[40m
fprintf ([91m'Speedup of GraphBLAS over MATLAB: %g\n'[m[97m[40m, [96m...[m[97m[40m
    matlab_time [92m/[m[97m[40m gb_time) [91m[40m;[m[97m[40m
fprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m[79;95H1,1[11CTop[1;1H[?12l[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[79;1H[K[79;1H/[?12l[?25hc[?25l[?12l[?25hl[?25l[?12l[?25he[?25l[?12l[?25ha[?25l[?12l[?25hr[?25l[?12l[?25h[?25l[29;1H[4m[30m[103mclear[31;5Hclear[m[97m[40m[79;95H29,1[10CTop[29;1H[?12l[?25h[?25l[79;95H[K[79;1H[94C31,5[10CTop[31;5H[?12l[?25h[?25l[79;95H[K[79;1H[27m[23m[m[97m[40m[H[2J[1;1H[96m% defined as:
%
%   C(i,j) = max (A(i,:).' + B(:,j))

%%
% This can be computed in GraphBLAS with:
%
%   C = GrB.mxm ('max.+', A, B)[m[97m[40m

n = [92m3[m[97m[40m [91m[40m;[m[97m[40m
A = [92mrand[m[97m[40m (n) [91m[40m;[m[97m[40m
B = [92mrand[m[97m[40m (n) [91m[40m;[m[97m[40m
C = [92mzeros[m[97m[40m (n) [91m[40m;[m[97m[40m
[92mfor[m[97m[40m i = [92m1[m[97m[40m:n
    [92mfor[m[97m[40m j = [92m1[m[97m[40m:n[16;9HC(i,j) = [92mmax[m[97m[40m (A (i,:).[92m'[m[97m[40m [92m+[m[97m[40m B (:,j)) [91m[40m;[m[97m[40m
    [92mend
end[m[97m[40m
C2 = GrB.mxm ([91m'max.+'[m[97m[40m, A, B) [91m[40m;[m[97m[40m
fprintf ([91m'\nerr = norm (C-C2,1) = %g\n'[m[97m[40m, norm (C[92m-[m[97m[40mC2,[92m1[m[97m[40m)) [91m[40m;[m[97m[40m

[96m%% The max.plus tropical semiring
% Here are details of the "max.plus" tropical semiring.  The identity
% value is -inf since max(x,-inf) = max (-inf,x) = x for any x.
% The identity for the conventional "plus.times" semiring is zero,
% since x+0 = 0+x = x for any x.[m[97m[40m

GrB.semiringinfo ([91m'max.+.double'[m[97m[40m) [91m[40m;[m[97m[40m

[96m%% A boolean semiring
% MATLAB cannot multiply two logical matrices.  MATLAB R2019a converts
% them to double and uses the conventional +.*.double semiring instead.
% In GraphBLAS, this is the common Boolean 'or.and.logical' semiring,
% which is widely used in linear algebraic graph algorithms.[m[97m[40m

GrB.semiringinfo ([91m'|.&.logical'[m[97m[40m) [91m[40m;[m[97m[40m

[96m%%[m[97m[40m
[4m[30m[103mclear[m[97m[40m
A = sparse ([92mrand[m[97m[40m ([92m3[m[97m[40m) [92m>[m[97m[40m [92m0.5[m[97m[40m)
B = sparse ([92mrand[m[97m[40m ([92m3[m[97m[40m) [92m>[m[97m[40m [92m0.2[m[97m[40m)

[96m%%[m[97m[40m
[92mtry[m[97m[40m
    [96m% MATLAB R2019a does this by casting A and B to double[m[97m[40m
    C1 = A[92m*[m[97m[40mB
[92mcatch[m[97m[40m
    [96m% MATLAB R2018a throws an error[m[97m[40m
    fprintf ([91m'MATLAB R2019a required for C=A*B with logical\n'[m[97m[40m) [91m[40m;[m[97m[40m
    fprintf ([91m'matrices.  Explicitly converting to double:\n'[m[97m[40m) [91m[40m;[m[97m[40m
    C1 = double (A) [92m*[m[97m[40m double (B)
[92mend[m[97m[40m
C2 = GrB (A) [92m*[m[97m[40m GrB (B)

[96m%%
% Note that C1 is a MATLAB sparse double matrix, and contains non-binary
% values.  C2 is a GraphBLAS logical matrix.[m[97m[40m
whos
GrB.type (C2)

[96m%% GraphBLAS operators, monoids, and semirings
% The C interface for SuiteSparse:GraphBLAS allows for arbitrary types
% and operators to be constructed.  However, the MATLAB interface to
% SuiteSparse:GraphBLAS is restricted to pre-defined types and operators:
% a mere 13 types, 212 unary operators, 401 binary operators, 77 monoids,
% 22 select operators (each of which can be used for all 13 types),
% and 2,518 semirings.
%
% That gives you a lot of tools to create all kinds of interesting
% graph algorithms.  For example:
%
%   GrB.bfs    % breadth-first search
%   GrB.dnn    % sparse deep neural network (http://graphchallenge.org)
%   GrB.mis    % maximal independent set
%
% See 'help GrB.binopinfo' for a list of the binary operators, and
% 'help GrB.monoidinfo' for the ones that can be used as the additive
% monoid in a semiring.  'help GrB.unopinfo' lists the unary operators.[m[97m[40m[79;95H160,1[9C14%[39;1H[?12l[?25h[?25l[79;1H/clear[79;95H[K[79;1H[27m[23m[m[97m[40m[H[2J[1;1Hfprintf ([91m'num entries in G: %d\n'[m[97m[40m, GrB.entries (G)) [91m[40m;[m[97m[40m

[96m%% Displaying contents of a GraphBLAS matrix
% Unlike MATLAB, the default is to display just a few entries of a GrB matrix.
% Here are all 100 entries of a 10-by-10 matrix, using a non-default disp(G,3):

%%[m[97m[40m
G = GrB ([92mrand[m[97m[40m ([92m10[m[97m[40m)) [91m[40m;[m[97m[40m
[96m% display everything:[m[97m[40m
disp (G,[92m3[m[97m[40m)

[96m%%
% That was disp(G,3), so every entry was printed.  It's a little long, so
% the default is not to print everything.

%%
% With the default display (level = 2):[m[97m[40m
G

[96m%%
% That was disp(G,2) or just display(G), which is what is printed by a
% MATLAB statement that doesn't have a trailing semicolon.  With
% level = 1, disp(G,1) gives just a terse summary:[m[97m[40m
disp (G,[92m1[m[97m[40m)

[96m%% Storing a matrix by row or by column
% MATLAB stores its sparse matrices by column, refered to as 'sparse by
% col' in SuiteSparse:GraphBLAS.  In the 'sparse by col' format, each
% column of the matrix is stored as a list of entries, with their value
% and row index.  In the 'sparse by row' format, each row is stored as a
% list of values and their column indices.  GraphBLAS uses both 'by row'
% and 'by col', and the two formats can be intermixed arbitrarily.  In
% its C interface, the default format is 'by row'.  However, for better
% compatibility with MATLAB, the SuiteSparse:GraphBLAS MATLAB interface
% uses 'by col' by default instead. 

%%[m[97m[40m
rng ([91m'default'[m[97m[40m) [91m[40m;[m[97m[40m
GrB.[4m[30m[103mclear[m[97m[40m [91m[40m;[m[97m[40m[22C[96m% [m[97m[40m[4m[30m[103mclear[m[97m[40m[96m prior GraphBLAS settings[m[97m[40m
fprintf ([91m'the default format is: %s\n'[m[97m[40m, GrB.format) [91m[40m;[m[97m[40m
C = sparse ([92mrand[m[97m[40m ([92m2[m[97m[40m))
G = GrB (C)
GrB.format (G)

[96m%%
% Many graph algorithms work better in 'by row' format, with matrices
% stored by row.  For example, it is common to use A(i,j) for the edge
% (i,j), and many graph algorithms need to access the out-adjacencies of
% nodes, which is the row A(i,;) for node i.  If the 'by row' format is
% desired, GrB.format ('by row') tells GraphBLAS to create all subsequent
% matrices in the 'by row' format.  Converting from a MATLAB sparse matrix
% (in standard 'by col' format) takes a little more time (requiring a
% transpose), but subsequent graph algorithms can be faster.

%%[m[97m[40m
G = GrB (C, [91m'by row'[m[97m[40m)
fprintf ([91m'the format of G is:    %s\n'[m[97m[40m, GrB.format (G)) [91m[40m;[m[97m[40m
H = GrB (C)
fprintf ([91m'the format of H is:    %s\n'[m[97m[40m, GrB.format (H)) [91m[40m;[m[97m[40m
err = norm (H[92m-[m[97m[40mG,[92m1[m[97m[40m)

[96m%% Hypersparse, sparse, bitmap, and full matrices
% SuiteSparse:GraphBLAS can use four kinds of sparse matrix data
% structures: hypersparse, sparse, bitmap, and full, in both 'by col' and
% 'by row' formats, for a total of eight different combinations.  In the
% 'sparse by col' that MATLAB uses for its sparse matrices, an m-by-n
% matrix A takes O(n+nnz(A)) space.  MATLAB can create huge column
% vectors, but not huge matrices (when n is huge).[m[97m[40m

[4m[30m[103mclear[m[97m[40m
[1m[95m[[m[97m[40mc, huge[1m[95m][m[97m[40m = computer [91m[40m;[m[97m[40m
C = sparse (huge, [92m1[m[97m[40m)    [96m% MATLAB can create a huge-by-1 sparse column[m[97m[40m
[92mtry[m[97m[40m
    C = sparse (huge, huge)     [96m% but this fails[m[97m[40m
[92mcatch[m[97m[40m me
    error_expected = me
[92mend[m[97m[40m[79;95H363,5[9C38%[39;5H[?12l[?25h[?25l[79;1H/clear[79;95H[K[79;1H[94C363,36[8C38%[39;36H[?12l[?25h[?25l[79;95H[K[79;1H[94C394,1[9C38%[70;1H[?12l[?25h[?25l[79;95H[K[79;1H[1;78r[1;1H[5M[1;79r[74;1H[96m%%
% In a GraphBLAS hypersparse matrix, an m-by-n matrix A takes only
% O(nnz(A)) space.  The difference can be huge if nnz (A) << n.[m[97m[40m

[4m[30m[103mclear[m[97m[40m[79;1H[K[79;95H407,1[9C39%[78;1H[?12l[?25h[?25l[27m[23m[m[97m[40m[H[2J[2;1H[4m[30m[103mclear[m[97m[40m
[1m[95m[[m[97m[40mc, huge[1m[95m][m[97m[40m = computer [91m[40m;[m[97m[40m
G = GrB (huge, [92m1[m[97m[40m)[12C[96m% no problem for GraphBLAS[m[97m[40m
H = GrB (huge, huge)[9C[96m% this works in GraphBLAS too

%%
% Operations on huge hypersparse matrices are very fast; no component of
% the time or space complexity is Omega(n).[m[97m[40m

I = randperm (huge, [92m2[m[97m[40m) [91m[40m;[m[97m[40m
J = randperm (huge, [92m2[m[97m[40m) [91m[40m;[m[97m[40m
H (I,J) = magic ([92m2[m[97m[40m) [91m[40m;[m[97m[40m[8C[96m% add 4 nonzeros to random locations in H[m[97m[40m
H (I,I) = [92m10[m[97m[40m [92m*[m[97m[40m [1m[95m[[m[97m[40m[92m1[m[97m[40m [92m2[m[97m[40m [91m[40m;[m[97m[40m [92m3[m[97m[40m [92m4[m[97m[40m[1m[95m][m[97m[40m [91m[40m;[m[97m[40m [96m% so H^2 is not all zero[m[97m[40m
H = H[92m^2[m[97m[40m [91m[40m;[m[97m[40m[20C[96m% square H[m[97m[40m
H = (H[92m'[m[97m[40m [92m*[m[97m[40m [92m2[m[97m[40m) [91m[40m;[m[97m[40m[15C[96m% transpose H and double the entries[m[97m[40m
K = pi [92m*[m[97m[40m spones (H) [91m[40m;[m[97m[40m
H = H [92m+[m[97m[40m K[20C[96m% add pi to each entry in H

%% numel uses vpa if the matrix is really huge[m[97m[40m
e1 = numel (G)[15C[96m% this is huge, but still a flint[m[97m[40m
e2 = numel (H)[15C[96m% this is huge^2, which needs vpa[m[97m[40m
whos e1 e2

[96m%%
% All of these matrices take very little memory space:[m[97m[40m
whos C G H K

[96m%% The mask and accumulator
% When not used in overloaded operators or built-in functions, many
% GraphBLAS methods of the form GrB.method ( ... ) can optionally use a
% mask and/or an accumulator operator.  If the accumulator is '+' in
% GrB.mxm, for example, then C = C + A*B is computed.  The mask acts much
% like logical indexing in MATLAB.  With a logical mask matrix M,
% C<M>=A*B allows only part of C to be assigned.  If M(i,j) is true, then
% C(i,j) can be modified.  If false, then C(i,j) is not modified.
%
% For example, to set all values in C that are greater than 0.5 to 3:

%%[m[97m[40m
A = [92mrand[m[97m[40m ([92m3[m[97m[40m)
C = GrB.assign (A, A [92m>[m[97m[40m [92m0.5[m[97m[40m, [92m3[m[97m[40m) [91m[40m;[m[97m[40m     [96m% in GraphBLAS[m[97m[40m
C1 = GrB (A) [91m[40m;[m[97m[40m C1 (A [92m>[m[97m[40m [92m.5[m[97m[40m) = [92m3[m[97m[40m[7C[96m% also in GraphBLAS[m[97m[40m
C2 = A[7C[91m[40m;[m[97m[40m C2 (A [92m>[m[97m[40m [92m.5[m[97m[40m) = [92m3[m[97m[40m[7C[96m% in MATLAB[m[97m[40m
err = norm (C [92m-[m[97m[40m C1, [92m1[m[97m[40m)
err = norm (C [92m-[m[97m[40m C2, [92m1[m[97m[40m)

[96m%% The descriptor
% Most GraphBLAS functions of the form GrB.method ( ... ) take an optional
% last argument, called the descriptor.  It is a MATLAB struct that can
% modify the computations performed by the method.  'help
% GrB.descriptorinfo' gives all the details.  The following is a short
% summary of the primary settings:
%
% d.out  = 'default' or 'replace', [m[97m[40m[4m[30m[103mclear[m[97m[40m[96ms C after the accum op is used.
%
% d.mask = 'default' or 'complement', to use M or ~M as the mask matrix;
%          'structural', or 'structural complement', to use the pattern
%           of M or ~M.
%
% d.in0  = 'default' or 'transpose', to transpose A for C=A*B, C=A+B, etc.
%
% d.in1  = 'default' or 'transpose', to transpose B for C=A*B, C=A+B, etc.
%
% d.kind = 'default', 'GrB', 'sparse', or 'full'; the output of GrB.method.[m[97m[40m

A = sparse ([92mrand[m[97m[40m ([92m2[m[97m[40m)) [91m[40m;[m[97m[40m
B = sparse ([92mrand[m[97m[40m ([92m2[m[97m[40m)) [91m[40m;[m[97m[40m
C1 = A[92m'*[m[97m[40mB [91m[40m;[m[97m[40m
C2 = GrB.mxm ([91m'+.*'[m[97m[40m, A, B, struct ([91m'in0'[m[97m[40m, [91m'transpose'[m[97m[40m)) [91m[40m;[m[97m[40m
err = norm (C1[92m-[m[97m[40mC2,[92m1[m[97m[40m)

[96m%% Integer arithmetic is different in GraphBLAS
% MATLAB supports integer arithmetic on its full matrices, using int8,
% int16, int32, int64, uint8, uint16, uint32, or uint64 data types.  None
% of these integer data types can be used to construct a MATLAB sparse
% matrix, which can only be double, double complex, or logical.
% Furthermore, C=A*B is not defined for integer types in MATLAB, except[m[97m[40m[79;95H406,0-1[7C48%[1;1H[?12l[?25h[?25l[79;97H7,1  [2;1H[?12l[?25h[?25l[79;97H8[3;1H[?12l[?25h[?25l[79;97H9[4;1H[?12l[?25h[?25l[79;96H10[5;1H[?12l[?25h[?25l[79;97H1,0-1[6;1H[?12l[?25h[?25l[79;97H2,1  [7;1H[?12l[?25h[?25l[79;97H3[8;1H[?12l[?25h[?25l[79;97H4[9;1H[?12l[?25h[?25l[79;97H5,0-1[10;1H[?12l[?25h[?25l[79;97H6,1  [11;1H[?12l[?25h[?25l[79;97H7[12;1H[?12l[?25h[?25l[79;97H8[13;1H[?12l[?25h[?25l[79;97H9[14;1H[?12l[?25h[?25l[79;96H20[15;1H[?12l[?25h[?25l[79;97H1[16;1H[?12l[?25h[?25l[79;97H2[17;1H[?12l[?25h[?25l[79;97H3[18;1H[?12l[?25h[?25l[79;97H4,0-1[19;1H[?12l[?25h[?25l[79;97H5,1  [20;1H[?12l[?25h[?25l[79;97H6[21;1H[?12l[?25h[?25l[79;97H7[22;1H[?12l[?25h[?25l[79;97H8[23;1H[?12l[?25h[?25l[79;97H9,0-1[24;1H[?12l[?25h[?25l[79;96H30,1  [25;1H[?12l[?25h[?25l[79;97H1[26;1H[?12l[?25h[?25l[79;97H2[27;1H[?12l[?25h[?25l[79;97H3,0-1[28;1H[?12l[?25h[?25l[79;97H4,1  [29;1H[?12l[?25h[?25l[79;97H5[30;1H[?12l[?25h[?25l[79;97H6[31;1H[?12l[?25h[?25l[79;97H7[32;1H[?12l[?25h[?25l[79;97H8[33;1H[?12l[?25h[?25l[79;97H9[34;1H[?12l[?25h[?25l[79;96H40[35;1H[?12l[?25h[?25l[79;97H1[36;1H[?12l[?25h[?25l[79;97H2[37;1H[?12l[?25h[?25l[79;97H3[38;1H[?12l[?25h[?25l[27m[23m[m[97m[40m[H[2J[1;1H[96m% matrix, which can only be double, double complex, or logical.
% Furthermore, C=A*B is not defined for integer types in MATLAB, except
% when A and/or B are scalars.
%
% GraphBLAS supports all of those types for all of its matrices (hyper,
% sparse, bitmap, or full).  All operations are supported, including C=A*B
% when A or B are any integer type, in 1000s of semirings.
%
% However, integer arithmetic differs in GraphBLAS and MATLAB.  In MATLAB,
% integer values saturate if they exceed their maximum value.  In
% GraphBLAS, integer operators act in a modular fashion.  The latter is
% essential when computing C=A*B over a semiring.  A saturating integer
% operator cannot be used as a monoid since it is not associative.

%%[m[97m[40m
C = uint8 (magic ([92m3[m[97m[40m)) [91m[40m;[m[97m[40m
G = GrB (C) [91m[40m;[m[97m[40m
C1 = C [92m*[m[97m[40m [92m40[m[97m[40m
C2 = G [92m*[m[97m[40m uint8 ([92m40[m[97m[40m)
S = double (C1 [92m<[m[97m[40m [92m255[m[97m[40m) [91m[40m;[m[97m[40m
assert (isequal (double (C1)[92m.*[m[97m[40mS, double (C2)[92m.*[m[97m[40mS))

[96m%% An example graph algorithm: breadth-first search
% The breadth-first search of a graph finds all nodes reachable from the
% source node, and their level, v.  v=GrB.bfs(A,s) or v=bfs_matlab(A,s)
% compute the same thing, but GrB.bfs uses GraphBLAS matrices and
% operations, while bfs_matlab uses pure MATLAB operations.  v is defined
% as v(s) = 1 for the source node, v(i) = 2 for nodes adjacent to the
% source, and so on.[m[97m[40m

[4m[30m[103mclear[m[97m[40m
rng ([91m'default'[m[97m[40m) [91m[40m;[m[97m[40m
n = [92m1e5[m[97m[40m [91m[40m;[m[97m[40m
A = logical (sprandn (n, n, [92m1e-3[m[97m[40m)) [91m[40m;[m[97m[40m

tic
v1 = GrB.bfs (A, [92m1[m[97m[40m) [91m[40m;[m[97m[40m
gb_time = toc [91m[40m;[m[97m[40m

tic
v2 = bfs_matlab (A, [92m1[m[97m[40m) [91m[40m;[m[97m[40m
matlab_time = toc [91m[40m;[m[97m[40m

assert (isequal (double (v1[92m'[m[97m[40m), v2))
fprintf ([91m'\nnodes reached: %d of %d\n'[m[97m[40m, nnz (v2), n) [91m[40m;[m[97m[40m
fprintf ([91m'GraphBLAS time: %g sec\n'[m[97m[40m, gb_time) [91m[40m;[m[97m[40m
fprintf ([91m'MATLAB time:    %g sec\n'[m[97m[40m, matlab_time) [91m[40m;[m[97m[40m
fprintf ([91m'Speedup of GraphBLAS over MATLAB: %g\n'[m[97m[40m, [96m...[m[97m[40m
    matlab_time [92m/[m[97m[40m gb_time) [91m[40m;[m[97m[40m
fprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m

[96m%% Example graph algorithm: Luby's method in GraphBLAS
% The GrB.mis function is variant of Luby's randomized algorithm [Luby
% 1985].  It is a parallel method for finding an maximal independent set
% of nodes, where no two nodes are adjacent.  See the GraphBLAS/@GrB/mis.m
% function for details.  The graph must be symmetric with a zero-free
% diagonal, so A is symmetrized first and any diagonal entries are removed.[m[97m[40m

A = GrB (A) [91m[40m;[m[97m[40m
A = GrB.offdiag (A[92m|[m[97m[40mA[92m'[m[97m[40m) [91m[40m;[m[97m[40m

tic
s = GrB.mis (A) [91m[40m;[m[97m[40m
toc
fprintf ([91m'# nodes in the graph: %g\n'[m[97m[40m, [92msize[m[97m[40m (A,[92m1[m[97m[40m)) [91m[40m;[m[97m[40m
fprintf ([91m'# edges: : %g\n'[m[97m[40m, GrB.entries (A) [92m/[m[97m[40m [92m2[m[97m[40m) [91m[40m;[m[97m[40m
fprintf ([91m'size of maximal independent set found: %g\n'[m[97m[40m, [96m...[m[97m[40m
    full (double ([92msum[m[97m[40m (s)))) [91m[40m;[m[97m[40m

[96m% make sure it's independent[m[97m[40m
p = find (s) [91m[40m;[m[97m[40m
S = A (p,p) [91m[40m;[m[97m[40m
assert (GrB.entries (S) [92m==[m[97m[40m [92m0[m[97m[40m)

[96m% make sure it's maximal[m[97m[40m
notp = find (s [92m==[m[97m[40m [92m0[m[97m[40m) [91m[40m;[m[97m[40m
S = A (notp, p) [91m[40m;[m[97m[40m
deg = GrB.vreduce ([91m'+.int64'[m[97m[40m, S) [91m[40m;[m[97m[40m[79;95H482,1[9C57%[1;1H[?12l[?25h[?25l[27m[23m[m[97m[40m[H[2J[1;1HS = A (notp, p) [91m[40m;[m[97m[40m
deg = GrB.vreduce ([91m'+.int64'[m[97m[40m, S) [91m[40m;[m[97m[40m
assert (logical (all (deg [92m>[m[97m[40m [92m0[m[97m[40m)))

[96m%% Sparse deep neural network
% The 2019 MIT GraphChallenge (see http://graphchallenge.org) is to solve
% a set of large sparse deep neural network problems.  In this demo, the
% MATLAB reference solution is compared with a solution using GraphBLAS,
% for a randomly constructed neural network.  See the GrB.dnn and
% dnn_matlab.m functions for details.[m[97m[40m

[4m[30m[103mclear[m[97m[40m
rng ([91m'default'[m[97m[40m) [91m[40m;[m[97m[40m
nlayers = [92m16[m[97m[40m [91m[40m;[m[97m[40m
nneurons = [92m4096[m[97m[40m [91m[40m;[m[97m[40m
nfeatures = [92m30000[m[97m[40m [91m[40m;[m[97m[40m
fprintf ([91m'# layers:   %d\n'[m[97m[40m, nlayers) [91m[40m;[m[97m[40m
fprintf ([91m'# neurons:  %d\n'[m[97m[40m, nneurons) [91m[40m;[m[97m[40m
fprintf ([91m'# features: %d\n'[m[97m[40m, nfeatures) [91m[40m;[m[97m[40m
fprintf ([91m'# of threads used: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m

tic
Y0 = sprand (nfeatures, nneurons, [92m0.1[m[97m[40m) [91m[40m;[m[97m[40m
[92mfor[m[97m[40m layer = [92m1[m[97m[40m:nlayers
    W {layer} = sprand (nneurons, nneurons, [92m0.01[m[97m[40m) [92m*[m[97m[40m [92m0.2[m[97m[40m [91m[40m;[m[97m[40m
    bias {layer} = [92m-0.2[m[97m[40m [92m*[m[97m[40m [92mones[m[97m[40m ([92m1[m[97m[40m, nneurons) [91m[40m;[m[97m[40m
[92mend[m[97m[40m
t_setup = toc [91m[40m;[m[97m[40m
fprintf ([91m'construct problem time: %g sec\n'[m[97m[40m, t_setup) [91m[40m;[m[97m[40m

[96m% convert the problem from MATLAB to GraphBLAS[m[97m[40m
t = tic [91m[40m;[m[97m[40m
[1m[95m[[m[97m[40mW_gb, bias_gb, Y0_gb[1m[95m][m[97m[40m = dnn_mat2gb (W, bias, Y0) [91m[40m;[m[97m[40m
t = toc (t) [91m[40m;[m[97m[40m
fprintf ([91m'setup time: %g sec\n'[m[97m[40m, t) [91m[40m;[m[97m[40m

[96m%% Solving the sparse deep neural network problem with GraphbLAS
% Please wait ...[m[97m[40m

tic
Y1 = GrB.dnn (W_gb, bias_gb, Y0_gb) [91m[40m;[m[97m[40m
gb_time = toc [91m[40m;[m[97m[40m
fprintf ([91m'total time in GraphBLAS: %g sec\n'[m[97m[40m, gb_time) [91m[40m;[m[97m[40m

[96m%% Solving the sparse deep neural network problem with MATLAB
% Please wait ...[m[97m[40m

tic
Y2 = dnn_matlab (W, bias, Y0) [91m[40m;[m[97m[40m
matlab_time = toc [91m[40m;[m[97m[40m
fprintf ([91m'total time in MATLAB:    %g sec\n'[m[97m[40m, matlab_time) [91m[40m;[m[97m[40m
fprintf ([91m'Speedup of GraphBLAS over MATLAB: %g\n'[m[97m[40m, [96m...[m[97m[40m
    matlab_time [92m/[m[97m[40m gb_time) [91m[40m;[m[97m[40m
fprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m

err = norm (Y1[92m-[m[97m[40mY2,[92m1[m[97m[40m)

[96m%% For objects, GraphBLAS has better colon notation than MATLAB
% The MATLAB notation C = A (start:inc:fini) is very handy, and
% it works great if A is a MATLAB matrix.  But for objects like
% the GraphBLAS matrix, MATLAB starts by creating the explicit
% index vector I = start:inc:fini.  That's fine if the matrix is
% modest in size, but GraphBLAS can construct huge matrices.
% The problem is that 1:n cannot be explicitly constructed when n
% is huge.
%
% The C API for GraphBLAS can represent the colon notation 
% start:inc:fini in an implicit manner, so it can do the indexing
% without actually forming the explicit list I = start:inc:fini.
% But there is no access to this method using the MATLAB notation
% start:inc:fini.
%
% Thus, to compute C = A (start:inc:fini) for very huge matrices,
% you need to use use a cell array to represent the colon notation,
% as { start, inc, fini }, instead of start:inc:fini. See
% 'help GrB.extract', 'help GrB.assign' for the functional form.
% For the overloaded syntax C(I,J)=A and C=A(I,J), see
% 'help GrB/subsasgn' and 'help GrB/subsref'.  The cell array[m[97m[40m[79;95H558,1[9C66%[1;1H[?12l[?25h[?25l[27m[23m[m[97m[40m[H[2J[1;1H[96m% For the overloaded syntax C(I,J)=A and C=A(I,J), see
% 'help GrB/subsasgn' and 'help GrB/subsref'.  The cell array
% syntax isn't conventional, but it is far faster than the MATLAB
% colon notation for objects, and takes far less memory when I is huge.

%%[m[97m[40m
n = [92m1e14[m[97m[40m [91m[40m;[m[97m[40m
H = GrB (n, n) [91m[40m;[m[97m[40m[12C[96m% a huge empty matrix[m[97m[40m
I = [1m[95m[[m[97m[40m[92m1[m[97m[40m [92m1e9[m[97m[40m [92m1e12[m[97m[40m [92m1e14[m[97m[40m[1m[95m][m[97m[40m [91m[40m;[m[97m[40m
M = magic ([92m4[m[97m[40m)
H (I,I) = M [91m[40m;[m[97m[40m
J = {[92m1[m[97m[40m, [92m1e13[m[97m[40m} [91m[40m;[m[97m[40m[12C[96m% represents 1:1e13 colon notation[m[97m[40m
C1 = H (J, J)[14C[96m% computes C1 = H (1:e13,1:1e13)[m[97m[40m
c = nonzeros (C1) [91m[40m;[m[97m[40m
m = nonzeros (M ([92m1[m[97m[40m:[92m3[m[97m[40m, [92m1[m[97m[40m:[92m3[m[97m[40m)) [91m[40m;[m[97m[40m
assert (isequal (c, m)) [91m[40m;[m[97m[40m

[96m%%[m[97m[40m
[92mtry[m[97m[40m
    [96m% try to compute the same thing with colon
[m[97m[40m    [96m% notation (1:1e13), but this fails:[m[97m[40m
    C2 = H ([92m1[m[97m[40m:[92m1e13[m[97m[40m, [92m1[m[97m[40m:[92m1e13[m[97m[40m)
[92mcatch[m[97m[40m me
    error_expected = me
[92mend[m[97m[40m

[96m%% Iterative solvers work as-is
% Many built-in functions work with GraphBLAS matrices unmodified.[m[97m[40m

A = sparse ([92mrand[m[97m[40m ([92m4[m[97m[40m)) [91m[40m;[m[97m[40m
b = sparse ([92mrand[m[97m[40m ([92m4[m[97m[40m,[92m1[m[97m[40m)) [91m[40m;[m[97m[40m
x = gmres (A,b)
norm (A[92m*[m[97m[40mx[92m-[m[97m[40mb)
x = gmres (GrB(A), GrB(b))
norm (A[92m*[m[97m[40mx[92m-[m[97m[40mb)

[96m%% ... even in single precision[m[97m[40m
x = gmres (GrB(A,[91m'single'[m[97m[40m), GrB(b,[91m'single'[m[97m[40m))
norm (A[92m*[m[97m[40mx[92m-[m[97m[40mb)

[96m%%
% Both of the following uses of minres (A,b) fail to converge because A
% is not symmetric, as the method requires.  Both failures are correctly
% reported, and both the MATLAB version and the GraphBLAS version return
% the same incorrect vector x.[m[97m[40m

x = minres (A, b)
x = minres (GrB(A), GrB(b))

[96m%%
% With a proper symmetric matrix[m[97m[40m

A = A[92m+[m[97m[40mA[92m'[m[97m[40m [91m[40m;[m[97m[40m
x = minres (A, b)
norm (A[92m*[m[97m[40mx[92m-[m[97m[40mb)
x = minres (GrB(A), GrB(b))
norm (A[92m*[m[97m[40mx[92m-[m[97m[40mb)

[96m%% Extreme performance differences between GraphBLAS and MATLAB.
% The GraphBLAS operations used so far are perhaps 2x to 50x faster than
% the corresponding MATLAB operations, depending on how many cores your
% computer has.  To run a demo illustrating a 500x or more speedup versus
% MATLAB, run this demo:
%
%    gbdemo2
%
% It will illustrate an assignment C(I,J)=A that can take under a second
% in GraphBLAS but several minutes in MATLAB.  To make the comparsion
% even more dramatic, try:
%
%    gbdemo2 (20000)
%
% assuming you have enough memory.

%% Sparse logical indexing is much, much faster in GraphBLAS
% The mask in GraphBLAS acts much like logical indexing in MATLAB, but it
% is not quite the same.  MATLAB logical indexing takes the form:
%[m[97m[40m[79;95H634,1[9C75%[1;1H[?12l[?25h[?25l[27m[23m[m[97m[40m[H[2J[1;1H[96m% is not quite the same.  MATLAB logical indexing takes the form:
%
%       C (M) = A (M)
%
% which computes the same thing as the GraphBLAS statement:
%
%       C = GrB.assign (C, M, A)
%
% The GrB.assign statement computes C(M)=A(M), and it is vastly faster
% than C(M)=A(M) for MATLAB sparse matrices, even if the time to convert
% the GrB matrix back to a MATLAB sparse matrix is included.
%
% GraphBLAS can also compute C(M)=A(M) using overloaded operators for
% subsref and subsasgn, but C = GrB.assign (C, M, A) is a bit faster.
%
% Here are both methods in GraphBLAS (both are very fast).  Setting up:[m[97m[40m

[4m[30m[103mclear[m[97m[40m
n = [92m4000[m[97m[40m [91m[40m;[m[97m[40m
tic
C = sprand (n, n, [92m0.1[m[97m[40m) [91m[40m;[m[97m[40m
A = [92m100[m[97m[40m [92m*[m[97m[40m sprand (n, n, [92m0.1[m[97m[40m) [91m[40m;[m[97m[40m
M = (C [92m>[m[97m[40m [92m0.5[m[97m[40m) [91m[40m;[m[97m[40m
t_setup = toc [91m[40m;[m[97m[40m
fprintf ([91m'nnz(C): %g, nnz(M): %g, nnz(A): %g\n'[m[97m[40m, [96m...[m[97m[40m
    nnz(C), nnz(M), nnz(A)) [91m[40m;[m[97m[40m
fprintf ([91m'\nsetup time:     %g sec\n'[m[97m[40m, t_setup) [91m[40m;[m[97m[40m

[96m%% First method in GraphBLAS, with GrB.assign
% Including the time to convert C1 from a GraphBLAS
% matrix to a MATLAB sparse matrix:[m[97m[40m
tic
C1 = GrB.assign (C, M, A) [91m[40m;[m[97m[40m
C1 = double (C1) [91m[40m;[m[97m[40m
gb_time = toc [91m[40m;[m[97m[40m
fprintf ([91m'\nGraphBLAS time: %g sec for GrB.assign\n'[m[97m[40m, gb_time) [91m[40m;[m[97m[40m

[96m%% Second method in GraphBLAS, with C(M)=A(M)
% now using overloaded operators, also include the time to
% convert back to a MATLAB sparse matrix, for good measure:[m[97m[40m
A2 = GrB (A) [91m[40m;[m[97m[40m
C2 = GrB (C) [91m[40m;[m[97m[40m
tic
C2 (M) = A2 (M) [91m[40m;[m[97m[40m
C2 = double (C2) [91m[40m;[m[97m[40m
gb_time2 = toc [91m[40m;[m[97m[40m
fprintf ([91m'\nGraphBLAS time: %g sec for C(M)=A(M)\n'[m[97m[40m, gb_time2) [91m[40m;[m[97m[40m

[96m%% Now with MATLAB matrices, with C(M)=A(M) 
% Please wait, this will take about 10 minutes or so ...[m[97m[40m

tic
C (M) = A (M) [91m[40m;[m[97m[40m
matlab_time = toc [91m[40m;[m[97m[40m

fprintf ([91m'\nGraphBLAS time: %g sec (GrB.assign)\n'[m[97m[40m, gb_time) [91m[40m;[m[97m[40m
fprintf ([91m'GraphBLAS time: %g sec (overloading)\n'[m[97m[40m, gb_time2) [91m[40m;[m[97m[40m
fprintf ([91m'MATLAB time:    %g sec\n'[m[97m[40m, matlab_time) [91m[40m;[m[97m[40m
fprintf ([91m'Speedup of GraphBLAS (overloading) over MATLAB: %g\n'[m[97m[40m, [96m...[m[97m[40m
    matlab_time [92m/[m[97m[40m gb_time2) [91m[40m;[m[97m[40m
fprintf ([91m'Speedup of GraphBLAS (GrB.assign)  over MATLAB: %g\n'[m[97m[40m, [96m...[m[97m[40m
    matlab_time [92m/[m[97m[40m gb_time) [91m[40m;[m[97m[40m
fprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m

assert (isequal (C1, C))
assert (isequal (C2, C))
fprintf ([91m'Results of GrB and MATLAB match perfectly.\n'[m[97m[40m)

[96m%% Limitations and their future solutions
% The MATLAB interface for SuiteSparse:GraphBLAS is a work-in-progress.
% It has some limitations, most of which will be resolved over time.
%
% (1) Nonblocking mode:
%
% GraphBLAS has a 'non-blocking' mode, in which operations can be left
% pending and completed later.  SuiteSparse:GraphBLAS uses the
% non-blocking mode to speed up a sequence of assignment operations, such
% as C(I,J)=A.  However, in its MATLAB interface, this would require a[m[97m[40m[79;95H710,1[9C84%[1;1H[?12l[?25h[?25l[27m[23m[m[97m[40m[H[2J[1;1H[96m%% GraphBLAS: graph algorithms in the language of linear algebra
% GraphBLAS is a library for creating graph algorithms based on sparse
% linear algebraic operations over semirings.  Visit http://graphblas.org
% for more details and resources.  See also the SuiteSparse:GraphBLAS
% User Guide in this package.
%
% http://faculty.cse.tamu.edu/davis
%
% SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2021, All Rights Reserved.
% SPDX-License-Identifier: Apache-2.0

%% GraphBLAS: faster and more general sparse matrices for MATLAB
% GraphBLAS is not only useful for creating graph algorithms; it also
% supports a wide range of sparse matrix data types and operations.
% MATLAB can compute C=A*B with just two semirings: 'plus.times.double'
% and 'plus.times.complex' for complex matrices.  GraphBLAS has 2,518
% built-in semirings, such as 'max.plus'
% (https://en.wikipedia.org/wiki/Tropical_semiring).  These semirings can
% be used to construct a wide variety of graph algorithms, based on
% operations on sparse adjacency matrices.
%
% MATLAB and GraphBLAS both provide sparse matrices of type double,
% logical, and double complex.  GraphBLAS adds sparse matrices of type:
% single, int8, int16, int32, int64, uint8, uint16, uint32, uint64, and
% single complex (with MATLAB matrices, these types can only be held in
% full matrices).

% reset to the default number of threads[m[97m[40m
[4m[30m[103mclear[m[97m[40m all
maxNumCompThreads ([91m'automatic'[m[97m[40m) [91m[40m;[m[97m[40m
GrB.[4m[30m[103mclear[m[97m[40m [91m[40m;[m[97m[40m
fprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m

format compact
rng ([91m'default'[m[97m[40m) [91m[40m;[m[97m[40m
X = [92m100[m[97m[40m [92m*[m[97m[40m [92mrand[m[97m[40m ([92m2[m[97m[40m) [91m[40m;[m[97m[40m
G = GrB (X)[14C[96m% GraphBLAS copy of a matrix X, same type

%% Sparse integer matrices
% Here's an int8 version of the same matrix:[m[97m[40m

S = int8 (G)[13C[96m% convert G to a full MATLAB int8 matrix[m[97m[40m
S ([92m1[m[97m[40m,[92m1[m[97m[40m) = [92m0[m[97m[40m[14C[96m% add an explicit zero to S[m[97m[40m
G = GrB (X, [91m'int8'[m[97m[40m)      [96m% a GraphBLAS full int8 matrix[m[97m[40m
G ([92m1[m[97m[40m,[92m1[m[97m[40m) = [92m0[m[97m[40m[14C[96m% add an explicit zero to G[m[97m[40m
G = GrB.prune (G)[8C[96m% a GraphBLAS sparse int8 matrix[m[97m[40m

[92mtry[m[97m[40m
    S = sparse (S) [91m[40m;[m[97m[40m     [96m% MATLAB can't create sparse int8 matrices[m[97m[40m
[92mcatch[m[97m[40m me
    display (me)
[92mend[m[97m[40m

[96m%% Sparse single-precision matrices
% Matrix operations in GraphBLAS are typically as fast, or faster than
% MATLAB.  Here's an unfair comparison: computing X^2 with MATLAB in
% double precision and with GraphBLAS in single precision.  You would
% naturally expect GraphBLAS to be faster. 
%
% CAVEAT:  MATLAB R2021a uses SuiteSparse:GraphBLAS v3.3.3 for C=A*B,
% so on that version, we're comparing 2 versions by the same author.
%
% Please wait ...[m[97m[40m

n = [92m1e5[m[97m[40m [91m[40m;[m[97m[40m
X = spdiags ([92mrand[m[97m[40m (n, [92m201[m[97m[40m), [92m-100[m[97m[40m:[92m100[m[97m[40m, n, n) [91m[40m;[m[97m[40m
G = GrB (X, [91m'single'[m[97m[40m) [91m[40m;[m[97m[40m
tic
G2 = G[92m^2[m[97m[40m [91m[40m;[m[97m[40m
gb_time = toc [91m[40m;[m[97m[40m
tic
X2 = X[92m^2[m[97m[40m [91m[40m;[m[97m[40m
matlab_time = toc [91m[40m;[m[97m[40m
fprintf ([91m'\nGraphBLAS time: %g sec (in single)\n'[m[97m[40m, gb_time) [91m[40m;[m[97m[40m
fprintf ([91m'MATLAB time:    %g sec (in double)\n'[m[97m[40m, matlab_time) [91m[40m;[m[97m[40m
fprintf ([91m'Speedup of GraphBLAS over MATLAB: %g\n'[m[97m[40m, [96m...[m[97m[40m
    matlab_time [92m/[m[97m[40m gb_time) [91m[40m;[m[97m[40m
fprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m[79;95H1,1[11CTop[1;1H[?12l[?25h[?25l[79;95H78,1[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[79;95H[K[79;95H79,0-1[9C0%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m%% Mixing MATLAB and GraphBLAS matrices[m[97m[40m[79;95H[K[79;95H80,1[11C0%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m% The error in the last computation is about eps('single') since[m[97m[40m[79;95H[K[79;95H81,1[11C0%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m% GraphBLAS did its computation in single precision, while MATLAB used[m[97m[40m[79;95H[K[79;95H82,1[11C0%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m% double precision.  MATLAB and GraphBLAS matrices can be easily[m[97m[40m[79;95H[K[79;95H83,1[11C0%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m% combined, as in X2-G2.  The sparse single precision matrices take less[m[97m[40m[79;95H[K[79;95H84,1[11C0%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m% memory space.[m[97m[40m[79;95H[K[79;95H85,1[11C0%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[79;95H[K[79;95H86,0-1[9C0%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1Herr = norm (X2 [92m-[m[97m[40m G2, [92m1[m[97m[40m) [92m/[m[97m[40m norm (X2,[92m1[m[97m[40m)[79;95H[K[79;95H87,1[11C1%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1Heps ([91m'single'[m[97m[40m)[79;95H[K[79;95H88,1[11C1%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1Hwhos G G2 X X2[79;95H[K[79;95H89,1[11C1%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[79;95H[K[79;95H90,0-1[9C1%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m%% Faster matrix operations[m[97m[40m[79;95H[K[79;95H91,1[11C1%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m% But even with standard double precision sparse matrices, GraphBLAS is[m[97m[40m[79;95H[K[79;95H92,1[11C1%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m% typically faster than the built-in MATLAB methods.  Here's a fair[m[97m[40m[79;95H[K[79;95H93,1[11C1%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m% comparison (caveat: these both use GraphBLAS in MATLAB R2021a):[m[97m[40m[79;95H[K[79;95H94,1[11C1%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[79;95H[K[79;95H95,0-1[9C2%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1HG = GrB (X) [91m[40m;[m[97m[40m[79;95H[K[79;95H96,1[11C2%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1Htic[79;95H[K[79;95H97,1[11C2%[78;1H[?12l[?25h[?25l[79;96H6[77;1H[?12l[?25h[?25l[79;96H5,0-1[76;1H[?12l[?25h[?25l[79;96H4,1  [75;1H[?12l[?25h[?25l[79;96H3[74;1H[?12l[?25h[?25l[79;96H2[73;1H[?12l[?25h[?25l[79;96H1[72;1H[?12l[?25h[?25l[79;96H0,0-1[71;1H[?12l[?25h[?25l[79;95H89,1  [70;1H[?12l[?25h[?25l[79;96H8[69;1H[?12l[?25h[?25l[79;96H7[68;1H[?12l[?25h[?25l[79;96H6,0-1[67;1H[?12l[?25h[?25l[79;96H5,1  [66;1H[?12l[?25h[?25l[79;96H4[65;1H[?12l[?25h[?25l[79;96H3[64;1H[?12l[?25h[?25l[79;96H2[63;1H[?12l[?25h[?25l[79;96H1[62;1H[?12l[?25h[?25l[79;96H0[61;1H[?12l[?25h[?25l[79;95H79,0-1[60;1H[?12l[?25h[?25l[79;96H8,1  [59;1H[?12l[?25h[?25l[79;96H7[58;1H[?12l[?25h[?25l[79;96H6[57;1H[?12l[?25h[?25l[79;96H5[56;1H[?12l[?25h[?25l[79;96H4[55;1H[?12l[?25h[?25l[79;96H3[54;1H[?12l[?25h[?25l[79;96H2[53;1H[?12l[?25h[?25l[79;96H1[52;1H[?12l[?25h[?25l[79;96H0[51;1H[?12l[?25h[?25l[79;95H69[50;1H[?12l[?25h[?25l[79;96H8[49;1H[?12l[?25h[?25l[79;96H7[48;1H[?12l[?25h[?25l[79;96H6[47;1H[?12l[?25h[?25l[79;96H5[46;1H[?12l[?25h[?25l[79;96H6[47;1H[?12l[?25h[?25l[79;96H7[48;1H[?12l[?25h[?25l[79;96H8[49;1H[?12l[?25h[?25l[79;96H9[50;1H[?12l[?25h[?25l[79;96H8[49;1H[?12l[?25h[?25l[79;96H7[48;1H[?12l[?25h[?25l[79;96H6[47;1H[?12l[?25h[?25l[79;96H7[48;1H[?12l[?25h[?25l[49;78r[49;1H[L[1;79r[49;1HG2 = G[92m^2[m[97m[40m [91m[40m;[m[97m[40m[79;95H[K[79;95H68,1[11C2%[49;1H[?12l[?25h[?25l[79;1H[1m-- INSERT --[m[97m[40m[79;95H[K[79;95H68,11[10C2%[49;11H[?12l[?25h[?25l[79;99H3[49;13H[?12l[?25h[?25l[96m%[m[97m[40m[79;99H4[49;14H[?12l[?25h[?25l[96m [m[97m[40m[79;99H5[49;15H[?12l[?25h[?25l[96mw[m[97m[40m[79;99H6[49;16H[?12l[?25h[?25l[96ma[m[97m[40m[79;99H7[49;17H[?12l[?25h[?25l[96mr[m[97m[40m[79;99H8[49;18H[?12l[?25h[?25l[96mm[m[97m[40m[79;99H9[49;19H[?12l[?25h[?25l[96mu[m[97m[40m[79;98H20[49;20H[?12l[?25h[?25l[96mp[m[97m[40m[79;99H1[49;21H[?12l[?25h[79;1H[K[49;20H[?25l[79;95H68,20[10C2%[49;20H[?12l[?25h[?25l[79;96H9,3 [50;3H[?12l[?25h[?25l[79;95H70,10[51;10H[?12l[?25h[?25l[79;96H1,15[52;15H[?12l[?25h[?25l[79;96H2,3 [53;3H[?12l[?25h[?25l[79;96H3,10[54;10H[?12l[?25h[?25l[79;96H2,3 [53;3H[?12l[?25h[?25l[79;96H1,10[52;10H[?12l[?25h[?25l[53;78r[53;1H[L[1;79r[53;1HX2 = X[92m^2[m[97m[40m [91m[40m;[m[97m[40m[79;95H[K[79;95H72,1[11C2%[53;1H[?12l[?25h[?25l[79;1H[1m-- INSERT --[m[97m[40m[79;95H[K[79;95H72,11[10C2%[53;11H[?12l[?25h[?25l[79;99H3[53;13H[?12l[?25h[?25l[96m%[m[97m[40m[79;99H4[53;14H[?12l[?25h[?25l[96m [m[97m[40m[79;99H5[53;15H[?12l[?25h[?25l[96mw[m[97m[40m[79;99H6[53;16H[?12l[?25h[?25l[96ma[m[97m[40m[79;99H7[53;17H[?12l[?25h[?25l[96mr[m[97m[40m[79;99H8[53;18H[?12l[?25h[?25l[96mm[m[97m[40m[79;99H9[53;19H[?12l[?25h[?25l[96mu[m[97m[40m[79;98H20[53;20H[?12l[?25h[?25l[96mp[m[97m[40m[79;99H1[53;21H[?12l[?25h[79;1H[K[53;20H[?25l[79;95H72,20[10C2%[53;20H[?12l[?25h[?25l[79;98H1 [53;1H[?12l[?25h[?25l[79;98H4[53;4H[?12l[?25h[?25l[79;95H64,0-1[45;1H[?12l[?25h[?25l[79;95H81[62;1H[?12l[?25h[?25l[79;96H2,1  [63;1H[?12l[?25h[?25l[79;96H3[64;1H[?12l[?25h[?25l[79;96H4[65;1H[?12l[?25h[?25l[79;96H5[66;1H[?12l[?25h[?25l[79;96H6[67;1H[?12l[?25h[?25l[79;96H7[68;1H[?12l[?25h[?25l[79;96H8,0-1[69;1H[?12l[?25h[?25l[79;96H9,1  [70;1H[?12l[?25h[?25l[79;95H90[71;1H[?12l[?25h[?25l[79;96H1[72;1H[?12l[?25h[?25l[79;96H2,0-1[73;1H[?12l[?25h[?25l[79;96H3,1  [74;1H[?12l[?25h[?25l[79;96H4[75;1H[?12l[?25h[?25l[79;96H5[76;1H[?12l[?25h[?25l[79;96H6[77;1H[?12l[?25h[?25l[79;96H7,0-1[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1HG = GrB (X) [91m[40m;[m[97m[40m[79;95H[K[79;95H98,1[11C2%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1Htic[79;95H[K[79;95H99,1[11C2%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1HG2 = G[92m^2[m[97m[40m [91m[40m;[m[97m[40m[79;95H[K[79;95H100,1[10C2%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1Hgb_time = toc [91m[40m;[m[97m[40m[79;95H[K[79;95H101,1[10C2%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1Herr = norm (X2 [92m-[m[97m[40m G2, [92m1[m[97m[40m) [92m/[m[97m[40m norm (X2,[92m1[m[97m[40m)[79;95H[K[79;95H102,1[10C2%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1Hfprintf ([91m'\nGraphBLAS time: %g sec (in double)\n'[m[97m[40m, gb_time) [91m[40m;[m[97m[40m[79;95H[K[79;95H103,1[10C2%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1Hfprintf ([91m'MATLAB time:    %g sec (in double)\n'[m[97m[40m, matlab_time) [91m[40m;[m[97m[40m[79;95H[K[79;95H104,1[10C3%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1Hfprintf ([91m'Speedup of GraphBLAS over MATLAB: %g\n'[m[97m[40m, [96m...[m[97m[40m[79;95H[K[79;95H105,1[10C3%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;5Hmatlab_time [92m/[m[97m[40m gb_time) [91m[40m;[m[97m[40m[79;95H[K[79;95H106,1[10C3%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1Hfprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m[79;95H[K[79;95H107,1[10C3%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[79;95H[K[79;95H108,0-1[8C3%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m%% A wide range of semirings[m[97m[40m[79;95H[K[79;95H109,1[10C3%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m% MATLAB can only compute C=A*B using the standard '+.*.double' and[m[97m[40m[79;95H[K[79;95H110,1[10C3%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m% '+.*.complex' semirings.  A semiring is defined in terms of a string,[m[97m[40m[79;95H[K[79;95H111,1[10C3%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m% 'add.mult.type', where 'add' is a monoid that takes the place of the[m[97m[40m[79;95H[K[79;95H112,1[10C4%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m% additive operator, 'mult' is the multiplicative operator, and 'type' is[m[97m[40m[79;95H[K[79;95H113,1[10C4%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m% the data type for the two inputs to the mult operator.[m[97m[40m[79;95H[K[79;95H114,1[10C4%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m%[m[97m[40m[79;95H[K[79;95H115,1[10C4%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m% In the standard semiring, C=A*B is defined as:[m[97m[40m[79;95H[K[79;95H116,1[10C4%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m%[m[97m[40m[79;95H[K[79;95H117,1[10C4%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m%   C(i,j) = sum (A(i,:).' .* B(:,j))[m[97m[40m[79;95H[K[79;95H118,1[10C4%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m%[m[97m[40m[79;95H[K[79;95H119,1[10C4%[78;1H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1H[96m% using 'plus' as the monoid and 'times' as the multiplicative operator.[m[97m[40m[79;95H[K[79;95H120,1[10C4%[78;1H[?12l[?25h[?25l[79;96H19[77;1H[?12l[?25h[?25l[79;97H8[76;1H[?12l[?25h[?25l[79;97H7[75;1H[?12l[?25h[?25l[79;97H6[74;1H[?12l[?25h[?25l[79;97H5[73;1H[?12l[?25h[?25l[79;97H4[72;1H[?12l[?25h[?25l[79;97H3[71;1H[?12l[?25h[?25l[79;97H2[70;1H[?12l[?25h[?25l[79;97H1[69;1H[?12l[?25h[?25l[79;97H0[68;1H[?12l[?25h[?25l[79;96H09[67;1H[?12l[?25h[?25l[79;97H8,0-1[66;1H[?12l[?25h[?25l[79;97H7,1  [65;1H[?12l[?25h[?25l[79;97H6[64;1H[?12l[?25h[?25l[79;97H5[63;1H[?12l[?25h[?25l[79;97H4[62;1H[?12l[?25h[?25l[79;97H3[61;1H[?12l[?25h[?25l[79;97H2[60;1H[?12l[?25h[?25l[79;97H1[59;1H[?12l[?25h[?25l[79;97H0[58;1H[?12l[?25h[?25l[79;95H99,1 [57;1H[?12l[?25h[?25l[79;95H100,1[58;1H[?12l[?25h[?25l[79;95H99,1 [57;1H[?12l[?25h[?25l[79;96H8[56;1H[?12l[?25h[?25l[57;78r[57;1H[L[1;79r[57;1HG2 = G[92m^2[m[97m[40m [91m[40m;[m[97m[40m[79;95H[K[79;95H99,1[11C4%[57;1H[?12l[?25h[?25l[79;1H[1m-- INSERT --[m[97m[40m[79;95H[K[79;95H99,11[10C4%[57;11H[?12l[?25h[?25l[79;99H3[57;13H[?12l[?25h[?25l[96m%[m[97m[40m[79;99H4[57;14H[?12l[?25h[?25l[96m [m[97m[40m[79;99H5[57;15H[?12l[?25h[?25l[96mw[m[97m[40m[79;99H6[57;16H[?12l[?25h[?25l[96ma[m[97m[40m[79;99H7[57;17H[?12l[?25h[?25l[96mr[m[97m[40m[79;99H8[57;18H[?12l[?25h[?25l[96mr[m[97m[40m[79;99H9[57;19H[?12l[?25h[?25l[96mm[m[97m[40m[79;98H20[57;20H[?12l[?25h[?25l[96mu[m[97m[40m[79;99H1[57;21H[?12l[?25h[?25l[96mp[m[97m[40m[79;99H2[57;22H[?12l[?25h[79;1H[K[57;21H[?25l[79;95H99,21[10C4%[57;21H[?12l[?25h[?25l[79;98H15[57;15H[?12l[?25h[?25l[79;99H6[57;16H[?12l[?25h[?25l[79;99H7[57;17H[?12l[?25h[?25l[1C[96mmup[m[97m[40m[57;21H[K[57;17H[?12l[?25h[?25l[79;95H100,3[58;3H[?12l[?25h[?25l[79;97H1,10[59;10H[?12l[?25h[?25l[79;97H2,15[60;15H[?12l[?25h[?25l[79;97H3,17[61;17H[?12l[?25h[?25l[79;97H4[62;17H[?12l[?25h[?25l[79;97H5[63;17H[?12l[?25h[?25l[79;97H6[64;17H[?12l[?25h[?25l[79;100H1[64;11H[?12l[?25h[?25l[79;99H9 [64;9H[?12l[?25h[?25l[79;99H1[64;1H[?12l[?25h[?25l[79;97H5,63[63;63H[?12l[?25h[?25l[79;100H1[63;61H[?12l[?25h[?25l[79;99H50[63;50H[?12l[?25h[?25l[79;99H63[63;63H[?12l[?25h[?25l[79;100H1[63;61H[?12l[?25h[?25l[79;99H50[63;50H[?12l[?25h[?25l[79;99H63[63;63H[?12l[?25h[?25l[79;100H1[63;61H[?12l[?25h[?25l[79;99H50[63;50H[?12l[?25h[?25l[79;1H?\<matlab_time\>[79;95H[K[79;1H[33;1H[4m[30m[103mmatlab_time[35;50Hmatlab_time[37;5Hmatlab_time[63;50Hmatlab_time[65;5Hmatlab_time[m[97m[40m[79;95H79,5[11C4%[37;5H[?12l[?25h[?25l[79;1H[K[79;1H:[?12l[?25hw[?25l[?12l[?25h[?25l"graphblas_demo.m" 921L, 31812C written[55C79,5[11C4%[79;95H[K[79;95H79,5[11C4%[37;5H[?12l[?25h[?25l[79;23H lines --8%--[79;36H[K[79;95H79,5[11C4%[37;5H[?12l[?25h[79;1H[?1006l[?1002l[79;1H[K[79;1H[?1l>[?1049l[0;36mhypersparse $[0m git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   graphblas_demo.m[m

no changes added to commit (use "git add" and/or "git commit -a")
[0;36mhypersparse $[0m git add .
[0;36mhypersparse $[0m git commit -m 'demo'
[master e2dd5d1] demo
 1 file changed, 3 insertions(+)
[0;36mhypersparse $[0m git push
Counting objects: 5, done.
Delta compression using up to 40 threads.
Compressing objects:  20% (1/5)   Compressing objects:  40% (2/5)   Compressing objects:  60% (3/5)   Compressing objects:  80% (4/5)   Compressing objects: 100% (5/5)   Compressing objects: 100% (5/5), done.
Writing objects:  20% (1/5)   Writing objects:  40% (2/5)   Writing objects:  60% (3/5)   Writing objects:  80% (4/5)   Writing objects: 100% (5/5)   Writing objects: 100% (5/5), 461 bytes | 0 bytes/s, done.
Total 5 (delta 4), reused 0 (delta 0)
remote: Resolving deltas:   0% (0/4)[Kremote: Resolving deltas:  25% (1/4)[Kremote: Resolving deltas:  50% (2/4)[Kremote: Resolving deltas:  75% (3/4)[Kremote: Resolving deltas: 100% (4/4)[Kremote: Resolving deltas: 100% (4/4), completed with 4 local objects.[K
To https://github.com/DrTimothyAldenDavis/GraphBLAS.git
   6854d80..e2dd5d1  master -> master
[0;36mhypersparse $[0m pwd
/home/faculty/davis/sparse/GraphBLAS/GraphBLAS/demo
[0;36mhypersparse $[0m ack integerMpower
[0;36mhypersparse $[0m cd ..
[0;36mhypersparse $[0m !a
ack integerMpower
[0;36mhypersparse $[0m vi demo/upeup[Kpw
pw: command not found
[0;36mhypersparse $[0m pwd
/home/faculty/davis/sparse/GraphBLAS/GraphBLAS
[0;36mhypersparse $[0m dir
total 44
4 [0m[01;32mbuild[0m/  8 CMakeLists.txt  4 Contents.m  4 [01;32mdemo[0m/  4 [01;32m@GrB[0m/  4 Makefile  8 README.md  4 [01;32mrename[0m/  4 [01;32mtest[0m/
[0;36mhypersparse $[0m vi demo/graphblas_demo.m
[?1000h[?1049h[?1h=[2;1H▽[6n[2;1H  [1;1H[1;79r[?12;25h[?12l[?25h[27m[23m[m[97m[40m[H[2J[?25l[79;1H"demo/graphblas_demo.m" 921L, 31812C[>c[1;1H[96m%% GraphBLAS: graph algorithms in the language of linear algebra
% GraphBLAS is a library for creating graph algorithms based on sparse
% linear algebraic operations over semirings.  Visit http://graphblas.org
% for more details and resources.  See also the SuiteSparse:GraphBLAS
% User Guide in this package.
%
% http://faculty.cse.tamu.edu/davis
%
% SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2021, All Rights Reserved.
% SPDX-License-Identifier: Apache-2.0

%% GraphBLAS: faster and more general sparse matrices for MATLAB
% GraphBLAS is not only useful for creating graph algorithms; it also
% supports a wide range of sparse matrix data types and operations.
% MATLAB can compute C=A*B with just two semirings: 'plus.times.double'
% and 'plus.times.complex' for complex matrices.  GraphBLAS has 2,518
% built-in semirings, such as 'max.plus'
% (https://en.wikipedia.org/wiki/Tropical_semiring).  These semirings can
% be used to construct a wide variety of graph algorithms, based on
% operations on sparse adjacency matrices.
%
% MATLAB and GraphBLAS both provide sparse matrices of type double,
% logical, and double complex.  GraphBLAS adds sparse matrices of type:
% single, int8, int16, int32, int64, uint8, uint16, uint32, uint64, and
% single complex (with MATLAB matrices, these types can only be held in
% full matrices).

% reset to the default number of threads[m[97m[40m
[92mclear[m[97m[40m all
maxNumCompThreads ([91m'automatic'[m[97m[40m) [91m[40m;[m[97m[40m
GrB.[92mclear[m[97m[40m [91m[40m;[m[97m[40m
fprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m

format compact
rng ([91m'default'[m[97m[40m) [91m[40m;[m[97m[40m
X = [92m100[m[97m[40m [92m*[m[97m[40m [92mrand[m[97m[40m ([92m2[m[97m[40m) [91m[40m;[m[97m[40m
G = GrB (X)[14C[96m% GraphBLAS copy of a matrix X, same type

%% Sparse integer matrices
% Here's an int8 version of the same matrix:[m[97m[40m

S = int8 (G)[13C[96m% convert G to a full MATLAB int8 matrix[m[97m[40m
S ([92m1[m[97m[40m,[92m1[m[97m[40m) = [92m0[m[97m[40m[14C[96m% add an explicit zero to S[m[97m[40m
G = GrB (X, [91m'int8'[m[97m[40m)      [96m% a GraphBLAS full int8 matrix[m[97m[40m
G ([92m1[m[97m[40m,[92m1[m[97m[40m) = [92m0[m[97m[40m[14C[96m% add an explicit zero to G[m[97m[40m
G = GrB.prune (G)[8C[96m% a GraphBLAS sparse int8 matrix[m[97m[40m

[92mtry[m[97m[40m
    S = sparse (S) [91m[40m;[m[97m[40m     [96m% MATLAB can't create sparse int8 matrices[m[97m[40m
[92mcatch[m[97m[40m me
    display (me)
[92mend[m[97m[40m

[96m%% Sparse single-precision matrices
% Matrix operations in GraphBLAS are typically as fast, or faster than
% MATLAB.  Here's an unfair comparison: computing X^2 with MATLAB in
% double precision and with GraphBLAS in single precision.  You would
% naturally expect GraphBLAS to be faster. 
%
% CAVEAT:  MATLAB R2021a uses SuiteSparse:GraphBLAS v3.3.3 for C=A*B,
% so on that version, we're comparing 2 versions by the same author.
%
% Please wait ...[m[97m[40m

n = [92m1e5[m[97m[40m [91m[40m;[m[97m[40m
X = spdiags ([92mrand[m[97m[40m (n, [92m201[m[97m[40m), [92m-100[m[97m[40m:[92m100[m[97m[40m, n, n) [91m[40m;[m[97m[40m
G = GrB (X, [91m'single'[m[97m[40m) [91m[40m;[m[97m[40m
G2 = G[92m^2[m[97m[40m [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m
tic
G2 = G[92m^2[m[97m[40m [91m[40m;[m[97m[40m
gb_time = toc [91m[40m;[m[97m[40m
X2 = X[92m^2[m[97m[40m [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m
tic
X2 = X[92m^2[m[97m[40m [91m[40m;[m[97m[40m
matlab_time = toc [91m[40m;[m[97m[40m
fprintf ([91m'\nGraphBLAS time: %g sec (in single)\n'[m[97m[40m, gb_time) [91m[40m;[m[97m[40m
fprintf ([91m'MATLAB time:    %g sec (in double)\n'[m[97m[40m, matlab_time) [91m[40m;[m[97m[40m
fprintf ([91m'Speedup of GraphBLAS over MATLAB: %g\n'[m[97m[40m, [96m...[m[97m[40m[79;95H1,1[11CTop[1;1H[?12l[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[79;95H72,1[72;1H[?12l[?25h[79;1H[?1006l[?1002l[79;1H[K[79;1H[?1l>[?1049l[0;36mhypersparse $[0m vi @GrB/mpower.m 
[?1000h[?1049h[?1h=[2;1H▽[6n[2;1H  [1;1H[1;79r[?12;25h[?12l[?25h[27m[23m[m[97m[40m[H[2J[?25l[79;1H"@GrB/mpower.m" 50L, 1297C[>c[1;1H[1m[95mfunction[m[97m[40m C = mpower (A, B)
[96m%A^B matrix power.
% C = A^B computes the matrix power of A raised to the B. A must be a
% square matrix.  B must an integer >= 0.
%
% See also GrB/power.

% SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2021, All Rights Reserved.
% SPDX-License-Identifier: Apache-2.0[m[97m[40m

[92mif[m[97m[40m (isobject (A))
    A = A.opaque [91m[40m;[m[97m[40m
[92mend

if[m[97m[40m (isobject (B))
    B = B.opaque [91m[40m;[m[97m[40m
[92mend[m[97m[40m

[1m[95m[[m[97m[40mam, an, atype[1m[95m][m[97m[40m = gbsize (A) [91m[40m;[m[97m[40m
[1m[95m[[m[97m[40mbm, bn[1m[95m][m[97m[40m = gbsize (B) [91m[40m;[m[97m[40m
a_is_scalar = (am [92m==[m[97m[40m [92m1[m[97m[40m) [92m&&[m[97m[40m (an [92m==[m[97m[40m [92m1[m[97m[40m) [91m[40m;[m[97m[40m
b_is_scalar = (bm [92m==[m[97m[40m [92m1[m[97m[40m) [92m&&[m[97m[40m (bn [92m==[m[97m[40m [92m1[m[97m[40m) [91m[40m;[m[97m[40m

[92mif[m[97m[40m (a_is_scalar [92m&&[m[97m[40m b_is_scalar)
    C = GrB (gb_power (A, B)) [91m[40m;[m[97m[40m
[92melse
[m[97m[40m    [92mif[m[97m[40m (am [92m~[m[97m[40m= an)[28;9H[1m[95merror[m[97m[40m ([91m'For C=A^B, A must be square'[m[97m[40m) [91m[40m;[m[97m[40m
    [92mend
[m[97m[40m    [92mif[m[97m[40m ([92m~[m[97m[40mb_is_scalar)[31;9H[1m[95merror[m[97m[40m ([91m'For C=A^B, B must be a non-negative integer scalar'[m[97m[40m) [91m[40m;[m[97m[40m
    [92mend[m[97m[40m
    b = gb_scalar (B) [91m[40m;[m[97m[40m
    [92mif[m[97m[40m ([92m~[m[97m[40m(isreal (b) [92m&&[m[97m[40m isfinite (b) [92m&&[m[97m[40m [92mround[m[97m[40m (b) [92m==[m[97m[40m b [92m&&[m[97m[40m b [92m>=[m[97m[40m [92m0[m[97m[40m))[35;9H[1m[95merror[m[97m[40m ([91m'For C=A^B, B must be a non-negative integer scalar'[m[97m[40m) [91m[40m;[m[97m[40m
    [92mend
[m[97m[40m    [92mif[m[97m[40m (b [92m==[m[97m[40m [92m0[m[97m[40m)[38;9H[96m% C = A^0 = I[m[97m[40m[39;9H[92mif[m[97m[40m (isequal (atype, [91m'single complex'[m[97m[40m))[40;13Hatype = [91m'single'[m[97m[40m [91m[40m;[m[97m[40m[41;9H[92melseif[m[97m[40m (isequal (atype, [91m'double complex'[m[97m[40m))[42;13Hatype = [91m'double'[m[97m[40m [91m[40m;[m[97m[40m[43;9H[92mend[m[97m[40m[44;9HC = GrB (gb_speye ([91m'mpower'[m[97m[40m, an, atype)) [91m[40m;[m[97m[40m
    [92melse[m[97m[40m[46;9H[96m% C = A^b where b > 0 is an integer[m[97m[40m[47;9HC = GrB (gb_mpower (A, b)) [91m[40m;[m[97m[40m
    [92mend
end[m[97m[40m

[94m~                                                                                                               [52;1H~                                                                                                               [53;1H~                                                                                                               [54;1H~                                                                                                               [55;1H~                                                                                                               [56;1H~                                                                                                               [57;1H~                                                                                                               [58;1H~                                                                                                               [59;1H~                                                                                                               [60;1H~                                                                                                               [61;1H~                                                                                                               [62;1H~                                                                                                               [63;1H~                                                                                                               [64;1H~                                                                                                               [65;1H~                                                                                                               [66;1H~                                                                                                               [67;1H~                                                                                                               [68;1H~                                                                                                               [69;1H~                                                                                                               [70;1H~                                                                                                               [71;1H~                                                                                                               [72;1H~                                                                                                               [73;1H~                                                                                                               [74;1H~                                                                                                               [75;1H~                                                                                                               [76;1H~                                                                                                               [77;1H~                                                                                                               [78;1H~                                                                                                               [m[97m[40m[79;95H1,1[11CAll[1;1H[?12l[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[79;1H[K[79;1H:[?12l[?25he[?25l[?12l[?25h[?25l [?12l[?25hp[?25l[?12l[?25hr[?25l[?12l[?25hi[?25l[?12l[?25h...[?25l[79;7H[K[79;7H[?12l[?25h[?25l[79;2H[K[79;2H[?12l[?25hq[?25l[?12l[?25h[?25l[?1006l[?1002l[79;1H[K[79;1H[?1l>[?12l[?25h[?1049l[0;36mhypersparse $[0m pwd
/home/faculty/davis/sparse/GraphBLAS/GraphBLAS
[0;36mhypersparse $[0m vi demo/graphblas_demo.m 
[?1000h[?1049h[?1h=[2;1H▽[6n[2;1H  [1;1H[1;79r[?12;25h[?12l[?25h[27m[23m[m[97m[40m[H[2J[?25l[79;1H"demo/graphblas_demo.m" 921L, 31812C[>c[1;1H[96m%% GraphBLAS: graph algorithms in the language of linear algebra
% GraphBLAS is a library for creating graph algorithms based on sparse
% linear algebraic operations over semirings.  Visit http://graphblas.org
% for more details and resources.  See also the SuiteSparse:GraphBLAS
% User Guide in this package.
%
% http://faculty.cse.tamu.edu/davis
%
% SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2021, All Rights Reserved.
% SPDX-License-Identifier: Apache-2.0

%% GraphBLAS: faster and more general sparse matrices for MATLAB
% GraphBLAS is not only useful for creating graph algorithms; it also
% supports a wide range of sparse matrix data types and operations.
% MATLAB can compute C=A*B with just two semirings: 'plus.times.double'
% and 'plus.times.complex' for complex matrices.  GraphBLAS has 2,518
% built-in semirings, such as 'max.plus'
% (https://en.wikipedia.org/wiki/Tropical_semiring).  These semirings can
% be used to construct a wide variety of graph algorithms, based on
% operations on sparse adjacency matrices.
%
% MATLAB and GraphBLAS both provide sparse matrices of type double,
% logical, and double complex.  GraphBLAS adds sparse matrices of type:
% single, int8, int16, int32, int64, uint8, uint16, uint32, uint64, and
% single complex (with MATLAB matrices, these types can only be held in
% full matrices).

% reset to the default number of threads[m[97m[40m
[92mclear[m[97m[40m all
maxNumCompThreads ([91m'automatic'[m[97m[40m) [91m[40m;[m[97m[40m
GrB.[92mclear[m[97m[40m [91m[40m;[m[97m[40m
fprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m

format compact
rng ([91m'default'[m[97m[40m) [91m[40m;[m[97m[40m
X = [92m100[m[97m[40m [92m*[m[97m[40m [92mrand[m[97m[40m ([92m2[m[97m[40m) [91m[40m;[m[97m[40m
G = GrB (X)[14C[96m% GraphBLAS copy of a matrix X, same type

%% Sparse integer matrices
% Here's an int8 version of the same matrix:[m[97m[40m

S = int8 (G)[13C[96m% convert G to a full MATLAB int8 matrix[m[97m[40m
S ([92m1[m[97m[40m,[92m1[m[97m[40m) = [92m0[m[97m[40m[14C[96m% add an explicit zero to S[m[97m[40m
G = GrB (X, [91m'int8'[m[97m[40m)      [96m% a GraphBLAS full int8 matrix[m[97m[40m
G ([92m1[m[97m[40m,[92m1[m[97m[40m) = [92m0[m[97m[40m[14C[96m% add an explicit zero to G[m[97m[40m
G = GrB.prune (G)[8C[96m% a GraphBLAS sparse int8 matrix[m[97m[40m

[92mtry[m[97m[40m
    S = sparse (S) [91m[40m;[m[97m[40m     [96m% MATLAB can't create sparse int8 matrices[m[97m[40m
[92mcatch[m[97m[40m me
    display (me)
[92mend[m[97m[40m

[96m%% Sparse single-precision matrices
% Matrix operations in GraphBLAS are typically as fast, or faster than
% MATLAB.  Here's an unfair comparison: computing X^2 with MATLAB in
% double precision and with GraphBLAS in single precision.  You would
% naturally expect GraphBLAS to be faster. 
%
% CAVEAT:  MATLAB R2021a uses SuiteSparse:GraphBLAS v3.3.3 for C=A*B,
% so on that version, we're comparing 2 versions by the same author.
%
% Please wait ...[m[97m[40m

n = [92m1e5[m[97m[40m [91m[40m;[m[97m[40m
X = spdiags ([92mrand[m[97m[40m (n, [92m201[m[97m[40m), [92m-100[m[97m[40m:[92m100[m[97m[40m, n, n) [91m[40m;[m[97m[40m
G = GrB (X, [91m'single'[m[97m[40m) [91m[40m;[m[97m[40m
G2 = G[92m^2[m[97m[40m [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m
tic
G2 = G[92m^2[m[97m[40m [91m[40m;[m[97m[40m
gb_time = toc [91m[40m;[m[97m[40m
X2 = X[92m^2[m[97m[40m [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m
tic
X2 = X[92m^2[m[97m[40m [91m[40m;[m[97m[40m
matlab_time = toc [91m[40m;[m[97m[40m
fprintf ([91m'\nGraphBLAS time: %g sec (in single)\n'[m[97m[40m, gb_time) [91m[40m;[m[97m[40m
fprintf ([91m'MATLAB time:    %g sec (in double)\n'[m[97m[40m, matlab_time) [91m[40m;[m[97m[40m
fprintf ([91m'Speedup of GraphBLAS over MATLAB: %g\n'[m[97m[40m, [96m...[m[97m[40m[79;95H1,1[11CTop[1;1H[?12l[?25h[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[79;1H[K[79;1H/[?12l[?25h^[?25l[?12l[?25h2[?25l[?12l[?25h[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[m[97m[40m[97m[41mE486: Pattern not found: ^2[m[97m[40m[79;28H[K[79;95H1,1[11CTop[1;1H[?12l[?25h[?25l[79;1H[K[79;1H/[?12l[?25h\[?25l[?12l[?25h^[?25l[?12l[?25h2[?25l[?12l[?25h[?25l[56;52H[4m[30m[103m^2[68;7H^2[70;7H^2[72;7H^2[74;7H^2[m[97m[40m[79;95H56,52[9CTop[56;52H[?12l[?25h[?25l[79;1H[1m-- INSERT --[m[97m[40m[79;95H[K[79;95H56,52[9CTop[56;52H[?12l[?25h[?25l[96m*[m[97m[40m[4m[30m[103m^2[m[97m[40m[96m with MATLAB in[m[97m[40m[79;99H3[56;53H[?12l[?25h[?25l[96mX[m[97m[40m[4m[30m[103m^2[m[97m[40m[96m with MATLAB in[m[97m[40m[79;99H4[56;54H[?12l[?25h[79;1H[K[56;53H[?25l[79;95H56,53[9CTop[56;53H[?12l[?25h[?25l[79;99H4[56;54H[?12l[?25h[?25l[96m2 with MATLAB in[m[97m[40m[56;70H[K[56;54H[?12l[?25h[?25l[96m with MATLAB in[m[97m[40m[56;69H[K[56;54H[?12l[?25h[?25l[79;1H/\^2[79;95H[K[79;1H[94C68,7[10CTop[68;7H[?12l[?25h[?25l[79;1H[1m-- INSERT --[m[97m[40m[79;95H[K[79;95H68,7[10CTop[68;7H[?12l[?25h[?25l[92m*[m[97m[40m[4m[30m[103m^2[m[97m[40m [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m[79;98H8[68;8H[?12l[?25h[?25lG[4m[30m[103m^2[m[97m[40m [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m[79;98H9[68;9H[?12l[?25h[79;1H[K[68;8H[?25l[79;95H68,8[10CTop[68;8H[?12l[?25h[?25l[79;98H9[68;9H[?12l[?25h[?25l2 [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m[68;22H[K[68;9H[?12l[?25h[?25l [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m[68;21H[K[68;9H[?12l[?25h[?25l[79;1H/\^2[79;95H[K[79;1H[94C70,7[10CTop[70;7H[?12l[?25h[?25l[79;1H[1m-- INSERT --[m[97m[40m[79;95H[K[79;95H70,7[10CTop[70;7H2 [91m[40m;[m[97m[40m[70;10H[K[70;7H[?12l[?25h[?25l[92m*2[m[97m[40m [91m[40m;[m[97m[40m[79;98H8[70;8H[?12l[?25h[?25lG2 [91m[40m;[m[97m[40m[79;98H9[70;9H[?12l[?25h[79;1H[K[70;8H[?25l[79;95H70,8[10CTop[70;8H[?12l[?25h[?25l[79;1H/\^2[79;95H[K[79;1H[94C72,7[10CTop[72;7H[?12l[?25h[?25l[79;1H[1m-- INSERT --[m[97m[40m[79;95H[K[79;95H72,7[10CTop[72;7H2 [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m[72;20H[K[72;7H[?12l[?25h[?25l[92m*2[m[97m[40m [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m[79;98H8[72;8H[?12l[?25h[?25lX2 [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m[79;98H9[72;9H[?12l[?25h[79;1H[K[72;8H[?25l[79;95H72,8[10CTop[72;8H[?12l[?25h[?25l[79;1H/\^2[79;95H[K[79;1H[94C74,7[10CTop[74;7H[?12l[?25h[?25l[79;1H[1m-- INSERT --[m[97m[40m[79;95H[K[79;95H74,7[10CTop[79;1H[K[74;7H[92m*[m[97m[40mX2 [91m[40m;[m[97m[40m[79;95H74,8[10CTop[74;8H[?12l[?25h[?25l[79;98H9[74;9H[?12l[?25h[?25l [91m[40m;[m[97m[40m[74;11H[K[74;9H[?12l[?25h[?25l[79;96H3,3[73;3H[?12l[?25h[?25l[79;96H2,9[72;9H[?12l[?25h[?25l [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m[72;21H[K[72;9H[?12l[?25h[?25l[79;1H/\^2[79;95H[K[79;1H[1;78r[1;1H[21M[1;79r[58;5Hmatlab_time [92m/[m[97m[40m gb_time) [91m[40m;[m[97m[40m
fprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m

[96m%% Mixing MATLAB and GraphBLAS matrices
% The error in the last computation is about eps('single') since
% GraphBLAS did its computation in single precision, while MATLAB used
% double precision.  MATLAB and GraphBLAS matrices can be easily
% combined, as in X2-G2.  The sparse single precision matrices take less
% memory space.[m[97m[40m

err = norm (X2 [92m-[m[97m[40m G2, [92m1[m[97m[40m) [92m/[m[97m[40m norm (X2,[92m1[m[97m[40m)
eps ([91m'single'[m[97m[40m)
whos G G2 X X2

[96m%% Faster matrix operations
% But even with standard double precision sparse matrices, GraphBLAS is
% typically faster than the built-in MATLAB methods.  Here's a fair
% comparison (caveat: these both use GraphBLAS in MATLAB R2021a):[m[97m[40m

G = GrB (X) [91m[40m;[m[97m[40m
G2 = G[4m[30m[103m^2[m[97m[40m [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m[79;1H[K[79;95H99,7[11C2%[78;7H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1Htic[79;95H[K[79;95H100,3[10C2%[78;3H[?12l[?25h[?25l[79;95H99,7 [77;7H[?12l[?25h[?25l

[1m-- INSERT --[m[97m[40m[79;95H[K[79;95H99,7[11C2%[77;7H2 [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m[77;20H[K[77;7H[?12l[?25h[?25lx2 [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m[79;98H8[77;8H[?12l[?25h[79;1H[K[77;7H[?25l[79;95H99,7[11C2%[77;7H[?12l[?25h[?25l2 [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m[77;20H[K[77;7H[?12l[?25h[?25l [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m[77;19H[K[77;7H[?12l[?25h[?25l

[1m-- INSERT --[m[97m[40m[79;95H[K[79;95H99,7[11C2%[77;7H[?12l[?25h[?25l[92m*[m[97m[40m [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m[79;98H8[77;8H[?12l[?25h[?25lG [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m[79;98H9[77;9H[?12l[?25h[79;1H[K[77;8H[?25l[79;95H99,8[11C2%[77;8H[?12l[?25h[?25l

/\^2[79;95H[K[79;1H[1;78r[78;1H
[1;79r[78;1HG2 = G[4m[30m[103m^2[m[97m[40m [91m[40m;[m[97m[40m[79;1H[K[79;95H101,7[10C2%[78;7H[?12l[?25h[?25l2 [91m[40m;[m[97m[40m[78;10H[K[78;7H[?12l[?25h[?25l [91m[40m;[m[97m[40m[78;9H[K[78;7H[?12l[?25h[?25l
[1m-- INSERT --[m[97m[40m[79;95H[K[79;95H101,7[10C2%[78;7H[?12l[?25h[?25l[92m*[m[97m[40m [91m[40m;[m[97m[40m[79;99H8[78;8H[?12l[?25h[?25lG [91m[40m;[m[97m[40m[79;99H9[78;9H[?12l[?25h[79;1H[K[78;8H[?25l[79;95H101,8[10C2%[78;8H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1Hgb_time = toc [91m[40m;[m[97m[40m[79;95H[K[79;95H102,8[10C2%[78;8H[?12l[?25h[?25l[1;78r[78;1H
[1;79r[78;1Herr = norm (X2 [92m-[m[97m[40m G2, [92m1[m[97m[40m) [92m/[m[97m[40m norm (X2,[92m1[m[97m[40m)[79;95H[K[79;95H103,8[10C2%[78;8H[?12l[?25h[?25l
/\^2[79;95H[K[79;1H[27m[23m[m[97m[40m[H[2J[1;1HC1 = A[92m-[m[97m[40mB
C2 = GrB.eadd ([91m'+'[m[97m[40m, A, GrB.apply ([91m'-'[m[97m[40m, B))
err = norm (C1[92m-[m[97m[40mC2,[92m1[m[97m[40m)

[96m%% Element-wise 'multiplication'
% For C = A.*B, the result C is the set intersection of the pattern of A
% and B.  The operator is applied to entries in both A and B.  Entries in
% A but not B, or B but not A, do not appear in the result C.[m[97m[40m

C1 = A[92m.*[m[97m[40mB
C2 = GrB.emult ([91m'*'[m[97m[40m, A, B)
C3 = double (A) [92m.*[m[97m[40m double (B)

[96m%%
% Just as in GrB.eadd, any operator can be used in GrB.emult:[m[97m[40m

A
B
C2 = GrB.emult ([91m'max'[m[97m[40m, A, B)

[96m%% Overloaded operators
% The following operators all work as you would expect for any matrix.
% The matrices A and B can be GraphBLAS matrices, or MATLAB sparse or
% dense matrices, in any combination, or scalars where appropriate,
% The matrix M is logical (MATLAB or GraphBLAS):
%
%    A+B   A-B  A*B   A.*B  A./B  A.\B  A.^b   A/b   C=A(I,J)  C(M)=A
%    -A    +A   ~A    A'    A.'   A&B   A|B    b\A   C(I,J)=A  C=A(M)
%    A~=B  A>B  A==B  A<=B  A>=B  A<B   [A,B]  [A;B] C(A)
%    A(1:end,1:end)
%
% For A^b, b must be a non-negative integer.[m[97m[40m

C1 = [1m[95m[[m[97m[40mA B[1m[95m][m[97m[40m [91m[40m;[m[97m[40m
C2 = [1m[95m[[m[97m[40mdouble(A) double(B)[1m[95m][m[97m[40m [91m[40m;[m[97m[40m
assert (isequal (double (C1), C2))

[96m%%[m[97m[40m
C1 = A[4m[30m[103m^2[m[97m[40m
C2 = double (A)[4m[30m[103m^2[m[97m[40m [91m[40m;[m[97m[40m
err = norm (C1 [92m-[m[97m[40m C2, [92m1[m[97m[40m)
assert (err [92m<[m[97m[40m [92m1e-12[m[97m[40m)

[96m%%[m[97m[40m
C1 = A ([92m1[m[97m[40m:[92m2[m[97m[40m,[92m2[m[97m[40m:[92mend[m[97m[40m)
A = double (A) [91m[40m;[m[97m[40m
C2 = A ([92m1[m[97m[40m:[92m2[m[97m[40m,[92m2[m[97m[40m:[92mend[m[97m[40m) [91m[40m;[m[97m[40m
assert (isequal (double (C1), C2))

[96m%% Overloaded functions
% Many MATLAB built-in functions can be used with GraphBLAS matrices:
%
% A few differences with the built-in functions:
%
%   S = sparse (G)        % converts G to sparse/hypersparse
%   F = full (G)          % adds explicit zeros, so numel(F)==nnz(F)
%   F = full (G,type,id)  % adds explicit identity values to a GrB matrix
%   disp (G, level)       % display a GrB matrix G; level=2 is the default.
%
% In the list below, the first set of Methods are overloaded built-in
% methods.  They are used as-is on GraphBLAS matrices, such as C=abs(G).
% The Static methods are prefixed with "GrB.", as in C = GrB.apply ( ... ).

%%[m[97m[40m

[92mmethods[m[97m[40m GrB

[96m%% Zeros are handled differently
% Explicit zeros cannot be automatically dropped from a GraphBLAS matrix,
% like they are in MATLAB sparse matrices.  In a shortest-path problem,
% for example, an edge A(i,j) that is missing has an infinite weight,
% (the monoid identity of min(x,y) is +inf).  A zero edge weight A(i,j)=0
% is very different from an entry that is not present in A.  However, if
% a GraphBLAS matrix is converted into a MATLAB sparse matrix, explicit
% zeros are dropped, which is the convention for a MATLAB sparse matrix.
% They can also be dropped from a GraphBLAS matrix using the GrB.select
% method.[m[97m[40m[79;95H280,7[9C28%[39;7H[?12l[?25h[?25l[79;1H/\^2[79;95H[K[79;1H[94C281,16[8C28%[40;16H[?12l[?25h[?25l[79;95H[K[79;1H[27m[23m[m[97m[40m[H[2J[1;1Hfprintf ([91m'the format of G is:    %s\n'[m[97m[40m, GrB.format (G)) [91m[40m;[m[97m[40m
H = GrB (C)
fprintf ([91m'the format of H is:    %s\n'[m[97m[40m, GrB.format (H)) [91m[40m;[m[97m[40m
err = norm (H[92m-[m[97m[40mG,[92m1[m[97m[40m)

[96m%% Hypersparse, sparse, bitmap, and full matrices
% SuiteSparse:GraphBLAS can use four kinds of sparse matrix data
% structures: hypersparse, sparse, bitmap, and full, in both 'by col' and
% 'by row' formats, for a total of eight different combinations.  In the
% 'sparse by col' that MATLAB uses for its sparse matrices, an m-by-n
% matrix A takes O(n+nnz(A)) space.  MATLAB can create huge column
% vectors, but not huge matrices (when n is huge).[m[97m[40m

[92mclear[m[97m[40m
[1m[95m[[m[97m[40mc, huge[1m[95m][m[97m[40m = computer [91m[40m;[m[97m[40m
C = sparse (huge, [92m1[m[97m[40m)    [96m% MATLAB can create a huge-by-1 sparse column[m[97m[40m
[92mtry[m[97m[40m
    C = sparse (huge, huge)     [96m% but this fails[m[97m[40m
[92mcatch[m[97m[40m me
    error_expected = me
[92mend[m[97m[40m

[96m%%
% In a GraphBLAS hypersparse matrix, an m-by-n matrix A takes only
% O(nnz(A)) space.  The difference can be huge if nnz (A) << n.[m[97m[40m

[92mclear[m[97m[40m
[1m[95m[[m[97m[40mc, huge[1m[95m][m[97m[40m = computer [91m[40m;[m[97m[40m
G = GrB (huge, [92m1[m[97m[40m)[12C[96m% no problem for GraphBLAS[m[97m[40m
H = GrB (huge, huge)[9C[96m% this works in GraphBLAS too

%%
% Operations on huge hypersparse matrices are very fast; no component of
% the time or space complexity is Omega(n).[m[97m[40m

I = randperm (huge, [92m2[m[97m[40m) [91m[40m;[m[97m[40m
J = randperm (huge, [92m2[m[97m[40m) [91m[40m;[m[97m[40m
H (I,J) = magic ([92m2[m[97m[40m) [91m[40m;[m[97m[40m[8C[96m% add 4 nonzeros to random locations in H[m[97m[40m
H (I,I) = [92m10[m[97m[40m [92m*[m[97m[40m [1m[95m[[m[97m[40m[92m1[m[97m[40m [92m2[m[97m[40m [91m[40m;[m[97m[40m [92m3[m[97m[40m [92m4[m[97m[40m[1m[95m][m[97m[40m [91m[40m;[m[97m[40m [96m% so H[m[97m[40m[4m[30m[103m^2[m[97m[40m[96m is not all zero[m[97m[40m
H = H[4m[30m[103m^2[m[97m[40m [91m[40m;[m[97m[40m[20C[96m% square H[m[97m[40m
H = (H[92m'[m[97m[40m [92m*[m[97m[40m [92m2[m[97m[40m) [91m[40m;[m[97m[40m[15C[96m% transpose H and double the entries[m[97m[40m
K = pi [92m*[m[97m[40m spones (H) [91m[40m;[m[97m[40m
H = H [92m+[m[97m[40m K[20C[96m% add pi to each entry in H

%% numel uses vpa if the matrix is really huge[m[97m[40m
e1 = numel (G)[15C[96m% this is huge, but still a flint[m[97m[40m
e2 = numel (H)[15C[96m% this is huge[m[97m[40m[4m[30m[103m^2[m[97m[40m[96m, which needs vpa[m[97m[40m
whos e1 e2

[96m%%
% All of these matrices take very little memory space:[m[97m[40m
whos C G H K

[96m%% The mask and accumulator
% When not used in overloaded operators or built-in functions, many
% GraphBLAS methods of the form GrB.method ( ... ) can optionally use a
% mask and/or an accumulator operator.  If the accumulator is '+' in
% GrB.mxm, for example, then C = C + A*B is computed.  The mask acts much
% like logical indexing in MATLAB.  With a logical mask matrix M,
% C<M>=A*B allows only part of C to be assigned.  If M(i,j) is true, then
% C(i,j) can be modified.  If false, then C(i,j) is not modified.
%
% For example, to set all values in C that are greater than 0.5 to 3:

%%[m[97m[40m
A = [92mrand[m[97m[40m ([92m3[m[97m[40m)
C = GrB.assign (A, A [92m>[m[97m[40m [92m0.5[m[97m[40m, [92m3[m[97m[40m) [91m[40m;[m[97m[40m     [96m% in GraphBLAS[m[97m[40m
C1 = GrB (A) [91m[40m;[m[97m[40m C1 (A [92m>[m[97m[40m [92m.5[m[97m[40m) = [92m3[m[97m[40m[7C[96m% also in GraphBLAS[m[97m[40m
C2 = A[7C[91m[40m;[m[97m[40m C2 (A [92m>[m[97m[40m [92m.5[m[97m[40m) = [92m3[m[97m[40m[7C[96m% in MATLAB[m[97m[40m
err = norm (C [92m-[m[97m[40m C1, [92m1[m[97m[40m)
err = norm (C [92m-[m[97m[40m C2, [92m1[m[97m[40m)

[96m%% The descriptor
% Most GraphBLAS functions of the form GrB.method ( ... ) take an optional
% last argument, called the descriptor.  It is a MATLAB struct that can
% modify the computations performed by the method.  'help
% GrB.descriptorinfo' gives all the details.  The following is a short
% summary of the primary settings:[m[97m[40m[79;95H422,36[8C45%[39;36H[?12l[?25h[?25l[79;1H/\^2[79;95H[K[79;1H[94C423,6[9C45%[40;6H[?12l[?25h[?25l[79;95H[K[79;1H[94C430,44[8C45%[47;44H[?12l[?25h[?25l[79;95H[K[79;1H[38;5;224msearch hit BOTTOM, continuing at TOP[27m[23m[m[97m[40m[H[2J[1;1HC1 = A[92m-[m[97m[40mB
C2 = GrB.eadd ([91m'+'[m[97m[40m, A, GrB.apply ([91m'-'[m[97m[40m, B))
err = norm (C1[92m-[m[97m[40mC2,[92m1[m[97m[40m)

[96m%% Element-wise 'multiplication'
% For C = A.*B, the result C is the set intersection of the pattern of A
% and B.  The operator is applied to entries in both A and B.  Entries in
% A but not B, or B but not A, do not appear in the result C.[m[97m[40m

C1 = A[92m.*[m[97m[40mB
C2 = GrB.emult ([91m'*'[m[97m[40m, A, B)
C3 = double (A) [92m.*[m[97m[40m double (B)

[96m%%
% Just as in GrB.eadd, any operator can be used in GrB.emult:[m[97m[40m

A
B
C2 = GrB.emult ([91m'max'[m[97m[40m, A, B)

[96m%% Overloaded operators
% The following operators all work as you would expect for any matrix.
% The matrices A and B can be GraphBLAS matrices, or MATLAB sparse or
% dense matrices, in any combination, or scalars where appropriate,
% The matrix M is logical (MATLAB or GraphBLAS):
%
%    A+B   A-B  A*B   A.*B  A./B  A.\B  A.^b   A/b   C=A(I,J)  C(M)=A
%    -A    +A   ~A    A'    A.'   A&B   A|B    b\A   C(I,J)=A  C=A(M)
%    A~=B  A>B  A==B  A<=B  A>=B  A<B   [A,B]  [A;B] C(A)
%    A(1:end,1:end)
%
% For A^b, b must be a non-negative integer.[m[97m[40m

C1 = [1m[95m[[m[97m[40mA B[1m[95m][m[97m[40m [91m[40m;[m[97m[40m
C2 = [1m[95m[[m[97m[40mdouble(A) double(B)[1m[95m][m[97m[40m [91m[40m;[m[97m[40m
assert (isequal (double (C1), C2))

[96m%%[m[97m[40m
C1 = A[4m[30m[103m^2[m[97m[40m
C2 = double (A)[4m[30m[103m^2[m[97m[40m [91m[40m;[m[97m[40m
err = norm (C1 [92m-[m[97m[40m C2, [92m1[m[97m[40m)
assert (err [92m<[m[97m[40m [92m1e-12[m[97m[40m)

[96m%%[m[97m[40m
C1 = A ([92m1[m[97m[40m:[92m2[m[97m[40m,[92m2[m[97m[40m:[92mend[m[97m[40m)
A = double (A) [91m[40m;[m[97m[40m
C2 = A ([92m1[m[97m[40m:[92m2[m[97m[40m,[92m2[m[97m[40m:[92mend[m[97m[40m) [91m[40m;[m[97m[40m
assert (isequal (double (C1), C2))

[96m%% Overloaded functions
% Many MATLAB built-in functions can be used with GraphBLAS matrices:
%
% A few differences with the built-in functions:
%
%   S = sparse (G)        % converts G to sparse/hypersparse
%   F = full (G)          % adds explicit zeros, so numel(F)==nnz(F)
%   F = full (G,type,id)  % adds explicit identity values to a GrB matrix
%   disp (G, level)       % display a GrB matrix G; level=2 is the default.
%
% In the list below, the first set of Methods are overloaded built-in
% methods.  They are used as-is on GraphBLAS matrices, such as C=abs(G).
% The Static methods are prefixed with "GrB.", as in C = GrB.apply ( ... ).

%%[m[97m[40m

[92mmethods[m[97m[40m GrB

[96m%% Zeros are handled differently
% Explicit zeros cannot be automatically dropped from a GraphBLAS matrix,
% like they are in MATLAB sparse matrices.  In a shortest-path problem,
% for example, an edge A(i,j) that is missing has an infinite weight,
% (the monoid identity of min(x,y) is +inf).  A zero edge weight A(i,j)=0
% is very different from an entry that is not present in A.  However, if
% a GraphBLAS matrix is converted into a MATLAB sparse matrix, explicit
% zeros are dropped, which is the convention for a MATLAB sparse matrix.
% They can also be dropped from a GraphBLAS matrix using the GrB.select
% method.[m[97m[40m[79;95H280,7[9C28%[38;5;224msearch hit BOTTOM, continuing at TOP[m[97m[40m[79;95H[K[79;95H280,7[9C28%[39;7H[?12l[?25h[?25l[79;1H[K[79;1H:[?12l[?25hw[?25l[?12l[?25h[?25l"demo/graphblas_demo.m" 921L, 31813C written[50C280,7[9C28%[79;95H[K[79;95H280,7[9C28%[39;7H[?12l[?25h[?25l[79;96H76,28[35;28H[?12l[?25h[?25l[79;1H[K[79;1H/[?12l[?25he[?25l[?12l[?25hr[?25l[?12l[?25hr[?25l[?12l[?25h[?25l [?12l[?25h=[?25l[?12l[?25h[?25l[3;1H[4m[30m[103merr =[m[97m[40m[39;7H[92m^2[40;16H^2[m[97m[40m
[4m[30m[103merr =[m[97m[40m[79;95H282,1[9C28%[41;1H[?12l[?25h[?25l[27m[23m[m[97m[40m[H[2J[1;1H[96m%% GraphBLAS: graph algorithms in the language of linear algebra
% GraphBLAS is a library for creating graph algorithms based on sparse
% linear algebraic operations over semirings.  Visit http://graphblas.org
% for more details and resources.  See also the SuiteSparse:GraphBLAS
% User Guide in this package.
%
% http://faculty.cse.tamu.edu/davis
%
% SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2021, All Rights Reserved.
% SPDX-License-Identifier: Apache-2.0

%% GraphBLAS: faster and more general sparse matrices for MATLAB
% GraphBLAS is not only useful for creating graph algorithms; it also
% supports a wide range of sparse matrix data types and operations.
% MATLAB can compute C=A*B with just two semirings: 'plus.times.double'
% and 'plus.times.complex' for complex matrices.  GraphBLAS has 2,518
% built-in semirings, such as 'max.plus'
% (https://en.wikipedia.org/wiki/Tropical_semiring).  These semirings can
% be used to construct a wide variety of graph algorithms, based on
% operations on sparse adjacency matrices.
%
% MATLAB and GraphBLAS both provide sparse matrices of type double,
% logical, and double complex.  GraphBLAS adds sparse matrices of type:
% single, int8, int16, int32, int64, uint8, uint16, uint32, uint64, and
% single complex (with MATLAB matrices, these types can only be held in
% full matrices).

% reset to the default number of threads[m[97m[40m
[92mclear[m[97m[40m all
maxNumCompThreads ([91m'automatic'[m[97m[40m) [91m[40m;[m[97m[40m
GrB.[92mclear[m[97m[40m [91m[40m;[m[97m[40m
fprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m

format compact
rng ([91m'default'[m[97m[40m) [91m[40m;[m[97m[40m
X = [92m100[m[97m[40m [92m*[m[97m[40m [92mrand[m[97m[40m ([92m2[m[97m[40m) [91m[40m;[m[97m[40m
G = GrB (X)[14C[96m% GraphBLAS copy of a matrix X, same type

%% Sparse integer matrices
% Here's an int8 version of the same matrix:[m[97m[40m

S = int8 (G)[13C[96m% convert G to a full MATLAB int8 matrix[m[97m[40m
S ([92m1[m[97m[40m,[92m1[m[97m[40m) = [92m0[m[97m[40m[14C[96m% add an explicit zero to S[m[97m[40m
G = GrB (X, [91m'int8'[m[97m[40m)      [96m% a GraphBLAS full int8 matrix[m[97m[40m
G ([92m1[m[97m[40m,[92m1[m[97m[40m) = [92m0[m[97m[40m[14C[96m% add an explicit zero to G[m[97m[40m
G = GrB.prune (G)[8C[96m% a GraphBLAS sparse int8 matrix[m[97m[40m

[92mtry[m[97m[40m
    S = sparse (S) [91m[40m;[m[97m[40m     [96m% MATLAB can't create sparse int8 matrices[m[97m[40m
[92mcatch[m[97m[40m me
    display (me)
[92mend[m[97m[40m

[96m%% Sparse single-precision matrices
% Matrix operations in GraphBLAS are typically as fast, or faster than
% MATLAB.  Here's an unfair comparison: computing X*X with MATLAB in
% double precision and with GraphBLAS in single precision.  You would
% naturally expect GraphBLAS to be faster. 
%
% CAVEAT:  MATLAB R2021a uses SuiteSparse:GraphBLAS v3.3.3 for C=A*B,
% so on that version, we're comparing 2 versions by the same author.
%
% Please wait ...[m[97m[40m

n = [92m1e5[m[97m[40m [91m[40m;[m[97m[40m
X = spdiags ([92mrand[m[97m[40m (n, [92m201[m[97m[40m), [92m-100[m[97m[40m:[92m100[m[97m[40m, n, n) [91m[40m;[m[97m[40m
G = GrB (X, [91m'single'[m[97m[40m) [91m[40m;[m[97m[40m
G2 = G[92m*[m[97m[40mG [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m
tic
G2 = G[92m*[m[97m[40mG2 [91m[40m;[m[97m[40m
gb_time = toc [91m[40m;[m[97m[40m
X2 = X[92m*[m[97m[40mX [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m
tic
X2 = X[92m*[m[97m[40mX [91m[40m;[m[97m[40m
matlab_time = toc [91m[40m;[m[97m[40m
fprintf ([91m'\nGraphBLAS time: %g sec (in single)\n'[m[97m[40m, gb_time) [91m[40m;[m[97m[40m
fprintf ([91m'MATLAB time:    %g sec (in double)\n'[m[97m[40m, matlab_time) [91m[40m;[m[97m[40m
fprintf ([91m'Speedup of GraphBLAS over MATLAB: %g\n'[m[97m[40m, [96m...[m[97m[40m[79;95H1,1[11CTop[1;1H[?12l[?25h[?25l[79;1H/err =[79;95H[K[79;1H[1;78r[1;1H[11M[1;79r[68;5Hmatlab_time [92m/[m[97m[40m gb_time) [91m[40m;[m[97m[40m
fprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m

[96m%% Mixing MATLAB and GraphBLAS matrices
% The error in the last computation is about eps('single') since
% GraphBLAS did its computation in single precision, while MATLAB used
% double precision.  MATLAB and GraphBLAS matrices can be easily
% combined, as in X2-G2.  The sparse single precision matrices take less
% memory space.[m[97m[40m

[4m[30m[103merr =[m[97m[40m norm (X2 [92m-[m[97m[40m G2, [92m1[m[97m[40m) [92m/[m[97m[40m norm (X2,[92m1[m[97m[40m)[79;1H[K[79;95H89,1[11C1%[78;1H[?12l[?25h[?25l
/err =[79;95H[K[79;1H[1;78r[1;1H[14M[1;79r[65;1Heps ([91m'single'[m[97m[40m)
whos G G2 X X2

[96m%% Faster matrix operations
% But even with standard double precision sparse matrices, GraphBLAS is
% typically faster than the built-in MATLAB methods.  Here's a fair
% comparison (caveat: these both use GraphBLAS in MATLAB R2021a):[m[97m[40m

G = GrB (X) [91m[40m;[m[97m[40m
G2 = G[92m*[m[97m[40mG [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m
tic
G2 = G[92m*[m[97m[40mG [91m[40m;[m[97m[40m
gb_time = toc [91m[40m;[m[97m[40m
[4m[30m[103merr =[m[97m[40m norm (X2 [92m-[m[97m[40m G2, [92m1[m[97m[40m) [92m/[m[97m[40m norm (X2,[92m1[m[97m[40m)[79;1H[K[79;95H103,1[10C2%[78;1H[?12l[?25h[?25l[79;95H[K[79;1H/[?12l[?25hT[?25l[?12l[?25hh[?25l[?12l[?25he[?25l[?12l[?25h[?25l [?12l[?25he[?25l[?12l[?25hr[?25l[?12l[?25hr[?25l[?12l[?25ho[?25l[?12l[?25hr[?25l[?12l[?25h[?25l[38;5;224msearch hit BOTTOM, continuing at TOP[m[97m[40m[58;3H[4m[30m[103mThe error[m[97m[40m[64;1Herr =[78;1Herr =[79;95H83,3[11C2%[79;95H[K[79;95H83,3[11C2%[58;3H[?12l[?25h[?25l[79;96H2[57;3H[?12l[?25h[?25l[79;96H1,0-1[56;1H[?12l[?25h[?25l[79;96H0,3  [55;3H[?12l[?25h[?25l[79;95H79[54;3H[?12l[?25h[?25l[79;96H8[53;3H[?12l[?25h[?25l[79;96H7[52;3H[?12l[?25h[?25l[79;96H6[51;3H[?12l[?25h[?25l[79;96H5[50;3H[?12l[?25h[?25l[79;96H4[49;3H[?12l[?25h[?25l[79;96H3[48;3H[?12l[?25h[?25l[79;96H2[47;3H[?12l[?25h[?25l[79;96H1[46;3H[?12l[?25h[?25l[79;96H2[47;3H[?12l[?25h[?25l[79;96H3[48;3H[?12l[?25h[?25l[79;96H4[49;3H[?12l[?25h[?25l[79;96H5[50;3H[?12l[?25h[?25l[79;96H6[51;3H[?12l[?25h[?25l[79;96H7[52;3H[?12l[?25h[?25l[79;96H8[53;3H[?12l[?25h[?25l[79;96H9[54;3H[?12l[?25h[?25l[79;95H80[55;3H[?12l[?25h[?25l[79;96H1,0-1[56;1H[?12l[?25h[?25l[79;96H2,3  [57;3H[?12l[?25h[?25l[79;96H3[58;3H[?12l[?25h[?25l[79;96H4[59;3H[?12l[?25h[?25l[79;96H5[60;3H[?12l[?25h[?25l[79;96H6[61;3H[?12l[?25h[?25l[79;96H7[62;3H[?12l[?25h[?25l[79;96H8,0-1[63;1H[?12l[?25h[?25l[79;96H9,3  [64;3H[?12l[?25h[?25l[79;95H90[65;3H[?12l[?25h[?25l[79;95H89[64;3H[?12l[?25h[?25l[79;96H8,0-1[63;1H[?12l[?25h[?25l[79;96H7,3  [62;3H[?12l[?25h[?25l[79;96H6[61;3H[?12l[?25h[?25l[79;96H5[60;3H[?12l[?25h[?25l[79;96H4[59;3H[?12l[?25h[?25l[79;96H3[58;3H[?12l[?25h[?25l[79;96H2[57;3H[?12l[?25h[?25l[79;96H1,0-1[56;1H[?12l[?25h[?25l[79;96H0,3  [55;3H[?12l[?25h[?25l[79;95H79[54;3H[?12l[?25h[?25l[79;96H8[53;3H[?12l[?25h[?25l[79;96H7[52;3H[?12l[?25h[?25l[79;96H6[51;3H[?12l[?25h[?25l[79;96H5[50;3H[?12l[?25h[?25l[79;96H4[49;3H[?12l[?25h[?25l[79;96H3[48;3H[?12l[?25h[?25l[79;96H2[47;3H[?12l[?25h[?25l[79;96H1[46;3H[?12l[?25h[?25l[79;96H0[45;3H[?12l[?25h[?25l[79;98H11[45;11H[?12l[?25h[?25l[79;99H0[45;10H[?12l[?25h[?25l[79;98H9 [45;9H[?12l[?25h[?25l [91m[40m;[m[97m[40m[45;11H[K[45;9H[?12l[?25h[?25l[79;1H[K[79;1H:[?12l[?25hw[?25l[?12l[?25h[?25l"demo/graphblas_demo.m" 921L, 31812C written[50C70,9[11C2%[79;95H[K[79;95H70,9[11C2%[45;9H[?12l[?25h[?25l[79;1H[K[79;1H/[?12l[?25hG[?25l[?12l[?25h2[?25l[?12l[?25h[?25l[43;1H[4m[30m[103mG2

G2[m[97m[40m[58;3H[96mThe error[m[97m[40m[61;22H[4m[30m[103mG2[64;18HG2[66;8HG2[74;1HG2

G2[78;18HG2[m[97m[40m[79;95H86,22[10C2%[61;22H[?12l[?25h[?25l[79;95H[K[79;1H[94C89,18[10C2%[64;18H[?12l[?25h[?25l[79;95H67,23[42;23H[?12l[?25h[?25l[79;1H[1m-- INSERT --[m[97m[40m[79;95H[K[79;95H68,1[11C2%[43;78r[43;1H[L[1;79r[79;95H[K[79;95H68,1[11C2%[43;1H[?12l[?25h[?25lt[79;98H2[43;2H[?12l[?25h[?25li[79;98H3[43;3H[?12l[?25h[?25lc[79;98H4[43;4H[?12l[?25h[79;1H[K[43;3H[?25l[79;95H68,3[11C2%[43;3H[?12l[?25h[?25l[79;96H9[44;3H[?12l[?25h[?25l[79;1H[1m-- INSERT --[m[97m[40m[79;95H[K[79;95H70,1[11C2%[45;78r[45;1H[L[1;79r[79;95H[K[79;95H70,1[11C2%[45;1H[?12l[?25h[?25lt[79;98H2[45;2H[?12l[?25h[?25lo[79;98H3[45;3H[?12l[?25h[?25lc[79;98H4[45;4H[?12l[?25h[79;1H[K[45;3H[?25l[79;95H70,3[11C2%[45;3H[?12l[?25h[?25l[79;95H[K[79;1H:[?12l[?25hw[?25l[?12l[?25h[?25l"demo/graphblas_demo.m" 923L, 31820C written[50C70,3[11C2%[79;95H[K[79;95H70,3[11C2%[45;3H[?12l[?25h[?25l[79;95H60,68[35;68H[?12l[?25h[?25l[79;96H2,1 [37;1H[?12l[?25h[?25l[79;96H3,17[38;17H[?12l[?25h[?25l[79;96H4,0-1[39;1H[?12l[?25h[?25l[79;96H5,9  [40;9H[?12l[?25h[?25l[79;96H6,28[41;28H[?12l[?25h[?25l[79;96H7,23[42;23H[?12l[?25h[?25l[79;96H8,3 [43;3H[?12l[?25h[?25l[79;96H9,20[44;20H[?12l[?25h[?25l[79;95H70,3 [45;3H[?12l[?25h[?25l[79;96H1[46;3H[?12l[?25h[?25l[79;96H2,10[47;10H[?12l[?25h[?25l[79;96H3,15[48;15H[?12l[?25h[?25l[79;1H[1m-- INSERT --[m[97m[40m[79;13H[K[79;95H74,1[11C2%[49;78r[49;1H[L[1;79r[79;95H[K[79;95H74,1[11C2%[49;1H[?12l[?25h[?25lt[79;98H2[49;2H[?12l[?25h[?25li[79;98H3[49;3H[?12l[?25h[?25lc[79;98H4[49;4H[?12l[?25h[79;1H[K[49;3H[?25l[79;95H74,3[11C2%[49;3H[?12l[?25h[?25l[79;96H5[50;3H[?12l[?25h[?25l[79;1H[1m-- INSERT --[m[97m[40m[79;95H[K[79;95H76,1[11C2%[51;78r[51;1H[L[1;79r[79;95H[K[79;95H76,1[11C2%[51;1H[?12l[?25h[?25lt[79;98H2[51;2H[?12l[?25h[?25lo[79;98H3[51;3H[?12l[?25h[?25lc[79;98H4[51;4H[?12l[?25h[79;1H[K[51;3H[?25l[79;95H76,3[11C2%[51;3H[?12l[?25h[?25l[79;95H[K[79;1H:[?12l[?25hw[?25l[?12l[?25h[?25l"demo/graphblas_demo.m" 925L, 31828C written[50C76,3[11C2%[79;95H[K[79;95H76,3[11C2%[51;3H[?12l[?25h[?25l[79;95H67,23[42;23H[?12l[?25h[?25l[79;96H8,3 [43;3H[?12l[?25h[?25l[4m[30m[103mG2[m[97m[40m = G[92m*[m[97m[40mG [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m
toc[44;4H[K[45;2Hi
[4m[30m[103mG2[m[97m[40m = G[92m*[m[97m[40mG [91m[40m;[m[97m[40m
gb_time = toc [91m[40m;[m[97m[40m
tic[48;4H[K[49;1HX2 = X[92m*[m[97m[40mX [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m
toc[50;4H[K[51;2Hi
X2 = X[92m*[m[97m[40mX [91m[40m;[m[97m[40m
matlab_time = toc [91m[40m;[m[97m[40m
fprintf ([91m'\nGraphBLAS time: %g sec (in single)\n'[m[97m[40m, gb_time) [91m[40m;[m[97m[40m[55;11H[91mMATLAB time:    %g sec (in double)\n'[m[97m[40m, matlab_time) [91m[40m;[m[97m[40m[56;11H[91mSpeedup of GraphBLAS over MATLAB: %g\n'[m[97m[40m, [96m...[m[97m[40m[56;55H[K[57;1H    matlab_time [92m/[m[97m[40m gb_time) [91m[40m;[m[97m[40m[57;29H[K[58;1Hfprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m[59;1H[K[60;1H[96m%% Mixing MATLAB and GraphBLAS matrices
% The error in the last computation is about eps('single') since
% GraphBLAS did its computation in single precision, while MATLAB used
% double precision.  MATLAB and GraphBLAS matrices can be easily[m[97m[40m[63;65H[K[64;3H[96mcombined, as in X2-[m[97m[40m[4m[30m[103mG2[m[97m[40m[96m.  The sparse single precision matrices take less
% memory space.[m[97m[40m[65;16H[K[66;1H[K[67;1Herr = norm (X2 [92m-[m[97m[40m [4m[30m[103mG2[m[97m[40m, [92m1[m[97m[40m) [92m/[m[97m[40m norm (X2,[92m1[m[97m[40m)
eps ([91m'single'[m[97m[40m)[68;16H[K[69;1Hwhos G [4m[30m[103mG2[m[97m[40m X X2[70;1H[K[71;1H[96m%% Faster matrix operations
% But even with standard double precision sparse matrices, GraphBLAS is
% typically faster than the built-in MATLAB methods.  Here's a fair[m[97m[40m[73;68H[K[74;3H[96mcomparison (caveat: these both use GraphBLAS in MATLAB R2021a):[m[97m[40m[74;66H[K[75;1H[K[76;1HG = GrB (X) [91m[40m;[m[97m[40m
[4m[30m[103mG2[m[97m[40m = G[92m*[m[97m[40mG [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m
tic[78;4H[K[79;98H1[43;1H[?12l[?25h[?25l[79;96H9[44;1H[?12l[?25h[?25lti
[4m[30m[103mG2[m[97m[40m = G[92m*[m[97m[40mG [91m[40m;[m[97m[40m
gb_time = toc [91m[40m;[m[97m[40m
tic[47;4H[K[48;1HX2 = X[92m*[m[97m[40mX [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m
toc[49;4H[K[50;2Hi
X2 = X[92m*[m[97m[40mX [91m[40m;[m[97m[40m
matlab_time = toc [91m[40m;[m[97m[40m
fprintf ([91m'\nGraphBLAS time: %g sec (in single)\n'[m[97m[40m, gb_time) [91m[40m;[m[97m[40m[54;11H[91mMATLAB time:    %g sec (in double)\n'[m[97m[40m, matlab_time) [91m[40m;[m[97m[40m[55;11H[91mSpeedup of GraphBLAS over MATLAB: %g\n'[m[97m[40m, [96m...[m[97m[40m[55;55H[K[56;1H    matlab_time [92m/[m[97m[40m gb_time) [91m[40m;[m[97m[40m[56;29H[K[57;1Hfprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m[58;1H[K[59;1H[96m%% Mixing MATLAB and GraphBLAS matrices
% The error in the last computation is about eps('single') since
% GraphBLAS did its computation in single precision, while MATLAB used
% double precision.  MATLAB and GraphBLAS matrices can be easily[m[97m[40m[62;65H[K[63;3H[96mcombined, as in X2-[m[97m[40m[4m[30m[103mG2[m[97m[40m[96m.  The sparse single precision matrices take less
% memory space.[m[97m[40m[64;16H[K[65;1H[K[66;1Herr = norm (X2 [92m-[m[97m[40m [4m[30m[103mG2[m[97m[40m, [92m1[m[97m[40m) [92m/[m[97m[40m norm (X2,[92m1[m[97m[40m)
eps ([91m'single'[m[97m[40m)[67;16H[K[68;1Hwhos G [4m[30m[103mG2[m[97m[40m X X2[69;1H[K[70;1H[96m%% Faster matrix operations
% But even with standard double precision sparse matrices, GraphBLAS is
% typically faster than the built-in MATLAB methods.  Here's a fair[m[97m[40m[72;68H[K[73;3H[96mcomparison (caveat: these both use GraphBLAS in MATLAB R2021a):[m[97m[40m[73;66H[K[74;1H[K[75;1HG = GrB (X) [91m[40m;[m[97m[40m
[4m[30m[103mG2[m[97m[40m = G[92m*[m[97m[40mG [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m
tic[77;4H[K[78;1H[4m[30m[103mG2[m[97m[40m = G[92m*[m[97m[40mG [91m[40m;[44;1H[?12l[?25h[?25l[m[97m[40m[79;95H70[45;1H[?12l[?25h[?25l[79;96H1[46;1H[?12l[?25h[?25l[79;96H2[47;1H[?12l[?25h[?25l[79;96H3[48;1H[?12l[?25h[?25l[79;96H4[49;1H[?12l[?25h[?25l[79;96H5[50;1H[?12l[?25h[?25l[79;96H6[51;1H[?12l[?25h[?25l[79;96H7[52;1H[?12l[?25h[?25l[79;96H8[53;1H[?12l[?25h[?25l[79;96H9[54;1H[?12l[?25h[?25l[79;95H80[55;1H[?12l[?25h[?25l[79;96H1[56;1H[?12l[?25h[?25l[79;96H2[57;1H[?12l[?25h[?25l[79;96H3,0-1[58;1H[?12l[?25h[?25l[79;96H4,1  [59;1H[?12l[?25h[?25l[79;96H3,0-1[58;1H[?12l[?25h[?25l[79;96H2,1  [57;1H[?12l[?25h[?25l[79;96H1[56;1H[?12l[?25h[?25l[79;96H0[55;1H[?12l[?25h[?25l[79;95H79[54;1H[?12l[?25h[?25l[79;96H8[53;1H[?12l[?25h[?25l[79;96H7[52;1H[?12l[?25h[?25l[79;96H6[51;1H[?12l[?25h[?25l[79;96H5[50;1H[?12l[?25h[?25l[79;96H4[49;1H[?12l[?25h[?25l[79;96H3[48;1H[?12l[?25h[?25l[79;96H2[47;1H[?12l[?25h[?25lX2 = X[92m*[m[97m[40mX [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m
toc[48;4H[K[49;2Hi
X2 = X[92m*[m[97m[40mX [91m[40m;[m[97m[40m
matlab_time = toc [91m[40m;[m[97m[40m
fprintf ([91m'\nGraphBLAS time: %g sec (in single)\n'[m[97m[40m, gb_time) [91m[40m;[m[97m[40m[53;11H[91mMATLAB time:    %g sec (in double)\n'[m[97m[40m, matlab_time) [91m[40m;[m[97m[40m[54;11H[91mSpeedup of GraphBLAS over MATLAB: %g\n'[m[97m[40m, [96m...[m[97m[40m[54;55H[K[55;1H    matlab_time [92m/[m[97m[40m gb_time) [91m[40m;[m[97m[40m[55;29H[K[56;1Hfprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m[57;1H[K[58;1H[96m%% Mixing MATLAB and GraphBLAS matrices
% The error in the last computation is about eps('single') since
% GraphBLAS did its computation in single precision, while MATLAB used
% double precision.  MATLAB and GraphBLAS matrices can be easily[m[97m[40m[61;65H[K[62;3H[96mcombined, as in X2-[m[97m[40m[4m[30m[103mG2[m[97m[40m[96m.  The sparse single precision matrices take less
% memory space.[m[97m[40m[63;16H[K[64;1H[K[65;1Herr = norm (X2 [92m-[m[97m[40m [4m[30m[103mG2[m[97m[40m, [92m1[m[97m[40m) [92m/[m[97m[40m norm (X2,[92m1[m[97m[40m)
eps ([91m'single'[m[97m[40m)[66;16H[K[67;1Hwhos G [4m[30m[103mG2[m[97m[40m X X2[68;1H[K[69;1H[96m%% Faster matrix operations
% But even with standard double precision sparse matrices, GraphBLAS is
% typically faster than the built-in MATLAB methods.  Here's a fair[m[97m[40m[71;68H[K[72;3H[96mcomparison (caveat: these both use GraphBLAS in MATLAB R2021a):[m[97m[40m[72;66H[K[73;1H[K[74;1HG = GrB (X) [91m[40m;[m[97m[40m
[4m[30m[103mG2[m[97m[40m = G[92m*[m[97m[40mG [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m
tic[76;4H[K[77;1H[4m[30m[103mG2[m[97m[40m = G[92m*[m[97m[40mG [91m[40m;[m[97m[40m
gb_time = toc [91m[40m;[47;1H[?12l[?25h[?25l[m[97m[40m[79;96H3[48;1H[?12l[?25h[?25lti
X2 = X[92m*[m[97m[40mX [91m[40m;[m[97m[40m
matlab_time = toc [91m[40m;[m[97m[40m
fprintf ([91m'\nGraphBLAS time: %g sec (in single)\n'[m[97m[40m, gb_time) [91m[40m;[m[97m[40m[52;11H[91mMATLAB time:    %g sec (in double)\n'[m[97m[40m, matlab_time) [91m[40m;[m[97m[40m[53;11H[91mSpeedup of GraphBLAS over MATLAB: %g\n'[m[97m[40m, [96m...[m[97m[40m[53;55H[K[54;1H    matlab_time [92m/[m[97m[40m gb_time) [91m[40m;[m[97m[40m[54;29H[K[55;1Hfprintf ([91m'\n# of threads used by GraphBLAS: %d\n'[m[97m[40m, GrB.threads) [91m[40m;[m[97m[40m[56;1H[K[57;1H[96m%% Mixing MATLAB and GraphBLAS matrices
% The error in the last computation is about eps('single') since
% GraphBLAS did its computation in single precision, while MATLAB used
% double precision.  MATLAB and GraphBLAS matrices can be easily[m[97m[40m[60;65H[K[61;3H[96mcombined, as in X2-[m[97m[40m[4m[30m[103mG2[m[97m[40m[96m.  The sparse single precision matrices take less
% memory space.[m[97m[40m[62;16H[K[63;1H[K[64;1Herr = norm (X2 [92m-[m[97m[40m [4m[30m[103mG2[m[97m[40m, [92m1[m[97m[40m) [92m/[m[97m[40m norm (X2,[92m1[m[97m[40m)
eps ([91m'single'[m[97m[40m)[65;16H[K[66;1Hwhos G [4m[30m[103mG2[m[97m[40m X X2[67;1H[K[68;1H[96m%% Faster matrix operations
% But even with standard double precision sparse matrices, GraphBLAS is
% typically faster than the built-in MATLAB methods.  Here's a fair[m[97m[40m[70;68H[K[71;3H[96mcomparison (caveat: these both use GraphBLAS in MATLAB R2021a):[m[97m[40m[71;66H[K[72;1H[K[73;1HG = GrB (X) [91m[40m;[m[97m[40m
[4m[30m[103mG2[m[97m[40m = G[92m*[m[97m[40mG [91m[40m;[m[97m[40m  [96m% warmup[m[97m[40m
tic[75;4H[K[76;1H[4m[30m[103mG2[m[97m[40m = G[92m*[m[97m[40mG [91m[40m;[m[97m[40m
gb_time = toc [91m[40m;[m[97m[40m
err = norm (X2 [92m-[m[97m[40m [4m[30m[103mG2[m[97m[40m, [92m1[m[97m[40m) [92m/[m[97m[40m norm (X2,[92m1[m[97m[40m)[48;1H[?12l[?25h[?25l[79;1H[K[79;1H:[?12l[?25hw[?25l[?12l[?25h[?25l"demo/graphblas_demo.m" 921L, 31812C written[50C73,1[11C2%[79;95H[K[79;95H73,1[11C2%[48;1H[?12l[?25h[?25l[79;28H lines --7%--[79;41H[K[79;95H73,1[11C2%[48;1H[?12l[?25h[79;1H[?1006l[?1002l[79;1H[K[79;1H[?1l>[?1049l[0;36mhypersparse $[0m git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   demo/graphblas_demo.m[m

no changes added to commit (use "git add" and/or "git commit -a")
[0;36mhypersparse $[0m git diff
[?1h=[1mdiff --git a/GraphBLAS/demo/graphblas_demo.m b/GraphBLAS/demo/graphblas_demo.m[m[m
[1mindex 6e7822f..84f77ab 100644[m[m
[1m--- a/GraphBLAS/demo/graphblas_demo.m[m[m
[1m+++ b/GraphBLAS/demo/graphblas_demo.m[m[m
[36m@@ -53,7 +53,7 @@[m [mend[m[m
 [m[m
 %% Sparse single-precision matrices[m[m
 % Matrix operations in GraphBLAS are typically as fast, or faster than[m[m
[31m-% MATLAB.  Here's an unfair comparison: computing X^2 with MATLAB in[m[m
[32m+[m[32m% MATLAB.  Here's an unfair comparison: computing X*X with MATLAB in[m[m
 % double precision and with GraphBLAS in single precision.  You would[m[m
 % naturally expect GraphBLAS to be faster. [m[m
 %[m[m
[36m@@ -65,13 +65,13 @@[m [mend[m[m
 n = 1e5 ;[m[m
 X = spdiags (rand (n, 201), -100:100, n, n) ;[m[m
 G = GrB (X, 'single') ;[m[m
[31m-G2 = G^2 ;  % warmup[m[m
[32m+[m[32mG2 = G*G ;  % warmup[m[m
 tic[m[m
[31m-G2 = G^2 ;[m[m
[32m+[m[32mG2 = G*G ;[m[m
 gb_time = toc ;[m[m
[31m-X2 = X^2 ;  % warmup[m[m
[32m+[m[32mX2 = X*X ;  % warmup[m[m
 tic[m[m
[31m-X2 = X^2 ;[m[m
[32m+[m[32mX2 = X*X ;[m[m
 matlab_time = toc ;[m[m
 fprintf ('\nGraphBLAS time: %g sec (in single)\n', gb_time) ;[m[m
 fprintf ('MATLAB time:    %g sec (in double)\n', matlab_time) ;[m[m
[36m@@ -96,9 +96,9 @@[m [mwhos G G2 X X2[m[m
 % comparison (caveat: these both use GraphBLAS in MATLAB R2021a):[m[m
 [m[m
 G = GrB (X) ;[m[m
[31m-G2 = G^2 ;  % warmup[m[m
[32m+[m[32mG2 = G*G ;  % warmup[m[m
 tic[m[m
[31m-G2 = G^2 ;[m[m
[32m+[m[32mG2 = G*G ;[m[m
 gb_time = toc ;[m[m
 err = norm (X2 - G2, 1) / norm (X2,1)[m[m
 fprintf ('\nGraphBLAS time: %g sec (in double)\n', gb_time) ;[m[m
[K[?1l>[0;36mhypersparse $[0m git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   demo/graphblas_demo.m[m

no changes added to commit (use "git add" and/or "git commit -a")
[0;36mhypersparse $[0m git add .
[0;36mhypersparse $[0m git commit -m demo
[master e477e55] demo
 1 file changed, 7 insertions(+), 7 deletions(-)
[0;36mhypersparse $[0m git push
Counting objects: 5, done.
Delta compression using up to 40 threads.
Compressing objects:  20% (1/5)   Compressing objects:  40% (2/5)   Compressing objects:  60% (3/5)   Compressing objects:  80% (4/5)   Compressing objects: 100% (5/5)   Compressing objects: 100% (5/5), done.
Writing objects:  20% (1/5)   Writing objects:  40% (2/5)   Writing objects:  60% (3/5)   Writing objects:  80% (4/5)   Writing objects: 100% (5/5)   Writing objects: 100% (5/5), 504 bytes | 0 bytes/s, done.
Total 5 (delta 4), reused 0 (delta 0)
remote: Resolving deltas:   0% (0/4)[Kremote: Resolving deltas:  25% (1/4)[Kremote: Resolving deltas:  50% (2/4)[Kremote: Resolving deltas:  75% (3/4)[Kremote: Resolving deltas: 100% (4/4)[Kremote: Resolving deltas: 100% (4/4), completed with 4 local objects.[K
To https://github.com/DrTimothyAldenDavis/GraphBLAS.git
   e2dd5d1..e477e55  master -> master
[0;36mhypersparse $[0m exit
exit

Script done on Wed 28 Apr 2021 10:51:40 AM CDT
